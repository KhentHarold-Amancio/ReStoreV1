{"ast":null,"code":"export var CurveType = function (CurveType) {\n  CurveType[CurveType[\"CUBIC\"] = 0] = \"CUBIC\";\n  CurveType[CurveType[\"QUADRATIC\"] = 1] = \"QUADRATIC\";\n  return CurveType;\n}({});\nexport var EdgePosition = function (EdgePosition) {\n  EdgePosition[EdgePosition[\"AT_DATA_POINT\"] = 0] = \"AT_DATA_POINT\";\n  EdgePosition[EdgePosition[\"AROUND_DATA_POINT\"] = 1] = \"AROUND_DATA_POINT\";\n  return EdgePosition;\n}({});","map":{"version":3,"names":["CurveType","EdgePosition"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/node_modules/react-native-gifted-charts/src/utils/types.ts"],"sourcesContent":["import {ColorValue} from 'react-native';\nimport {chartTypes, yAxisSides} from './constants';\nimport {itemType} from '../LineChart/types';\n\nexport type RuleType = 'solid' | 'dashed' | 'dotted' | string;\n\nexport type RuleTypes = {\n  SOLID: RuleType;\n  DASHED: RuleType;\n  DOTTED: RuleType;\n};\n\nexport enum CurveType {\n  CUBIC,\n  QUADRATIC,\n}\n\nexport enum EdgePosition {\n  AT_DATA_POINT,\n  AROUND_DATA_POINT,\n}\n\nexport type RulesConfig = {\n  rulesLength?: number;\n  rulesColor?: ColorValue;\n  rulesThickness?: number;\n  rulesType?: RuleType;\n  dashWidth?: number;\n  dashGap?: number;\n};\n\nexport type PointerEvents = 'box-none' | 'none' | 'box-only' | 'auto';\n\nexport type secondaryYAxisType = {\n  noOfSections?: number;\n  maxValue?: number;\n  mostNegativeValue?: number;\n  stepValue?: number;\n  stepHeight?: number;\n  showFractionalValues?: boolean;\n  roundToDigits?: number;\n  noOfSectionsBelowXAxis?: number;\n\n  showYAxisIndices?: boolean;\n  yAxisIndicesHeight?: number;\n  yAxisIndicesWidth?: number;\n  yAxisIndicesColor?: ColorValue;\n\n  yAxisSide?: yAxisSides;\n  yAxisOffset?: number;\n  yAxisThickness?: number;\n  yAxisColor?: ColorValue;\n  yAxisLabelContainerStyle?: any;\n  yAxisLabelTexts?: Array<string> | undefined;\n  yAxisTextStyle?: any;\n  yAxisTextNumberOfLines?: number;\n  yAxisLabelWidth?: number;\n  hideYAxisText?: boolean;\n  yAxisLabelPrefix?: string;\n  yAxisLabelSuffix?: string;\n  hideOrigin?: boolean;\n  formatYLabel?: (label: string) => string;\n};\n\nexport type secondaryLineConfigType = {\n  zIndex?: number;\n  curved?: boolean;\n  curvature?: number;\n  curveType?: CurveType;\n  areaChart?: boolean;\n  color?: ColorValue;\n  thickness?: number;\n  zIndex1?: number;\n  strokeDashArray?: Array<number>;\n  startIndex?: number;\n  endIndex?: number;\n  hideDataPoints?: boolean;\n  dataPointsHeight?: number;\n  dataPointsWidth?: number;\n  dataPointsRadius?: number;\n  dataPointsColor?: string;\n  dataPointsShape?: string;\n  showValuesAsDataPointsText?: boolean;\n  startFillColor?: string;\n  endFillColor?: string;\n  startOpacity?: number;\n  endOpacity?: number;\n  textFontSize?: number;\n  textColor?: string;\n  showArrow?: boolean;\n  arrowConfig?: arrowConfigType;\n  isSecondary?: boolean;\n};\n\nexport type arrowConfigType = {\n  length: number;\n  width: number;\n  strokeWidth: number;\n  strokeColor: string;\n  fillColor: string;\n  showArrowBase: boolean;\n};\n\nexport type horizSectionPropTypes = {\n  width: number | undefined;\n  horizSections: Array<any>;\n  noOfSectionsBelowXAxis: number;\n  totalWidth: number;\n  endSpacing: number;\n  yAxisSide: yAxisSides;\n  horizontalRulesStyle: any;\n  noOfSections: number;\n  stepHeight: number;\n  yAxisLabelWidth: number;\n  yAxisLabelContainerStyle: any;\n  yAxisThickness: number;\n  yAxisColor: string;\n  xAxisThickness: number;\n  xAxisColor: string;\n  xAxisLength: number;\n  xAxisType: RuleType;\n  dashWidth: number;\n  dashGap: number;\n  rulesConfigArray: Array<RulesConfig>;\n  backgroundColor: string;\n  hideRules: boolean;\n  rulesLength: number;\n  rulesType: RuleType;\n  rulesThickness: number;\n  rulesColor: string;\n  spacing: number;\n  showYAxisIndices: boolean;\n  yAxisIndicesHeight: number;\n  yAxisIndicesWidth: number;\n  yAxisIndicesColor: string;\n\n  hideOrigin: boolean;\n  hideYAxisText: boolean;\n  showFractionalValues: boolean;\n  yAxisTextNumberOfLines: number;\n  yAxisLabelPrefix: string;\n  yAxisLabelSuffix: string;\n  yAxisTextStyle: any;\n  rotateYAxisTexts: number | undefined;\n  rtl: boolean;\n\n  containerHeight: number;\n  maxValue: number;\n\n  referenceLinesConfig: any;\n\n  yAxisLabelTexts: Array<string> | undefined;\n  yAxisOffset: number | undefined;\n\n  horizontal: boolean;\n  yAxisAtTop: boolean;\n\n  stepValue: number;\n  roundToDigits: number | undefined;\n\n  secondaryData: Array<any> | undefined;\n  secondaryYAxis: secondaryYAxisType | null;\n  formatYLabel?: (label: string) => string;\n};\n\ntype HorizSectionObject = {\n  value: string;\n};\n\nexport type HorizSectionsType = Array<HorizSectionObject>;\n\nexport type BarAndLineChartsWrapperTypes = {\n  chartType: chartTypes;\n  containerHeight: number;\n  noOfSectionsBelowXAxis: number;\n  stepHeight: number;\n  labelsExtraHeight: number;\n  yAxisLabelWidth: number;\n  horizontal: boolean;\n  rtl: boolean;\n  shiftX: number;\n  shiftY: number;\n  scrollRef: any;\n  yAxisAtTop: boolean;\n  initialSpacing: number;\n  data: Array<any>;\n  stackData: Array<any> | undefined;\n  secondaryData: Array<any> | undefined;\n  barWidth: number | undefined;\n  xAxisThickness: number;\n  totalWidth: number;\n  disableScroll: boolean;\n  showScrollIndicator: boolean;\n  scrollToEnd: boolean;\n  scrollToIndex: number | undefined;\n  scrollAnimation: boolean;\n  indicatorColor: 'black' | 'default' | 'white' | undefined;\n  setSelectedIndex: any;\n  spacing: number;\n  showLine: boolean;\n  lineConfig: any;\n  lineConfig2: any;\n  maxValue: number;\n  lineData: Array<any>;\n  lineData2: Array<any>;\n  animatedWidth: any;\n  lineBehindBars: boolean;\n  points: string | Array<any>;\n  points2: string | Array<any>;\n  arrowPoints: any;\n  renderChartContent: any;\n  remainingScrollViewProps: any;\n\n  width: number | undefined;\n  horizSections: HorizSectionsType;\n  endSpacing: number;\n  horizontalRulesStyle: any;\n  noOfSections: number;\n  showFractionalValues: boolean;\n  axesAndRulesProps: any;\n\n  yAxisLabelTexts: Array<string> | undefined;\n  yAxisOffset: number | undefined;\n  rotateYAxisTexts: number | undefined;\n  hideAxesAndRules: boolean | undefined;\n\n  showXAxisIndices: boolean;\n  xAxisIndicesHeight: number;\n  xAxisIndicesWidth: number;\n  xAxisIndicesColor: ColorValue;\n\n  pointerConfig: any;\n  getPointerProps: any;\n  pointerIndex: number;\n  pointerX: number;\n  pointerY: number;\n\n  scrollEventThrottle: number;\n};\n\nexport type Pointer = {\n  height?: number;\n  width?: number;\n  radius?: number;\n  pointerColor?: ColorValue;\n  pointer1Color?: ColorValue;\n  pointer2Color?: ColorValue;\n  pointer3Color?: ColorValue;\n  pointer4Color?: ColorValue;\n  pointer5Color?: ColorValue;\n  secondaryPointerColor?: ColorValue;\n  pointerComponent?: Function;\n  showPointerStrip?: boolean;\n  pointerStripWidth?: number;\n  pointerStripHeight?: number;\n  pointerStripColor?: ColorValue;\n  pointerStripUptoDataPoint?: boolean;\n  pointerLabelComponent?: Function;\n  stripOverPointer?: boolean;\n  autoAdjustPointerLabelPosition?: boolean;\n  shiftPointerLabelX?: number;\n  shiftPointerLabelY?: number;\n  pointerLabelWidth?: number;\n  pointerLabelHeight?: number;\n  pointerVanishDelay?: number;\n  activatePointersOnLongPress?: boolean;\n  activatePointersDelay?: number;\n  initialPointerIndex?: number;\n  initialPointerAppearDelay?: number;\n  persistPointer?: boolean;\n  hidePointer1?: boolean;\n  hidePointer2?: boolean;\n  hidePointer3?: boolean;\n  hidePointer4?: boolean;\n  hidePointer5?: boolean;\n  hideSecondaryPointer?: boolean;\n  strokeDashArray?: Array<number>;\n  barTouchable?: boolean;\n  pointerEvents?: PointerEvents;\n};\n\nexport type HighlightedRange = {\n  from: number;\n  to: number;\n  color?: string | ColorValue;\n  thickness?: number;\n  strokeDashArray?: Array<number>;\n};\n\nexport type LineSegment = {\n  startIndex: number;\n  endIndex: number;\n  color?: string | ColorValue;\n  thickness?: number;\n  strokeDashArray?: Array<number>;\n};\n\nexport type LineSvgProps = {\n  d: string;\n  fill: string;\n  stroke: string | ColorValue;\n  strokeWidth: number;\n  strokeDasharray?: Array<number>;\n};\n\nexport type LineProperties = {\n  d: string;\n  color: string | ColorValue;\n  strokeWidth: number;\n  strokeDashArray?: Array<number>;\n};\n\nexport type DataSet = {\n  data: Array<itemType>;\n  zIndex?: number;\n  thickness?: number;\n  strokeDashArray?: Array<number>;\n  areaChart?: boolean;\n  stepChart?: boolean;\n  startIndex?: number;\n  endIndex?: number;\n  color?: string;\n  hideDataPoints?: boolean;\n  dataPointsHeight?: number;\n  dataPointsWidth?: number;\n  dataPointsRadius?: number;\n  dataPointsColor?: string;\n  dataPointsShape?: string;\n  startFillColor?: string;\n  endFillColor?: string;\n  startOpacity?: number;\n  endOpacity?: number;\n  textFontSize?: number;\n  textColor?: string;\n  showArrow?: boolean;\n  arrowConfig?: arrowConfigType;\n  curved?: boolean;\n  curvature?: number;\n  curveType?: CurveType;\n  lineSegments?: Array<LineSegment>;\n};\n"],"mappings":"AAYA,WAAYA,SAAS,aAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAATA,SAAS,CAATA,SAAS;EAAA,OAATA,SAAS;AAAA;AAKrB,WAAYC,YAAY,aAAZA,YAAY;EAAZA,YAAY,CAAZA,YAAY;EAAZA,YAAY,CAAZA,YAAY;EAAA,OAAZA,YAAY;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}