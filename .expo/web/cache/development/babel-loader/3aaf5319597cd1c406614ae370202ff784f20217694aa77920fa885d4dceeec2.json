{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { Stack } from 'expo-router';\nimport { useCallback } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nvar AppLayout = function AppLayout() {\n  var _useFonts = useFonts({\n      ChakraPetchBold: require(\"../assets/fonts/ChakraPetch-Bold.ttf\"),\n      ChakraPetchMedium: require(\"../assets/fonts/ChakraPetch-Medium.ttf\"),\n      ChakraPetchRegular: require(\"../assets/fonts/ChakraPetch-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) return null;\n  return _jsxs(_Fragment, {\n    children: [_jsx(IconRegistry, {\n      icons: EvaIconsPack\n    }), _jsx(ApplicationProvider, _objectSpread(_objectSpread({}, eva), {}, {\n      theme: eva.dark,\n      children: _jsx(Stack, {\n        onLayout: onLayoutRootView,\n        screenOptions: {\n          headerShown: false\n        }\n      })\n    }))]\n  });\n};\nexport default AppLayout;","map":{"version":3,"names":["Stack","useCallback","useFonts","SplashScreen","eva","ApplicationProvider","IconRegistry","EvaIconsPack","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","preventAutoHideAsync","AppLayout","_useFonts","ChakraPetchBold","require","ChakraPetchMedium","ChakraPetchRegular","_useFonts2","_slicedToArray","fontsLoaded","onLayoutRootView","_asyncToGenerator","hideAsync","children","icons","_objectSpread","theme","dark","onLayout","screenOptions","headerShown"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/app/_layout.js"],"sourcesContent":["import { Stack } from 'expo-router';\nimport { useCallback } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as eva from '@eva-design/eva';\nimport { ApplicationProvider, IconRegistry } from '@ui-kitten/components';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\n\nSplashScreen.preventAutoHideAsync();\n\nconst AppLayout = () => {\n    const [fontsLoaded] = useFonts({\n        ChakraPetchBold: require('../assets/fonts/ChakraPetch-Bold.ttf'),\n        ChakraPetchMedium: require('../assets/fonts/ChakraPetch-Medium.ttf'),\n        ChakraPetchRegular: require('../assets/fonts/ChakraPetch-Regular.ttf'),\n    })\n\n    const onLayoutRootView = useCallback(async () => {\n        if (fontsLoaded) {\n            await SplashScreen.hideAsync();\n        }\n    }, [fontsLoaded])\n\n    if (!fontsLoaded) return null;\n    \n    return (\n        <>\n        <IconRegistry icons={EvaIconsPack} />\n        <ApplicationProvider {...eva} theme={eva.dark}>\n            <Stack onLayout={onLayoutRootView} screenOptions={{headerShown: false}} />\n        </ApplicationProvider>\n        </>\n    )\n}\n\nexport default AppLayout;"],"mappings":";;;;;AAAA,SAASA,KAAK,QAAQ,aAAa;AACnC,SAASC,WAAW,QAAQ,OAAO;AACnC,SAASC,QAAQ,QAAQ,WAAW;AACpC,OAAO,KAAKC,YAAY,MAAM,oBAAoB;AAClD,OAAO,KAAKC,GAAG,MAAM,iBAAiB;AACtC,SAASC,mBAAmB,EAAEC,YAAY,QAAQ,uBAAuB;AACzE,SAASC,YAAY,QAAQ,sBAAsB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpDV,YAAY,CAACW,oBAAoB,CAAC,CAAC;AAEnC,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;EACpB,IAAAC,SAAA,GAAsBd,QAAQ,CAAC;MAC3Be,eAAe,EAAEC,OAAO,uCAAuC,CAAC;MAChEC,iBAAiB,EAAED,OAAO,yCAAyC,CAAC;MACpEE,kBAAkB,EAAEF,OAAO,0CAA0C;IACzE,CAAC,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAN,SAAA;IAJKO,WAAW,GAAAF,UAAA;EAMlB,IAAMG,gBAAgB,GAAGvB,WAAW,CAAAwB,iBAAA,CAAC,aAAY;IAC7C,IAAIF,WAAW,EAAE;MACb,MAAMpB,YAAY,CAACuB,SAAS,CAAC,CAAC;IAClC;EACJ,CAAC,GAAE,CAACH,WAAW,CAAC,CAAC;EAEjB,IAAI,CAACA,WAAW,EAAE,OAAO,IAAI;EAE7B,OACIV,KAAA,CAAAF,SAAA;IAAAgB,QAAA,GACAlB,IAAA,CAACH,YAAY;MAACsB,KAAK,EAAErB;IAAa,CAAE,CAAC,EACrCE,IAAA,CAACJ,mBAAmB,EAAAwB,aAAA,CAAAA,aAAA,KAAKzB,GAAG;MAAE0B,KAAK,EAAE1B,GAAG,CAAC2B,IAAK;MAAAJ,QAAA,EAC1ClB,IAAA,CAACT,KAAK;QAACgC,QAAQ,EAAER,gBAAiB;QAACS,aAAa,EAAE;UAACC,WAAW,EAAE;QAAK;MAAE,CAAE;IAAC,EACzD,CAAC;EAAA,CACpB,CAAC;AAEX,CAAC;AAED,eAAenB,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}