{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport Svg, { Defs, Rect } from 'react-native-svg';\nimport Cap from \"../Components/BarSpecificComponents/cap\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nif (Platform.OS === 'android') {\n  UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n}\nvar Animated2DWithGradient = function Animated2DWithGradient(props) {\n  var _ref, _item$barBorderRadius, _ref2, _ref3, _item$barBorderTopLef, _ref4, _ref5, _item$barBorderTopRig, _ref6, _ref7, _item$barBorderBottom, _ref8, _ref9, _item$barBorderBottom2, _ref10, _item$barBorderRadius2, _ref11, _ref12, _item$barBorderTopLef2, _ref13, _ref14, _item$barBorderTopRig2, _ref15, _ref16, _item$barBorderBottom3, _ref17, _ref18, _item$barBorderBottom4;\n  var barBackgroundPattern = props.barBackgroundPattern,\n    patternId = props.patternId,\n    barWidth = props.barWidth,\n    barStyle = props.barStyle,\n    item = props.item,\n    opacity = props.opacity,\n    animationDuration = props.animationDuration,\n    noGradient = props.noGradient,\n    noAnimation = props.noAnimation,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    barMarginBottom = props.barMarginBottom,\n    barBorderWidth = props.barBorderWidth,\n    barBorderColor = props.barBorderColor,\n    barBorderRadius = props.barBorderRadius,\n    barBorderTopLeftRadius = props.barBorderTopLeftRadius,\n    barBorderTopRightRadius = props.barBorderTopRightRadius,\n    barBorderBottomLeftRadius = props.barBorderBottomLeftRadius,\n    barBorderBottomRightRadius = props.barBorderBottomRightRadius,\n    intactTopLabel = props.intactTopLabel,\n    showValuesAsTopLabel = props.showValuesAsTopLabel,\n    topLabelContainerStyle = props.topLabelContainerStyle,\n    topLabelTextStyle = props.topLabelTextStyle;\n  var _useState = useState(noAnimation ? props.height : 0.2),\n    _useState2 = _slicedToArray(_useState, 2),\n    height = _useState2[0],\n    setHeight = _useState2[1];\n  var _useState3 = useState(noAnimation ? false : true),\n    _useState4 = _slicedToArray(_useState3, 2),\n    initialRender = _useState4[0],\n    setInitialRender = _useState4[1];\n  useEffect(function () {\n    if (!noAnimation) {\n      if (initialRender) {\n        setTimeout(function () {\n          return layoutAppear();\n        }, 20);\n      } else {\n        elevate();\n      }\n    }\n  }, [props.height]);\n  var elevate = function elevate() {\n    LayoutAnimation.configureNext({\n      duration: animationDuration,\n      update: {\n        type: 'linear',\n        property: 'scaleXY'\n      }\n    });\n    setHeight(props.height);\n  };\n  var layoutAppear = function layoutAppear() {\n    LayoutAnimation.configureNext({\n      duration: Platform.OS == 'ios' ? animationDuration : 20,\n      create: {\n        type: 'linear',\n        property: 'opacity'\n      },\n      update: {\n        type: 'linear',\n        property: 'scaleXY'\n      }\n    });\n    setInitialRender(false);\n    setTimeout(function () {\n      return elevate();\n    }, Platform.OS == 'ios' ? 10 : 100);\n  };\n  return _jsx(_Fragment, {\n    children: !initialRender && _jsxs(View, {\n      style: {\n        position: 'absolute',\n        bottom: 0,\n        width: '100%',\n        height: (noAnimation ? Math.max(props.minHeight, Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200)) : height) - (barMarginBottom || 0)\n      },\n      children: [_jsxs(View, {\n        style: [{\n          width: '100%',\n          height: (noAnimation ? Math.max(props.minHeight, Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200)) : height) - (barMarginBottom || 0)\n        }, item.barStyle || barStyle],\n        children: [noGradient ? _jsx(View, {\n          style: [{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            backgroundColor: item.frontColor || props.frontColor || 'black',\n            borderWidth: barBorderWidth != null ? barBorderWidth : 0,\n            borderColor: barBorderColor,\n            borderRadius: (_ref = (_item$barBorderRadius = item.barBorderRadius) != null ? _item$barBorderRadius : barBorderRadius) != null ? _ref : 0,\n            borderTopLeftRadius: (_ref2 = (_ref3 = (_item$barBorderTopLef = item.barBorderTopLeftRadius) != null ? _item$barBorderTopLef : barBorderTopLeftRadius) != null ? _ref3 : item.barBorderRadius) != null ? _ref2 : barBorderRadius,\n            borderTopRightRadius: (_ref4 = (_ref5 = (_item$barBorderTopRig = item.barBorderTopRightRadius) != null ? _item$barBorderTopRig : barBorderTopRightRadius) != null ? _ref5 : item.barBorderRadius) != null ? _ref4 : barBorderRadius,\n            borderBottomLeftRadius: (_ref6 = (_ref7 = (_item$barBorderBottom = item.barBorderBottomLeftRadius) != null ? _item$barBorderBottom : barBorderBottomLeftRadius) != null ? _ref7 : item.barBorderRadius) != null ? _ref6 : barBorderRadius,\n            borderBottomRightRadius: (_ref8 = (_ref9 = (_item$barBorderBottom2 = item.barBorderBottomRightRadius) != null ? _item$barBorderBottom2 : barBorderBottomRightRadius) != null ? _ref9 : item.barBorderRadius) != null ? _ref8 : barBorderRadius\n          }, props.roundedBottom && {\n            borderBottomLeftRadius: (item.barWidth || barWidth || 30) / 2,\n            borderBottomRightRadius: (item.barWidth || barWidth || 30) / 2\n          }, props.cappedBars && {\n            borderTopLeftRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0,\n            borderTopRightRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0\n          }, props.roundedTop && {\n            borderTopLeftRadius: (item.barWidth || barWidth || 30) / 2,\n            borderTopRightRadius: (item.barWidth || barWidth || 30) / 2\n          }],\n          children: props.cappedBars && item.value ? _jsx(Cap, {\n            capThicknessFromItem: item.capThickness,\n            capThicknessFromProps: props.capThickness,\n            capColorFromItem: item.capColor,\n            capColorFromProps: props.capColor,\n            capRadiusFromItem: item.capRadius,\n            capRadiusFromProps: props.capRadius\n          }) : null\n        }) : _jsx(LinearGradient, {\n          style: [{\n            position: 'absolute',\n            width: '100%',\n            height: '100%',\n            borderWidth: barBorderWidth != null ? barBorderWidth : 0,\n            borderColor: barBorderColor,\n            borderRadius: (_ref10 = (_item$barBorderRadius2 = item.barBorderRadius) != null ? _item$barBorderRadius2 : barBorderRadius) != null ? _ref10 : 0,\n            borderTopLeftRadius: (_ref11 = (_ref12 = (_item$barBorderTopLef2 = item.barBorderTopLeftRadius) != null ? _item$barBorderTopLef2 : barBorderTopLeftRadius) != null ? _ref12 : item.barBorderRadius) != null ? _ref11 : barBorderRadius,\n            borderTopRightRadius: (_ref13 = (_ref14 = (_item$barBorderTopRig2 = item.barBorderTopRightRadius) != null ? _item$barBorderTopRig2 : barBorderTopRightRadius) != null ? _ref14 : item.barBorderRadius) != null ? _ref13 : barBorderRadius,\n            borderBottomLeftRadius: (_ref15 = (_ref16 = (_item$barBorderBottom3 = item.barBorderBottomLeftRadius) != null ? _item$barBorderBottom3 : barBorderBottomLeftRadius) != null ? _ref16 : item.barBorderRadius) != null ? _ref15 : barBorderRadius,\n            borderBottomRightRadius: (_ref17 = (_ref18 = (_item$barBorderBottom4 = item.barBorderBottomRightRadius) != null ? _item$barBorderBottom4 : barBorderBottomRightRadius) != null ? _ref18 : item.barBorderRadius) != null ? _ref17 : barBorderRadius\n          }, props.roundedBottom && {\n            borderBottomLeftRadius: (item.barWidth || barWidth || 30) / 2,\n            borderBottomRightRadius: (item.barWidth || barWidth || 30) / 2\n          }, props.cappedBars && {\n            borderTopLeftRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0,\n            borderTopRightRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0\n          }, props.roundedTop && {\n            borderTopLeftRadius: (item.barWidth || barWidth || 30) / 2,\n            borderTopRightRadius: (item.barWidth || barWidth || 30) / 2\n          }],\n          start: {\n            x: 0,\n            y: 0\n          },\n          end: {\n            x: 1,\n            y: 1\n          },\n          colors: [item.gradientColor || props.gradientColor || 'white', item.frontColor || props.frontColor || 'black'],\n          children: props.cappedBars && _jsx(View, {\n            style: {\n              position: 'absolute',\n              width: '100%',\n              height: item.capThickness === 0 ? 0 : item.capThickness || props.capThickness || 6,\n              backgroundColor: item.capColor || props.capColor || 'black',\n              borderTopLeftRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0,\n              borderTopRightRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0\n            }\n          })\n        }), (item.barBackgroundPattern || barBackgroundPattern) && _jsxs(Svg, {\n          children: [_jsx(Defs, {\n            children: item.barBackgroundPattern ? item.barBackgroundPattern() : barBackgroundPattern == null ? void 0 : barBackgroundPattern()\n          }), _jsx(Rect, {\n            stroke: \"transparent\",\n            x: \"1\",\n            y: \"1\",\n            width: item.barWidth || props.barWidth || 30,\n            height: noAnimation ? Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200) : height,\n            fill: `url(#${item.patternId || patternId})`\n          })]\n        })]\n      }), (item.topLabelComponent || showValuesAsTopLabel) && _jsx(View, {\n        style: [{\n          position: 'absolute',\n          top: (item.barWidth || barWidth || 30) * -1,\n          height: item.barWidth || barWidth || 30,\n          width: item.barWidth || barWidth || 30,\n          justifyContent: props.horizontal && !intactTopLabel || item.value < 0 ? 'center' : 'flex-end',\n          alignItems: 'center',\n          opacity: opacity\n        }, item.value < 0 && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, props.horizontal && !intactTopLabel && {\n          transform: [{\n            rotate: '270deg'\n          }]\n        }, topLabelContainerStyle != null ? topLabelContainerStyle : item.topLabelContainerStyle],\n        children: showValuesAsTopLabel ? _jsx(Text, {\n          style: topLabelTextStyle,\n          children: item.value\n        }) : item.topLabelComponent == null ? void 0 : item.topLabelComponent()\n      })]\n    })\n  });\n};\nexport default Animated2DWithGradient;","map":{"version":3,"names":["React","useEffect","useState","View","LayoutAnimation","Platform","UIManager","Text","LinearGradient","Svg","Defs","Rect","Cap","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","OS","setLayoutAnimationEnabledExperimental","Animated2DWithGradient","props","_ref","_item$barBorderRadius","_ref2","_ref3","_item$barBorderTopLef","_ref4","_ref5","_item$barBorderTopRig","_ref6","_ref7","_item$barBorderBottom","_ref8","_ref9","_item$barBorderBottom2","_ref10","_item$barBorderRadius2","_ref11","_ref12","_item$barBorderTopLef2","_ref13","_ref14","_item$barBorderTopRig2","_ref15","_ref16","_item$barBorderBottom3","_ref17","_ref18","_item$barBorderBottom4","barBackgroundPattern","patternId","barWidth","barStyle","item","opacity","animationDuration","noGradient","noAnimation","containerHeight","maxValue","barMarginBottom","barBorderWidth","barBorderColor","barBorderRadius","barBorderTopLeftRadius","barBorderTopRightRadius","barBorderBottomLeftRadius","barBorderBottomRightRadius","intactTopLabel","showValuesAsTopLabel","topLabelContainerStyle","topLabelTextStyle","_useState","height","_useState2","_slicedToArray","setHeight","_useState3","_useState4","initialRender","setInitialRender","setTimeout","layoutAppear","elevate","configureNext","duration","update","type","property","create","children","style","position","bottom","width","Math","max","minHeight","abs","value","backgroundColor","frontColor","borderWidth","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","roundedBottom","cappedBars","capRadius","roundedTop","capThicknessFromItem","capThickness","capThicknessFromProps","capColorFromItem","capColor","capColorFromProps","capRadiusFromItem","capRadiusFromProps","start","x","y","end","colors","gradientColor","stroke","fill","topLabelComponent","top","justifyContent","horizontal","alignItems","transform","rotate"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/node_modules/react-native-gifted-charts/src/BarChart/Animated2DWithGradient.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport {\n  View,\n  ColorValue,\n  LayoutAnimation,\n  Platform,\n  UIManager,\n  Text,\n} from 'react-native';\nimport LinearGradient from 'react-native-linear-gradient';\nimport Svg, {Defs, Rect} from 'react-native-svg';\nimport Cap from '../Components/BarSpecificComponents/cap';\nimport {itemType} from './types';\n\nif (Platform.OS === 'android') {\n  UIManager.setLayoutAnimationEnabledExperimental &&\n    UIManager.setLayoutAnimationEnabledExperimental(true);\n}\n\ntype propTypes = {\n  item: itemType;\n  height: number;\n  minHeight: number;\n  opacity?: number;\n  animationDuration: number;\n  roundedTop: boolean;\n  roundedBottom: boolean;\n  barWidth: number;\n  gradientColor: ColorValue;\n  frontColor: ColorValue;\n  noGradient?: boolean;\n  noAnimation?: boolean;\n  cappedBars?: boolean;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n  horizontal: boolean;\n  intactTopLabel: boolean;\n  showValuesAsTopLabel: boolean;\n  topLabelContainerStyle?: any;\n  topLabelTextStyle?: any;\n  barBorderWidth?: number;\n  barBorderColor: ColorValue;\n  barBorderRadius?: number;\n  barBorderTopLeftRadius?: number;\n  barBorderTopRightRadius?: number;\n  barBorderBottomLeftRadius?: number;\n  barBorderBottomRightRadius?: number;\n  containerHeight?: number;\n  maxValue?: number;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  barMarginBottom?: number;\n  barStyle?: object;\n};\n\nconst Animated2DWithGradient = (props: propTypes) => {\n  const {\n    barBackgroundPattern,\n    patternId,\n    barWidth,\n    barStyle,\n    item,\n    opacity,\n    animationDuration,\n    noGradient,\n    noAnimation,\n    containerHeight,\n    maxValue,\n    barMarginBottom,\n    barBorderWidth,\n    barBorderColor,\n    barBorderRadius,\n    barBorderTopLeftRadius,\n    barBorderTopRightRadius,\n    barBorderBottomLeftRadius,\n    barBorderBottomRightRadius,\n    intactTopLabel,\n    showValuesAsTopLabel,\n    topLabelContainerStyle,\n    topLabelTextStyle,\n  } = props;\n  const [height, setHeight] = useState(noAnimation ? props.height : 0.2);\n  const [initialRender, setInitialRender] = useState(\n    noAnimation ? false : true,\n  );\n\n  useEffect(() => {\n    if (!noAnimation) {\n      if (initialRender) {\n        setTimeout(() => layoutAppear(), 20);\n      } else {\n        elevate();\n      }\n    }\n  }, [props.height]);\n\n  const elevate = () => {\n    LayoutAnimation.configureNext({\n      duration: animationDuration,\n      update: {type: 'linear', property: 'scaleXY'},\n    });\n    setHeight(props.height);\n  };\n\n  const layoutAppear = () => {\n    LayoutAnimation.configureNext({\n      duration: Platform.OS == 'ios' ? animationDuration : 20,\n      create: {type: 'linear', property: 'opacity'},\n      update: {type: 'linear', property: 'scaleXY'},\n    });\n    setInitialRender(false);\n    setTimeout(() => elevate(), Platform.OS == 'ios' ? 10 : 100);\n  };\n\n  return (\n    <>\n      {!initialRender && (\n        <View\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            height:\n              (noAnimation\n                ? Math.max(\n                    props.minHeight,\n                    (Math.abs(item.value) * (containerHeight || 200)) /\n                      (maxValue || 200),\n                  )\n                : height) - (barMarginBottom || 0),\n          }}>\n          <View\n            style={[\n              {\n                width: '100%',\n                height:\n                  (noAnimation\n                    ? Math.max(\n                        props.minHeight,\n                        (Math.abs(item.value) * (containerHeight || 200)) /\n                          (maxValue || 200),\n                      )\n                    : height) - (barMarginBottom || 0),\n              },\n              item.barStyle || barStyle,\n            ]}>\n            {noGradient ? (\n              <View\n                style={[\n                  {\n                    position: 'absolute',\n                    width: '100%',\n                    height: '100%',\n                    backgroundColor:\n                      item.frontColor || props.frontColor || 'black',\n                    borderWidth: barBorderWidth ?? 0,\n                    borderColor: barBorderColor,\n                    borderRadius: item.barBorderRadius ?? barBorderRadius ?? 0,\n                    borderTopLeftRadius:\n                      item.barBorderTopLeftRadius ??\n                      barBorderTopLeftRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                    borderTopRightRadius:\n                      item.barBorderTopRightRadius ??\n                      barBorderTopRightRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                    borderBottomLeftRadius:\n                      item.barBorderBottomLeftRadius ??\n                      barBorderBottomLeftRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                    borderBottomRightRadius:\n                      item.barBorderBottomRightRadius ??\n                      barBorderBottomRightRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                  },\n                  props.roundedBottom && {\n                    borderBottomLeftRadius:\n                      (item.barWidth || barWidth || 30) / 2,\n                    borderBottomRightRadius:\n                      (item.barWidth || barWidth || 30) / 2,\n                  },\n                  props.cappedBars && {\n                    borderTopLeftRadius:\n                      item.capRadius === 0\n                        ? 0\n                        : item.capRadius || props.capRadius || 0,\n                    borderTopRightRadius:\n                      item.capRadius === 0\n                        ? 0\n                        : item.capRadius || props.capRadius || 0,\n                  },\n                  props.roundedTop && {\n                    borderTopLeftRadius: (item.barWidth || barWidth || 30) / 2,\n                    borderTopRightRadius: (item.barWidth || barWidth || 30) / 2,\n                  },\n                ]}>\n                {props.cappedBars && item.value ? (\n                  <Cap\n                    capThicknessFromItem={item.capThickness}\n                    capThicknessFromProps={props.capThickness}\n                    capColorFromItem={item.capColor}\n                    capColorFromProps={props.capColor}\n                    capRadiusFromItem={item.capRadius}\n                    capRadiusFromProps={props.capRadius}\n                  />\n                ) : null}\n              </View>\n            ) : (\n              <LinearGradient\n                style={[\n                  {\n                    position: 'absolute',\n                    width: '100%',\n                    height: '100%',\n                    borderWidth: barBorderWidth ?? 0,\n                    borderColor: barBorderColor,\n                    borderRadius: item.barBorderRadius ?? barBorderRadius ?? 0,\n                    borderTopLeftRadius:\n                      item.barBorderTopLeftRadius ??\n                      barBorderTopLeftRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                    borderTopRightRadius:\n                      item.barBorderTopRightRadius ??\n                      barBorderTopRightRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                    borderBottomLeftRadius:\n                      item.barBorderBottomLeftRadius ??\n                      barBorderBottomLeftRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                    borderBottomRightRadius:\n                      item.barBorderBottomRightRadius ??\n                      barBorderBottomRightRadius ??\n                      item.barBorderRadius ??\n                      barBorderRadius,\n                  },\n                  props.roundedBottom && {\n                    borderBottomLeftRadius:\n                      (item.barWidth || barWidth || 30) / 2,\n                    borderBottomRightRadius:\n                      (item.barWidth || barWidth || 30) / 2,\n                  },\n                  props.cappedBars && {\n                    borderTopLeftRadius:\n                      item.capRadius === 0\n                        ? 0\n                        : item.capRadius || props.capRadius || 0,\n                    borderTopRightRadius:\n                      item.capRadius === 0\n                        ? 0\n                        : item.capRadius || props.capRadius || 0,\n                  },\n                  props.roundedTop && {\n                    borderTopLeftRadius: (item.barWidth || barWidth || 30) / 2,\n                    borderTopRightRadius: (item.barWidth || barWidth || 30) / 2,\n                  },\n                ]}\n                start={{x: 0, y: 0}}\n                end={{x: 1, y: 1}}\n                colors={[\n                  item.gradientColor || props.gradientColor || 'white',\n                  item.frontColor || props.frontColor || 'black',\n                ]}>\n                {props.cappedBars && (\n                  <View\n                    style={{\n                      position: 'absolute',\n                      width: '100%',\n                      height:\n                        item.capThickness === 0\n                          ? 0\n                          : item.capThickness || props.capThickness || 6,\n                      backgroundColor:\n                        item.capColor || props.capColor || 'black',\n                      borderTopLeftRadius:\n                        item.capRadius === 0\n                          ? 0\n                          : item.capRadius || props.capRadius || 0,\n                      borderTopRightRadius:\n                        item.capRadius === 0\n                          ? 0\n                          : item.capRadius || props.capRadius || 0,\n                    }}\n                  />\n                )}\n              </LinearGradient>\n            )}\n            {(item.barBackgroundPattern || barBackgroundPattern) && (\n              <Svg>\n                <Defs>\n                  {item.barBackgroundPattern\n                    ? item.barBackgroundPattern()\n                    : barBackgroundPattern?.()}\n                </Defs>\n                <Rect\n                  stroke=\"transparent\"\n                  x=\"1\"\n                  y=\"1\"\n                  width={item.barWidth || props.barWidth || 30}\n                  height={\n                    noAnimation\n                      ? (Math.abs(item.value) * (containerHeight || 200)) /\n                        (maxValue || 200)\n                      : height\n                  }\n                  fill={`url(#${item.patternId || patternId})`}\n                />\n              </Svg>\n            )}\n          </View>\n          {(item.topLabelComponent || showValuesAsTopLabel) && (\n            <View\n              style={[\n                {\n                  position: 'absolute',\n                  top: (item.barWidth || barWidth || 30) * -1,\n                  height: item.barWidth || barWidth || 30,\n                  width: item.barWidth || barWidth || 30,\n                  justifyContent:\n                    (props.horizontal && !intactTopLabel) || item.value < 0\n                      ? 'center'\n                      : 'flex-end',\n                  alignItems: 'center',\n                  opacity: opacity,\n                },\n                item.value < 0 && {transform: [{rotate: '180deg'}]},\n                props.horizontal &&\n                  !intactTopLabel && {transform: [{rotate: '270deg'}]},\n                topLabelContainerStyle ?? item.topLabelContainerStyle,\n              ]}>\n              {showValuesAsTopLabel ? (\n                <Text style={topLabelTextStyle}>{item.value}</Text>\n              ) : (\n                item.topLabelComponent?.()\n              )}\n            </View>\n          )}\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default Animated2DWithGradient;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,eAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,IAAA;AASjD,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,GAAG,IAAGC,IAAI,EAAEC,IAAI,QAAO,kBAAkB;AAChD,OAAOC,GAAG;AAAgD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG1D,IAAIb,QAAQ,CAACc,EAAE,KAAK,SAAS,EAAE;EAC7Bb,SAAS,CAACc,qCAAqC,IAC7Cd,SAAS,CAACc,qCAAqC,CAAC,IAAI,CAAC;AACzD;AAuCA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,KAAgB,EAAK;EAAA,IAAAC,IAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,sBAAA,EAAAC,MAAA,EAAAC,sBAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,sBAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,sBAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,sBAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,sBAAA;EACnD,IACEC,oBAAoB,GAuBlB7B,KAAK,CAvBP6B,oBAAoB;IACpBC,SAAS,GAsBP9B,KAAK,CAtBP8B,SAAS;IACTC,QAAQ,GAqBN/B,KAAK,CArBP+B,QAAQ;IACRC,QAAQ,GAoBNhC,KAAK,CApBPgC,QAAQ;IACRC,IAAI,GAmBFjC,KAAK,CAnBPiC,IAAI;IACJC,OAAO,GAkBLlC,KAAK,CAlBPkC,OAAO;IACPC,iBAAiB,GAiBfnC,KAAK,CAjBPmC,iBAAiB;IACjBC,UAAU,GAgBRpC,KAAK,CAhBPoC,UAAU;IACVC,WAAW,GAeTrC,KAAK,CAfPqC,WAAW;IACXC,eAAe,GAcbtC,KAAK,CAdPsC,eAAe;IACfC,QAAQ,GAaNvC,KAAK,CAbPuC,QAAQ;IACRC,eAAe,GAYbxC,KAAK,CAZPwC,eAAe;IACfC,cAAc,GAWZzC,KAAK,CAXPyC,cAAc;IACdC,cAAc,GAUZ1C,KAAK,CAVP0C,cAAc;IACdC,eAAe,GASb3C,KAAK,CATP2C,eAAe;IACfC,sBAAsB,GAQpB5C,KAAK,CARP4C,sBAAsB;IACtBC,uBAAuB,GAOrB7C,KAAK,CAPP6C,uBAAuB;IACvBC,yBAAyB,GAMvB9C,KAAK,CANP8C,yBAAyB;IACzBC,0BAA0B,GAKxB/C,KAAK,CALP+C,0BAA0B;IAC1BC,cAAc,GAIZhD,KAAK,CAJPgD,cAAc;IACdC,oBAAoB,GAGlBjD,KAAK,CAHPiD,oBAAoB;IACpBC,sBAAsB,GAEpBlD,KAAK,CAFPkD,sBAAsB;IACtBC,iBAAiB,GACfnD,KAAK,CADPmD,iBAAiB;EAEnB,IAAAC,SAAA,GAA4BxE,QAAQ,CAACyD,WAAW,GAAGrC,KAAK,CAACqD,MAAM,GAAG,GAAG,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA/DC,MAAM,GAAAC,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,IAAAG,UAAA,GAA0C7E,QAAQ,CAChDyD,WAAW,GAAG,KAAK,GAAG,IACxB,CAAC;IAAAqB,UAAA,GAAAH,cAAA,CAAAE,UAAA;IAFME,aAAa,GAAAD,UAAA;IAAEE,gBAAgB,GAAAF,UAAA;EAItC/E,SAAS,CAAC,YAAM;IACd,IAAI,CAAC0D,WAAW,EAAE;MAChB,IAAIsB,aAAa,EAAE;QACjBE,UAAU,CAAC;UAAA,OAAMC,YAAY,CAAC,CAAC;QAAA,GAAE,EAAE,CAAC;MACtC,CAAC,MAAM;QACLC,OAAO,CAAC,CAAC;MACX;IACF;EACF,CAAC,EAAE,CAAC/D,KAAK,CAACqD,MAAM,CAAC,CAAC;EAElB,IAAMU,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBjF,eAAe,CAACkF,aAAa,CAAC;MAC5BC,QAAQ,EAAE9B,iBAAiB;MAC3B+B,MAAM,EAAE;QAACC,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAS;IAC9C,CAAC,CAAC;IACFZ,SAAS,CAACxD,KAAK,CAACqD,MAAM,CAAC;EACzB,CAAC;EAED,IAAMS,YAAY,GAAG,SAAfA,YAAYA,CAAA,EAAS;IACzBhF,eAAe,CAACkF,aAAa,CAAC;MAC5BC,QAAQ,EAAElF,QAAQ,CAACc,EAAE,IAAI,KAAK,GAAGsC,iBAAiB,GAAG,EAAE;MACvDkC,MAAM,EAAE;QAACF,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAS,CAAC;MAC7CF,MAAM,EAAE;QAACC,IAAI,EAAE,QAAQ;QAAEC,QAAQ,EAAE;MAAS;IAC9C,CAAC,CAAC;IACFR,gBAAgB,CAAC,KAAK,CAAC;IACvBC,UAAU,CAAC;MAAA,OAAME,OAAO,CAAC,CAAC;IAAA,GAAEhF,QAAQ,CAACc,EAAE,IAAI,KAAK,GAAG,EAAE,GAAG,GAAG,CAAC;EAC9D,CAAC;EAED,OACEL,IAAA,CAAAI,SAAA;IAAA0E,QAAA,EACG,CAACX,aAAa,IACbjE,KAAA,CAACb,IAAI;MACH0F,KAAK,EAAE;QACLC,QAAQ,EAAE,UAAU;QACpBC,MAAM,EAAE,CAAC;QACTC,KAAK,EAAE,MAAM;QACbrB,MAAM,EACJ,CAAChB,WAAW,GACRsC,IAAI,CAACC,GAAG,CACN5E,KAAK,CAAC6E,SAAS,EACdF,IAAI,CAACG,GAAG,CAAC7C,IAAI,CAAC8C,KAAK,CAAC,IAAIzC,eAAe,IAAI,GAAG,CAAC,IAC7CC,QAAQ,IAAI,GAAG,CACpB,CAAC,GACDc,MAAM,KAAKb,eAAe,IAAI,CAAC;MACvC,CAAE;MAAA8B,QAAA,GACF5E,KAAA,CAACb,IAAI;QACH0F,KAAK,EAAE,CACL;UACEG,KAAK,EAAE,MAAM;UACbrB,MAAM,EACJ,CAAChB,WAAW,GACRsC,IAAI,CAACC,GAAG,CACN5E,KAAK,CAAC6E,SAAS,EACdF,IAAI,CAACG,GAAG,CAAC7C,IAAI,CAAC8C,KAAK,CAAC,IAAIzC,eAAe,IAAI,GAAG,CAAC,IAC7CC,QAAQ,IAAI,GAAG,CACpB,CAAC,GACDc,MAAM,KAAKb,eAAe,IAAI,CAAC;QACvC,CAAC,EACDP,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CACzB;QAAAsC,QAAA,GACDlC,UAAU,GACT5C,IAAA,CAACX,IAAI;UACH0F,KAAK,EAAE,CACL;YACEC,QAAQ,EAAE,UAAU;YACpBE,KAAK,EAAE,MAAM;YACbrB,MAAM,EAAE,MAAM;YACd2B,eAAe,EACb/C,IAAI,CAACgD,UAAU,IAAIjF,KAAK,CAACiF,UAAU,IAAI,OAAO;YAChDC,WAAW,EAAEzC,cAAc,WAAdA,cAAc,GAAI,CAAC;YAChC0C,WAAW,EAAEzC,cAAc;YAC3B0C,YAAY,GAAAnF,IAAA,IAAAC,qBAAA,GAAE+B,IAAI,CAACU,eAAe,YAAAzC,qBAAA,GAAIyC,eAAe,YAAA1C,IAAA,GAAI,CAAC;YAC1DoF,mBAAmB,GAAAlF,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GACjB4B,IAAI,CAACW,sBAAsB,YAAAvC,qBAAA,GAC3BuC,sBAAsB,YAAAxC,KAAA,GACtB6B,IAAI,CAACU,eAAe,YAAAxC,KAAA,GACpBwC,eAAe;YACjB2C,oBAAoB,GAAAhF,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GAClByB,IAAI,CAACY,uBAAuB,YAAArC,qBAAA,GAC5BqC,uBAAuB,YAAAtC,KAAA,GACvB0B,IAAI,CAACU,eAAe,YAAArC,KAAA,GACpBqC,eAAe;YACjB4C,sBAAsB,GAAA9E,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GACpBsB,IAAI,CAACa,yBAAyB,YAAAnC,qBAAA,GAC9BmC,yBAAyB,YAAApC,KAAA,GACzBuB,IAAI,CAACU,eAAe,YAAAlC,KAAA,GACpBkC,eAAe;YACjB6C,uBAAuB,GAAA5E,KAAA,IAAAC,KAAA,IAAAC,sBAAA,GACrBmB,IAAI,CAACc,0BAA0B,YAAAjC,sBAAA,GAC/BiC,0BAA0B,YAAAlC,KAAA,GAC1BoB,IAAI,CAACU,eAAe,YAAA/B,KAAA,GACpB+B;UACJ,CAAC,EACD3C,KAAK,CAACyF,aAAa,IAAI;YACrBF,sBAAsB,EACpB,CAACtD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI,CAAC;YACvCyD,uBAAuB,EACrB,CAACvD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI;UACxC,CAAC,EACD/B,KAAK,CAAC0F,UAAU,IAAI;YAClBL,mBAAmB,EACjBpD,IAAI,CAAC0D,SAAS,KAAK,CAAC,GAChB,CAAC,GACD1D,IAAI,CAAC0D,SAAS,IAAI3F,KAAK,CAAC2F,SAAS,IAAI,CAAC;YAC5CL,oBAAoB,EAClBrD,IAAI,CAAC0D,SAAS,KAAK,CAAC,GAChB,CAAC,GACD1D,IAAI,CAAC0D,SAAS,IAAI3F,KAAK,CAAC2F,SAAS,IAAI;UAC7C,CAAC,EACD3F,KAAK,CAAC4F,UAAU,IAAI;YAClBP,mBAAmB,EAAE,CAACpD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI,CAAC;YAC1DuD,oBAAoB,EAAE,CAACrD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI;UAC5D,CAAC,CACD;UAAAuC,QAAA,EACDtE,KAAK,CAAC0F,UAAU,IAAIzD,IAAI,CAAC8C,KAAK,GAC7BvF,IAAA,CAACF,GAAG;YACFuG,oBAAoB,EAAE5D,IAAI,CAAC6D,YAAa;YACxCC,qBAAqB,EAAE/F,KAAK,CAAC8F,YAAa;YAC1CE,gBAAgB,EAAE/D,IAAI,CAACgE,QAAS;YAChCC,iBAAiB,EAAElG,KAAK,CAACiG,QAAS;YAClCE,iBAAiB,EAAElE,IAAI,CAAC0D,SAAU;YAClCS,kBAAkB,EAAEpG,KAAK,CAAC2F;UAAU,CACrC,CAAC,GACA;QAAI,CACJ,CAAC,GAEPnG,IAAA,CAACN,cAAc;UACbqF,KAAK,EAAE,CACL;YACEC,QAAQ,EAAE,UAAU;YACpBE,KAAK,EAAE,MAAM;YACbrB,MAAM,EAAE,MAAM;YACd6B,WAAW,EAAEzC,cAAc,WAAdA,cAAc,GAAI,CAAC;YAChC0C,WAAW,EAAEzC,cAAc;YAC3B0C,YAAY,GAAArE,MAAA,IAAAC,sBAAA,GAAEiB,IAAI,CAACU,eAAe,YAAA3B,sBAAA,GAAI2B,eAAe,YAAA5B,MAAA,GAAI,CAAC;YAC1DsE,mBAAmB,GAAApE,MAAA,IAAAC,MAAA,IAAAC,sBAAA,GACjBc,IAAI,CAACW,sBAAsB,YAAAzB,sBAAA,GAC3ByB,sBAAsB,YAAA1B,MAAA,GACtBe,IAAI,CAACU,eAAe,YAAA1B,MAAA,GACpB0B,eAAe;YACjB2C,oBAAoB,GAAAlE,MAAA,IAAAC,MAAA,IAAAC,sBAAA,GAClBW,IAAI,CAACY,uBAAuB,YAAAvB,sBAAA,GAC5BuB,uBAAuB,YAAAxB,MAAA,GACvBY,IAAI,CAACU,eAAe,YAAAvB,MAAA,GACpBuB,eAAe;YACjB4C,sBAAsB,GAAAhE,MAAA,IAAAC,MAAA,IAAAC,sBAAA,GACpBQ,IAAI,CAACa,yBAAyB,YAAArB,sBAAA,GAC9BqB,yBAAyB,YAAAtB,MAAA,GACzBS,IAAI,CAACU,eAAe,YAAApB,MAAA,GACpBoB,eAAe;YACjB6C,uBAAuB,GAAA9D,MAAA,IAAAC,MAAA,IAAAC,sBAAA,GACrBK,IAAI,CAACc,0BAA0B,YAAAnB,sBAAA,GAC/BmB,0BAA0B,YAAApB,MAAA,GAC1BM,IAAI,CAACU,eAAe,YAAAjB,MAAA,GACpBiB;UACJ,CAAC,EACD3C,KAAK,CAACyF,aAAa,IAAI;YACrBF,sBAAsB,EACpB,CAACtD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI,CAAC;YACvCyD,uBAAuB,EACrB,CAACvD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI;UACxC,CAAC,EACD/B,KAAK,CAAC0F,UAAU,IAAI;YAClBL,mBAAmB,EACjBpD,IAAI,CAAC0D,SAAS,KAAK,CAAC,GAChB,CAAC,GACD1D,IAAI,CAAC0D,SAAS,IAAI3F,KAAK,CAAC2F,SAAS,IAAI,CAAC;YAC5CL,oBAAoB,EAClBrD,IAAI,CAAC0D,SAAS,KAAK,CAAC,GAChB,CAAC,GACD1D,IAAI,CAAC0D,SAAS,IAAI3F,KAAK,CAAC2F,SAAS,IAAI;UAC7C,CAAC,EACD3F,KAAK,CAAC4F,UAAU,IAAI;YAClBP,mBAAmB,EAAE,CAACpD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI,CAAC;YAC1DuD,oBAAoB,EAAE,CAACrD,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI;UAC5D,CAAC,CACD;UACFsE,KAAK,EAAE;YAACC,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAC,CAAE;UACpBC,GAAG,EAAE;YAACF,CAAC,EAAE,CAAC;YAAEC,CAAC,EAAE;UAAC,CAAE;UAClBE,MAAM,EAAE,CACNxE,IAAI,CAACyE,aAAa,IAAI1G,KAAK,CAAC0G,aAAa,IAAI,OAAO,EACpDzE,IAAI,CAACgD,UAAU,IAAIjF,KAAK,CAACiF,UAAU,IAAI,OAAO,CAC9C;UAAAX,QAAA,EACDtE,KAAK,CAAC0F,UAAU,IACflG,IAAA,CAACX,IAAI;YACH0F,KAAK,EAAE;cACLC,QAAQ,EAAE,UAAU;cACpBE,KAAK,EAAE,MAAM;cACbrB,MAAM,EACJpB,IAAI,CAAC6D,YAAY,KAAK,CAAC,GACnB,CAAC,GACD7D,IAAI,CAAC6D,YAAY,IAAI9F,KAAK,CAAC8F,YAAY,IAAI,CAAC;cAClDd,eAAe,EACb/C,IAAI,CAACgE,QAAQ,IAAIjG,KAAK,CAACiG,QAAQ,IAAI,OAAO;cAC5CZ,mBAAmB,EACjBpD,IAAI,CAAC0D,SAAS,KAAK,CAAC,GAChB,CAAC,GACD1D,IAAI,CAAC0D,SAAS,IAAI3F,KAAK,CAAC2F,SAAS,IAAI,CAAC;cAC5CL,oBAAoB,EAClBrD,IAAI,CAAC0D,SAAS,KAAK,CAAC,GAChB,CAAC,GACD1D,IAAI,CAAC0D,SAAS,IAAI3F,KAAK,CAAC2F,SAAS,IAAI;YAC7C;UAAE,CACH;QACF,CACa,CACjB,EACA,CAAC1D,IAAI,CAACJ,oBAAoB,IAAIA,oBAAoB,KACjDnC,KAAA,CAACP,GAAG;UAAAmF,QAAA,GACF9E,IAAA,CAACJ,IAAI;YAAAkF,QAAA,EACFrC,IAAI,CAACJ,oBAAoB,GACtBI,IAAI,CAACJ,oBAAoB,CAAC,CAAC,GAC3BA,oBAAoB,oBAApBA,oBAAoB,CAAG;UAAC,CACxB,CAAC,EACPrC,IAAA,CAACH,IAAI;YACHsH,MAAM,EAAC,aAAa;YACpBL,CAAC,EAAC,GAAG;YACLC,CAAC,EAAC,GAAG;YACL7B,KAAK,EAAEzC,IAAI,CAACF,QAAQ,IAAI/B,KAAK,CAAC+B,QAAQ,IAAI,EAAG;YAC7CsB,MAAM,EACJhB,WAAW,GACNsC,IAAI,CAACG,GAAG,CAAC7C,IAAI,CAAC8C,KAAK,CAAC,IAAIzC,eAAe,IAAI,GAAG,CAAC,IAC/CC,QAAQ,IAAI,GAAG,CAAC,GACjBc,MACL;YACDuD,IAAI,EAAG,QAAO3E,IAAI,CAACH,SAAS,IAAIA,SAAU;UAAG,CAC9C,CAAC;QAAA,CACC,CACN;MAAA,CACG,CAAC,EACN,CAACG,IAAI,CAAC4E,iBAAiB,IAAI5D,oBAAoB,KAC9CzD,IAAA,CAACX,IAAI;QACH0F,KAAK,EAAE,CACL;UACEC,QAAQ,EAAE,UAAU;UACpBsC,GAAG,EAAE,CAAC7E,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC;UAC3CsB,MAAM,EAAEpB,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE;UACvC2C,KAAK,EAAEzC,IAAI,CAACF,QAAQ,IAAIA,QAAQ,IAAI,EAAE;UACtCgF,cAAc,EACX/G,KAAK,CAACgH,UAAU,IAAI,CAAChE,cAAc,IAAKf,IAAI,CAAC8C,KAAK,GAAG,CAAC,GACnD,QAAQ,GACR,UAAU;UAChBkC,UAAU,EAAE,QAAQ;UACpB/E,OAAO,EAAEA;QACX,CAAC,EACDD,IAAI,CAAC8C,KAAK,GAAG,CAAC,IAAI;UAACmC,SAAS,EAAE,CAAC;YAACC,MAAM,EAAE;UAAQ,CAAC;QAAC,CAAC,EACnDnH,KAAK,CAACgH,UAAU,IACd,CAAChE,cAAc,IAAI;UAACkE,SAAS,EAAE,CAAC;YAACC,MAAM,EAAE;UAAQ,CAAC;QAAC,CAAC,EACtDjE,sBAAsB,WAAtBA,sBAAsB,GAAIjB,IAAI,CAACiB,sBAAsB,CACrD;QAAAoB,QAAA,EACDrB,oBAAoB,GACnBzD,IAAA,CAACP,IAAI;UAACsF,KAAK,EAAEpB,iBAAkB;UAAAmB,QAAA,EAAErC,IAAI,CAAC8C;QAAK,CAAO,CAAC,GAEnD9C,IAAI,CAAC4E,iBAAiB,oBAAtB5E,IAAI,CAAC4E,iBAAiB,CAAG;MAC1B,CACG,CACP;IAAA,CACG;EACP,CACD,CAAC;AAEP,CAAC;AAED,eAAe9G,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}