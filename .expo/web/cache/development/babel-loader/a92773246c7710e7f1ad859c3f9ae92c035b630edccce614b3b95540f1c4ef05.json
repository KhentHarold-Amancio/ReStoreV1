{"ast":null,"code":"import React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Rule from \"../lineSvg\";\nimport { styles } from \"../../LineChart/styles\";\nimport { AxesAndRulesDefaults, yAxisSides } from \"../../utils/constants\";\nimport { computeMaxAndMinItems, getLabelTextUtil } from \"../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var renderHorizSections = function renderHorizSections(props) {\n  var _secondaryYAxis$noOfS, _secondaryYAxis$showF, _secondaryYAxis$round, _secondaryYAxis$noOfS2, _secondaryYAxis$showY, _secondaryYAxis$yAxis, _secondaryYAxis$yAxis2, _secondaryYAxis$yAxis3, _secondaryYAxis$yAxis4, _secondaryYAxis$yAxis5, _secondaryYAxis$yAxis6, _secondaryYAxis$yAxis7, _secondaryYAxis$yAxis8, _secondaryYAxis$yAxis9, _secondaryYAxis$yAxis10, _secondaryYAxis$yAxis11, _secondaryYAxis$hideY, _secondaryYAxis$yAxis12, _secondaryYAxis$yAxis13, _secondaryYAxis$hideO, _secondaryYAxisConfig, _secondaryYAxisConfig2, _secondaryYAxisConfig3, _secondaryYAxisConfig4, _secondaryYAxisConfig5, _referenceLinesConfig, _referenceLinesConfig2, _referenceLinesConfig3, _referenceLinesConfig4, _referenceLinesConfig5, _referenceLinesConfig6;\n  var width = props.width,\n    h = props.horizSections,\n    noOfSectionsBelowXAxis = props.noOfSectionsBelowXAxis,\n    totalWidth = props.totalWidth,\n    endSpacing = props.endSpacing,\n    yAxisSide = props.yAxisSide,\n    horizontalRulesStyle = props.horizontalRulesStyle,\n    noOfSections = props.noOfSections,\n    stepHeight = props.stepHeight,\n    yAxisLabelWidth = props.yAxisLabelWidth,\n    yAxisLabelContainerStyle = props.yAxisLabelContainerStyle,\n    yAxisThickness = props.yAxisThickness,\n    yAxisColor = props.yAxisColor,\n    xAxisThickness = props.xAxisThickness,\n    xAxisColor = props.xAxisColor,\n    xAxisLength = props.xAxisLength,\n    xAxisType = props.xAxisType,\n    dashWidth = props.dashWidth,\n    dashGap = props.dashGap,\n    backgroundColor = props.backgroundColor,\n    hideRules = props.hideRules,\n    rulesLength = props.rulesLength,\n    rulesType = props.rulesType,\n    rulesThickness = props.rulesThickness,\n    rulesColor = props.rulesColor,\n    rulesConfigArray = props.rulesConfigArray,\n    spacing = props.spacing,\n    showYAxisIndices = props.showYAxisIndices,\n    yAxisIndicesHeight = props.yAxisIndicesHeight,\n    yAxisIndicesWidth = props.yAxisIndicesWidth,\n    yAxisIndicesColor = props.yAxisIndicesColor,\n    hideOrigin = props.hideOrigin,\n    hideYAxisText = props.hideYAxisText,\n    showFractionalValues = props.showFractionalValues,\n    yAxisTextNumberOfLines = props.yAxisTextNumberOfLines,\n    yAxisLabelPrefix = props.yAxisLabelPrefix,\n    yAxisLabelSuffix = props.yAxisLabelSuffix,\n    yAxisTextStyle = props.yAxisTextStyle,\n    rotateYAxisTexts = props.rotateYAxisTexts,\n    rtl = props.rtl,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    referenceLinesConfig = props.referenceLinesConfig,\n    yAxisLabelTexts = props.yAxisLabelTexts,\n    yAxisOffset = props.yAxisOffset,\n    horizontal = props.horizontal,\n    yAxisAtTop = props.yAxisAtTop,\n    stepValue = props.stepValue,\n    roundToDigits = props.roundToDigits,\n    secondaryData = props.secondaryData,\n    secondaryYAxis = props.secondaryYAxis,\n    formatYLabel = props.formatYLabel;\n  var secondaryYAxisConfig = {\n    noOfSections: (_secondaryYAxis$noOfS = secondaryYAxis == null ? void 0 : secondaryYAxis.noOfSections) != null ? _secondaryYAxis$noOfS : noOfSections,\n    maxValue: secondaryYAxis == null ? void 0 : secondaryYAxis.maxValue,\n    mostNegativeValue: secondaryYAxis == null ? void 0 : secondaryYAxis.mostNegativeValue,\n    stepValue: secondaryYAxis == null ? void 0 : secondaryYAxis.stepValue,\n    stepHeight: secondaryYAxis == null ? void 0 : secondaryYAxis.stepHeight,\n    showFractionalValues: (_secondaryYAxis$showF = secondaryYAxis == null ? void 0 : secondaryYAxis.showFractionalValues) != null ? _secondaryYAxis$showF : showFractionalValues,\n    roundToDigits: (_secondaryYAxis$round = secondaryYAxis == null ? void 0 : secondaryYAxis.roundToDigits) != null ? _secondaryYAxis$round : roundToDigits,\n    noOfSectionsBelowXAxis: (_secondaryYAxis$noOfS2 = secondaryYAxis == null ? void 0 : secondaryYAxis.noOfSectionsBelowXAxis) != null ? _secondaryYAxis$noOfS2 : noOfSectionsBelowXAxis,\n    showYAxisIndices: (_secondaryYAxis$showY = secondaryYAxis == null ? void 0 : secondaryYAxis.showYAxisIndices) != null ? _secondaryYAxis$showY : showYAxisIndices,\n    yAxisIndicesHeight: (_secondaryYAxis$yAxis = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisIndicesHeight) != null ? _secondaryYAxis$yAxis : yAxisIndicesHeight,\n    yAxisIndicesWidth: (_secondaryYAxis$yAxis2 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisIndicesWidth) != null ? _secondaryYAxis$yAxis2 : yAxisIndicesWidth,\n    yAxisIndicesColor: (_secondaryYAxis$yAxis3 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisIndicesColor) != null ? _secondaryYAxis$yAxis3 : yAxisIndicesColor,\n    yAxisSide: (_secondaryYAxis$yAxis4 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisSide) != null ? _secondaryYAxis$yAxis4 : yAxisSide,\n    yAxisOffset: secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisOffset,\n    yAxisThickness: (_secondaryYAxis$yAxis5 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisThickness) != null ? _secondaryYAxis$yAxis5 : yAxisThickness,\n    yAxisColor: (_secondaryYAxis$yAxis6 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisColor) != null ? _secondaryYAxis$yAxis6 : yAxisColor,\n    yAxisLabelContainerStyle: (_secondaryYAxis$yAxis7 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelContainerStyle) != null ? _secondaryYAxis$yAxis7 : yAxisLabelContainerStyle,\n    yAxisLabelTexts: (_secondaryYAxis$yAxis8 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelTexts) != null ? _secondaryYAxis$yAxis8 : yAxisLabelTexts,\n    yAxisTextStyle: (_secondaryYAxis$yAxis9 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisTextStyle) != null ? _secondaryYAxis$yAxis9 : yAxisTextStyle,\n    yAxisTextNumberOfLines: (_secondaryYAxis$yAxis10 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisTextNumberOfLines) != null ? _secondaryYAxis$yAxis10 : yAxisTextNumberOfLines,\n    yAxisLabelWidth: (_secondaryYAxis$yAxis11 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelWidth) != null ? _secondaryYAxis$yAxis11 : yAxisLabelWidth,\n    hideYAxisText: (_secondaryYAxis$hideY = secondaryYAxis == null ? void 0 : secondaryYAxis.hideYAxisText) != null ? _secondaryYAxis$hideY : hideYAxisText,\n    yAxisLabelPrefix: (_secondaryYAxis$yAxis12 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelPrefix) != null ? _secondaryYAxis$yAxis12 : yAxisLabelPrefix,\n    yAxisLabelSuffix: (_secondaryYAxis$yAxis13 = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisLabelSuffix) != null ? _secondaryYAxis$yAxis13 : yAxisLabelSuffix,\n    hideOrigin: (_secondaryYAxis$hideO = secondaryYAxis == null ? void 0 : secondaryYAxis.hideOrigin) != null ? _secondaryYAxis$hideO : hideOrigin,\n    formatYLabel: secondaryYAxis == null ? void 0 : secondaryYAxis.formatYLabel\n  };\n  var _computeMaxAndMinItem = computeMaxAndMinItems(secondaryData, secondaryYAxisConfig.roundToDigits, secondaryYAxisConfig.showFractionalValues),\n    maxItem = _computeMaxAndMinItem.maxItem,\n    minItem = _computeMaxAndMinItem.minItem;\n  secondaryYAxisConfig.maxValue = (_secondaryYAxisConfig = secondaryYAxisConfig.maxValue) != null ? _secondaryYAxisConfig : maxItem || maxValue;\n  secondaryYAxisConfig.mostNegativeValue = (_secondaryYAxisConfig2 = secondaryYAxisConfig.mostNegativeValue) != null ? _secondaryYAxisConfig2 : minItem;\n  secondaryYAxisConfig.stepValue = (_secondaryYAxisConfig3 = secondaryYAxisConfig.stepValue) != null ? _secondaryYAxisConfig3 : secondaryYAxisConfig.maxValue / ((_secondaryYAxisConfig4 = secondaryYAxisConfig.noOfSections) != null ? _secondaryYAxisConfig4 : noOfSections);\n  secondaryYAxisConfig.stepHeight = secondaryYAxisConfig.stepHeight || containerHeight / ((_secondaryYAxisConfig5 = secondaryYAxisConfig.noOfSections) != null ? _secondaryYAxisConfig5 : noOfSections);\n  var horizSections = [];\n  for (var i = 0; i <= noOfSections; i++) {\n    var _yAxisLabelTexts;\n    var value = maxValue - stepValue * i;\n    if (showFractionalValues || roundToDigits) {\n      value = parseFloat(value.toFixed(roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits));\n    }\n    horizSections.push({\n      value: yAxisLabelTexts != null && yAxisLabelTexts.length ? (_yAxisLabelTexts = yAxisLabelTexts[noOfSections + noOfSectionsBelowXAxis - i]) != null ? _yAxisLabelTexts : value.toString() : value.toString()\n    });\n  }\n  var horizSectionsBelow = [];\n  if (noOfSectionsBelowXAxis) {\n    for (var _i = 1; _i <= noOfSectionsBelowXAxis; _i++) {\n      var _props$yAxisLabelText;\n      var _value = stepValue * -_i;\n      if (showFractionalValues || roundToDigits) {\n        _value = parseFloat(_value.toFixed(roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits));\n      }\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts ? (_props$yAxisLabelText = props.yAxisLabelTexts[noOfSectionsBelowXAxis - _i]) != null ? _props$yAxisLabelText : _value.toString() : _value.toString()\n      });\n    }\n  }\n  var secondaryHorizSections = [];\n  if (secondaryYAxis) {\n    for (var _i2 = 0; _i2 <= ((_secondaryYAxisConfig6 = secondaryYAxisConfig.noOfSections) != null ? _secondaryYAxisConfig6 : noOfSections); _i2++) {\n      var _secondaryYAxisConfig6, _secondaryYAxisConfig8, _secondaryYAxisConfig9;\n      var _value2 = secondaryYAxisConfig.stepValue * _i2;\n      if (secondaryYAxisConfig.showFractionalValues || secondaryYAxisConfig.roundToDigits) {\n        var _secondaryYAxisConfig7;\n        _value2 = parseFloat(_value2.toFixed((_secondaryYAxisConfig7 = secondaryYAxisConfig.roundToDigits) != null ? _secondaryYAxisConfig7 : AxesAndRulesDefaults.roundToDigits));\n      }\n      secondaryHorizSections.push({\n        value: (_secondaryYAxisConfig8 = secondaryYAxisConfig.yAxisLabelTexts) != null && _secondaryYAxisConfig8.length ? (_secondaryYAxisConfig9 = secondaryYAxisConfig.yAxisLabelTexts[_i2 - noOfSectionsBelowXAxis - 1]) != null ? _secondaryYAxisConfig9 : _value2.toString() : _value2.toString()\n      });\n    }\n  }\n  var secondaryHorizSectionsBelow = [];\n  if (secondaryYAxisConfig.noOfSectionsBelowXAxis) {\n    for (var _i3 = 1; _i3 <= secondaryYAxisConfig.noOfSectionsBelowXAxis; _i3++) {\n      var _secondaryYAxisConfig11, _secondaryYAxisConfig12;\n      var _value3 = secondaryYAxisConfig.stepValue * (_i3 - secondaryYAxisConfig.noOfSectionsBelowXAxis - 1);\n      if (secondaryYAxisConfig.showFractionalValues || secondaryYAxisConfig.roundToDigits) {\n        var _secondaryYAxisConfig10;\n        _value3 = parseFloat(_value3.toFixed((_secondaryYAxisConfig10 = secondaryYAxisConfig.roundToDigits) != null ? _secondaryYAxisConfig10 : AxesAndRulesDefaults.roundToDigits));\n      }\n      secondaryHorizSectionsBelow.push({\n        value: (_secondaryYAxisConfig11 = secondaryYAxisConfig.yAxisLabelTexts) != null && _secondaryYAxisConfig11.length ? (_secondaryYAxisConfig12 = secondaryYAxisConfig.yAxisLabelTexts[_i3 - 1]) != null ? _secondaryYAxisConfig12 : _value3.toString() : _value3.toString()\n      });\n    }\n  }\n  var showReferenceLine1 = referenceLinesConfig.showReferenceLine1,\n    referenceLine1Position = referenceLinesConfig.referenceLine1Position,\n    referenceLine1Config = referenceLinesConfig.referenceLine1Config,\n    showReferenceLine2 = referenceLinesConfig.showReferenceLine2,\n    referenceLine2Position = referenceLinesConfig.referenceLine2Position,\n    referenceLine2Config = referenceLinesConfig.referenceLine2Config,\n    showReferenceLine3 = referenceLinesConfig.showReferenceLine3,\n    referenceLine3Position = referenceLinesConfig.referenceLine3Position,\n    referenceLine3Config = referenceLinesConfig.referenceLine3Config;\n  var defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: (width || totalWidth - spacing) + endSpacing,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null\n  };\n  showReferenceLine1 = referenceLinesConfig.showReferenceLine1 || false;\n  referenceLine1Position = (_referenceLinesConfig = referenceLinesConfig.referenceLine1Position) != null ? _referenceLinesConfig : referenceLinesConfig.referenceLine1Position || containerHeight / 2;\n  referenceLine1Config = referenceLinesConfig.referenceLine1Config ? {\n    thickness: referenceLinesConfig.referenceLine1Config.thickness || defaultReferenceConfig.thickness,\n    width: (_referenceLinesConfig2 = referenceLinesConfig.referenceLine1Config.width) != null ? _referenceLinesConfig2 : defaultReferenceConfig.width,\n    color: referenceLinesConfig.referenceLine1Config.color || defaultReferenceConfig.color,\n    type: referenceLinesConfig.referenceLine1Config.type || defaultReferenceConfig.type,\n    dashWidth: referenceLinesConfig.referenceLine1Config.dashWidth || defaultReferenceConfig.dashWidth,\n    dashGap: referenceLinesConfig.referenceLine1Config.dashGap || defaultReferenceConfig.dashGap,\n    labelText: referenceLinesConfig.referenceLine1Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: referenceLinesConfig.referenceLine1Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  showReferenceLine2 = referenceLinesConfig.showReferenceLine2 || false;\n  referenceLine2Position = (_referenceLinesConfig3 = referenceLinesConfig.referenceLine2Position) != null ? _referenceLinesConfig3 : referenceLinesConfig.referenceLine2Position || 3 * containerHeight / 2;\n  referenceLine2Config = referenceLinesConfig.referenceLine2Config ? {\n    thickness: referenceLinesConfig.referenceLine2Config.thickness || defaultReferenceConfig.thickness,\n    width: (_referenceLinesConfig4 = referenceLinesConfig.referenceLine2Config.width) != null ? _referenceLinesConfig4 : defaultReferenceConfig.width,\n    color: referenceLinesConfig.referenceLine2Config.color || defaultReferenceConfig.color,\n    type: referenceLinesConfig.referenceLine2Config.type || defaultReferenceConfig.type,\n    dashWidth: referenceLinesConfig.referenceLine2Config.dashWidth || defaultReferenceConfig.dashWidth,\n    dashGap: referenceLinesConfig.referenceLine2Config.dashGap || defaultReferenceConfig.dashGap,\n    labelText: referenceLinesConfig.referenceLine2Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: referenceLinesConfig.referenceLine2Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  showReferenceLine3 = referenceLinesConfig.showReferenceLine3 || false;\n  referenceLine3Position = (_referenceLinesConfig5 = referenceLinesConfig.referenceLine3Position) != null ? _referenceLinesConfig5 : referenceLinesConfig.referenceLine3Position || containerHeight / 3;\n  referenceLine3Config = referenceLinesConfig.referenceLine3Config ? {\n    thickness: referenceLinesConfig.referenceLine3Config.thickness || defaultReferenceConfig.thickness,\n    width: (_referenceLinesConfig6 = referenceLinesConfig.referenceLine3Config.width) != null ? _referenceLinesConfig6 : defaultReferenceConfig.width,\n    color: referenceLinesConfig.referenceLine3Config.color || defaultReferenceConfig.color,\n    type: referenceLinesConfig.referenceLine3Config.type || defaultReferenceConfig.type,\n    dashWidth: referenceLinesConfig.referenceLine3Config.dashWidth || defaultReferenceConfig.dashWidth,\n    dashGap: referenceLinesConfig.referenceLine3Config.dashGap || defaultReferenceConfig.dashGap,\n    labelText: referenceLinesConfig.referenceLine3Config.labelText || defaultReferenceConfig.labelText,\n    labelTextStyle: referenceLinesConfig.referenceLine3Config.labelTextStyle || defaultReferenceConfig.labelTextStyle\n  } : defaultReferenceConfig;\n  var getLabelTexts = function getLabelTexts(val, index) {\n    return getLabelTextUtil(val, index, showFractionalValues, yAxisLabelTexts, yAxisOffset, yAxisLabelPrefix, yAxisLabelSuffix, roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits, formatYLabel);\n  };\n  var getLabelTextsForSecondaryYAxis = function getLabelTextsForSecondaryYAxis(val, index) {\n    var showFractionalValues = secondaryYAxisConfig.showFractionalValues,\n      yAxisLabelTexts = secondaryYAxisConfig.yAxisLabelTexts,\n      yAxisOffset = secondaryYAxisConfig.yAxisOffset,\n      yAxisLabelPrefix = secondaryYAxisConfig.yAxisLabelPrefix,\n      yAxisLabelSuffix = secondaryYAxisConfig.yAxisLabelSuffix,\n      roundToDigits = secondaryYAxisConfig.roundToDigits,\n      formatYLabel = secondaryYAxisConfig.formatYLabel;\n    return getLabelTextUtil(val, index, showFractionalValues, yAxisLabelTexts, yAxisOffset, yAxisLabelPrefix, yAxisLabelSuffix, roundToDigits != null ? roundToDigits : AxesAndRulesDefaults.roundToDigits, formatYLabel);\n  };\n  var renderAxesAndRules = function renderAxesAndRules(index) {\n    var _rulesConfigArray$inv, _rulesConfigArray$inv2, _rulesConfigArray$inv3, _rulesConfigArray$inv4, _ref, _rulesConfigArray$inv5, _rulesConfigArray$inv6, _rulesConfigArray$inv7, _rulesConfigArray$inv8, _rulesConfigArray$inv9, _rulesConfigArray$inv10, _rulesConfigArray$inv11, _rulesConfigArray$inv12;\n    var invertedIndex = horizSections.length - index - 1;\n    return _jsxs(View, {\n      style: [index === noOfSections ? styles.lastLeftPart : styles.leftPart, {\n        borderColor: yAxisColor,\n        backgroundColor: backgroundColor,\n        width: (props.width || totalWidth - spacing) + endSpacing\n      }, yAxisSide === yAxisSides.RIGHT ? {\n        borderRightWidth: yAxisThickness\n      } : {\n        borderLeftWidth: yAxisThickness\n      }],\n      children: [index === noOfSections ? _jsx(Rule, {\n        config: {\n          thickness: xAxisThickness,\n          color: xAxisColor,\n          width: xAxisLength || (props.width || totalWidth - spacing) + endSpacing,\n          dashWidth: dashWidth,\n          dashGap: dashGap,\n          type: xAxisType\n        }\n      }) : hideRules ? null : _jsx(Rule, {\n        config: {\n          thickness: (_rulesConfigArray$inv = (_rulesConfigArray$inv2 = rulesConfigArray[invertedIndex]) == null ? void 0 : _rulesConfigArray$inv2.rulesThickness) != null ? _rulesConfigArray$inv : rulesThickness,\n          color: (_rulesConfigArray$inv3 = (_rulesConfigArray$inv4 = rulesConfigArray[invertedIndex]) == null ? void 0 : _rulesConfigArray$inv4.rulesColor) != null ? _rulesConfigArray$inv3 : rulesColor,\n          width: (_ref = (_rulesConfigArray$inv5 = (_rulesConfigArray$inv6 = rulesConfigArray[invertedIndex]) == null ? void 0 : _rulesConfigArray$inv6.rulesLength) != null ? _rulesConfigArray$inv5 : rulesLength) != null ? _ref : (props.width || totalWidth - spacing) + endSpacing,\n          dashWidth: (_rulesConfigArray$inv7 = (_rulesConfigArray$inv8 = rulesConfigArray[invertedIndex]) == null ? void 0 : _rulesConfigArray$inv8.dashWidth) != null ? _rulesConfigArray$inv7 : dashWidth,\n          dashGap: (_rulesConfigArray$inv9 = (_rulesConfigArray$inv10 = rulesConfigArray[invertedIndex]) == null ? void 0 : _rulesConfigArray$inv10.dashGap) != null ? _rulesConfigArray$inv9 : dashGap,\n          type: (_rulesConfigArray$inv11 = (_rulesConfigArray$inv12 = rulesConfigArray[invertedIndex]) == null ? void 0 : _rulesConfigArray$inv12.rulesType) != null ? _rulesConfigArray$inv11 : rulesType\n        }\n      }), showYAxisIndices && index !== noOfSections ? _jsx(View, {\n        style: {\n          height: yAxisIndicesHeight,\n          width: yAxisIndicesWidth,\n          left: yAxisIndicesWidth / -2 + (yAxisSide === yAxisSides.RIGHT ? (width != null ? width : totalWidth) + yAxisLabelWidth / 2 + yAxisIndicesWidth / 4 : 0),\n          backgroundColor: yAxisIndicesColor\n        }\n      }) : null]\n    });\n  };\n  var renderSecondaryYaxisLabels = function renderSecondaryYaxisLabels(horizSections, isBelow) {\n    return horizSections.map(function (sectionItems, index) {\n      var _secondaryYAxisConfig13, _secondaryYAxisConfig14, _secondaryYAxisConfig15;\n      var label = getLabelTextsForSecondaryYAxis(sectionItems.value, index);\n      if (secondaryYAxisConfig.hideOrigin && index === secondaryHorizSections.length - 1) {\n        label = '';\n      }\n      return _jsxs(View, {\n        style: [styles.horizBar, styles.leftLabel, {\n          position: 'absolute',\n          zIndex: 1,\n          bottom: ((_secondaryYAxisConfig13 = secondaryYAxisConfig.stepHeight) != null ? _secondaryYAxisConfig13 : 0) * ((isBelow ? 0 : noOfSectionsBelowXAxis) + index - (noOfSectionsBelowXAxis ? 0 : 0.5)),\n          width: secondaryYAxisConfig.yAxisLabelWidth,\n          height: (_secondaryYAxisConfig14 = secondaryYAxisConfig.stepHeight) != null ? _secondaryYAxisConfig14 : 0\n        }, yAxisLabelContainerStyle],\n        children: [secondaryYAxisConfig.showYAxisIndices && index !== 0 ? _jsx(View, {\n          style: {\n            height: secondaryYAxisConfig.yAxisIndicesHeight,\n            width: secondaryYAxisConfig.yAxisIndicesWidth,\n            position: 'absolute',\n            left: ((_secondaryYAxisConfig15 = secondaryYAxisConfig.yAxisIndicesWidth) != null ? _secondaryYAxisConfig15 : 0) / -2,\n            backgroundColor: secondaryYAxisConfig.yAxisIndicesColor\n          }\n        }) : null, _jsx(Text, {\n          numberOfLines: secondaryYAxisConfig.yAxisTextNumberOfLines,\n          ellipsizeMode: 'clip',\n          style: [secondaryYAxisConfig.yAxisTextStyle],\n          children: label\n        })]\n      }, index);\n    });\n  };\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    children: [_jsxs(View, {\n      style: {\n        width: (width != null ? width : totalWidth) + endSpacing\n      },\n      children: [horizSections.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: (width != null ? width : totalWidth) + endSpacing\n          }, horizontal && !yAxisAtTop && {\n            transform: [{\n              rotateY: '180deg'\n            }]\n          }, horizontalRulesStyle],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              height: index === noOfSections ? stepHeight / 2 : stepHeight,\n              width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth\n            }, yAxisLabelContainerStyle]\n          }), renderAxesAndRules(index)]\n        }, index);\n      }), !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        var label = getLabelTexts(sectionItems.value, index);\n        if (hideOrigin && index === horizSections.length - 1) {\n          label = '';\n        }\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === yAxisSides.RIGHT && {\n            left: (width != null ? width : totalWidth) + yAxisLabelWidth / 2\n          }, horizontal && !yAxisAtTop && {\n            transform: [{\n              translateX: (width != null ? width : totalWidth) - 30 + endSpacing\n            }]\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, horizontal && {\n              transform: [{\n                rotate: `${rotateYAxisTexts != null ? rotateYAxisTexts : rtl ? 90 : -90}deg`\n              }]\n            }, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), horizSectionsBelow.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, {\n            width: (width != null ? width : totalWidth) + 15\n          }, index === 0 && {\n            marginTop: stepHeight / 2\n          }],\n          children: [_jsx(View, {\n            style: [styles.leftLabel, {\n              borderRightWidth: yAxisThickness,\n              borderColor: yAxisColor,\n              marginLeft: yAxisThickness\n            }, {\n              height: index === 0 ? stepHeight * 1.5 : stepHeight,\n              width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth\n            }, index === 0 && {\n              marginTop: -stepHeight / 2\n            }]\n          }), _jsx(View, {\n            style: [styles.leftPart, {\n              backgroundColor: backgroundColor\n            }],\n            children: hideRules ? null : _jsx(Rule, {\n              config: {\n                thickness: rulesThickness,\n                color: rulesColor,\n                width: rulesLength || (props.width || totalWidth - spacing) + endSpacing,\n                dashWidth: dashWidth,\n                dashGap: dashGap,\n                type: rulesType\n              }\n            })\n          })]\n        }, index);\n      }), !hideYAxisText && horizSectionsBelow.map(function (sectionItems, index) {\n        var label = getLabelTexts(horizSectionsBelow[horizSectionsBelow.length - 1 - index].value, index);\n        return _jsx(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            bottom: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }, yAxisSide === yAxisSides.RIGHT && {\n            left: (width != null ? width : totalWidth) + yAxisLabelWidth\n          }, yAxisLabelContainerStyle],\n          children: _jsx(Text, {\n            numberOfLines: yAxisTextNumberOfLines,\n            ellipsizeMode: 'clip',\n            style: [yAxisTextStyle, index === noOfSections && {\n              marginBottom: stepHeight / -2\n            }],\n            children: label\n          })\n        }, index);\n      }), !hideYAxisText && horizSections.map(function (sectionItems, index) {\n        return _jsxs(View, {\n          style: [styles.horizBar, styles.leftLabel, {\n            position: 'absolute',\n            zIndex: 1,\n            top: stepHeight * index,\n            width: yAxisLabelWidth,\n            height: index === noOfSections ? stepHeight / 2 : stepHeight\n          }],\n          children: [index === noOfSections && showReferenceLine1 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: (referenceLine1Position - (yAxisOffset != null ? yAxisOffset : 0)) * containerHeight / maxValue,\n              left: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth + yAxisThickness\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine1Config\n            }), referenceLine1Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, referenceLine1Config.labelTextStyle],\n              children: referenceLine1Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine2 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: (referenceLine2Position - (yAxisOffset != null ? yAxisOffset : 0)) * containerHeight / maxValue,\n              left: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth + yAxisThickness\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine2Config\n            }), referenceLine2Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, referenceLine2Config.labelTextStyle],\n              children: referenceLine2Config.labelText\n            }) : null]\n          }) : null, index === noOfSections && showReferenceLine3 ? _jsxs(View, {\n            style: {\n              position: 'absolute',\n              bottom: (referenceLine3Position - (yAxisOffset != null ? yAxisOffset : 0)) * containerHeight / maxValue,\n              left: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth + yAxisThickness\n            },\n            children: [_jsx(Rule, {\n              config: referenceLine3Config\n            }), referenceLine3Config.labelText ? _jsx(Text, {\n              style: [{\n                position: 'absolute'\n              }, referenceLine3Config.labelTextStyle],\n              children: referenceLine3Config.labelText\n            }) : null]\n          }) : null]\n        }, index);\n      })]\n    }), secondaryYAxis ? _jsxs(View, {\n      style: {\n        width: secondaryYAxisConfig.yAxisLabelWidth,\n        left: width ? yAxisLabelWidth : yAxisLabelWidth - spacing,\n        borderColor: secondaryYAxisConfig.yAxisColor,\n        borderLeftWidth: secondaryYAxisConfig.yAxisThickness\n      },\n      children: [!secondaryYAxisConfig.hideYAxisText ? renderSecondaryYaxisLabels(secondaryHorizSections, false) : null, noOfSectionsBelowXAxis && !secondaryYAxisConfig.hideYAxisText ? renderSecondaryYaxisLabels(secondaryHorizSectionsBelow, true) : null]\n    }) : null]\n  });\n};","map":{"version":3,"names":["React","Text","View","Rule","styles","AxesAndRulesDefaults","yAxisSides","computeMaxAndMinItems","getLabelTextUtil","jsx","_jsx","jsxs","_jsxs","renderHorizSections","props","_secondaryYAxis$noOfS","_secondaryYAxis$showF","_secondaryYAxis$round","_secondaryYAxis$noOfS2","_secondaryYAxis$showY","_secondaryYAxis$yAxis","_secondaryYAxis$yAxis2","_secondaryYAxis$yAxis3","_secondaryYAxis$yAxis4","_secondaryYAxis$yAxis5","_secondaryYAxis$yAxis6","_secondaryYAxis$yAxis7","_secondaryYAxis$yAxis8","_secondaryYAxis$yAxis9","_secondaryYAxis$yAxis10","_secondaryYAxis$yAxis11","_secondaryYAxis$hideY","_secondaryYAxis$yAxis12","_secondaryYAxis$yAxis13","_secondaryYAxis$hideO","_secondaryYAxisConfig","_secondaryYAxisConfig2","_secondaryYAxisConfig3","_secondaryYAxisConfig4","_secondaryYAxisConfig5","_referenceLinesConfig","_referenceLinesConfig2","_referenceLinesConfig3","_referenceLinesConfig4","_referenceLinesConfig5","_referenceLinesConfig6","width","h","horizSections","noOfSectionsBelowXAxis","totalWidth","endSpacing","yAxisSide","horizontalRulesStyle","noOfSections","stepHeight","yAxisLabelWidth","yAxisLabelContainerStyle","yAxisThickness","yAxisColor","xAxisThickness","xAxisColor","xAxisLength","xAxisType","dashWidth","dashGap","backgroundColor","hideRules","rulesLength","rulesType","rulesThickness","rulesColor","rulesConfigArray","spacing","showYAxisIndices","yAxisIndicesHeight","yAxisIndicesWidth","yAxisIndicesColor","hideOrigin","hideYAxisText","showFractionalValues","yAxisTextNumberOfLines","yAxisLabelPrefix","yAxisLabelSuffix","yAxisTextStyle","rotateYAxisTexts","rtl","containerHeight","maxValue","referenceLinesConfig","yAxisLabelTexts","yAxisOffset","horizontal","yAxisAtTop","stepValue","roundToDigits","secondaryData","secondaryYAxis","formatYLabel","secondaryYAxisConfig","mostNegativeValue","_computeMaxAndMinItem","maxItem","minItem","i","_yAxisLabelTexts","value","parseFloat","toFixed","push","length","toString","horizSectionsBelow","_props$yAxisLabelText","secondaryHorizSections","_secondaryYAxisConfig6","_secondaryYAxisConfig8","_secondaryYAxisConfig9","_secondaryYAxisConfig7","secondaryHorizSectionsBelow","_secondaryYAxisConfig11","_secondaryYAxisConfig12","_secondaryYAxisConfig10","showReferenceLine1","referenceLine1Position","referenceLine1Config","showReferenceLine2","referenceLine2Position","referenceLine2Config","showReferenceLine3","referenceLine3Position","referenceLine3Config","defaultReferenceConfig","thickness","color","type","labelText","labelTextStyle","getLabelTexts","val","index","getLabelTextsForSecondaryYAxis","renderAxesAndRules","_rulesConfigArray$inv","_rulesConfigArray$inv2","_rulesConfigArray$inv3","_rulesConfigArray$inv4","_ref","_rulesConfigArray$inv5","_rulesConfigArray$inv6","_rulesConfigArray$inv7","_rulesConfigArray$inv8","_rulesConfigArray$inv9","_rulesConfigArray$inv10","_rulesConfigArray$inv11","_rulesConfigArray$inv12","invertedIndex","style","lastLeftPart","leftPart","borderColor","RIGHT","borderRightWidth","borderLeftWidth","children","config","height","left","renderSecondaryYaxisLabels","isBelow","map","sectionItems","_secondaryYAxisConfig13","_secondaryYAxisConfig14","_secondaryYAxisConfig15","label","horizBar","leftLabel","position","zIndex","bottom","numberOfLines","ellipsizeMode","flexDirection","transform","rotateY","top","translateX","rotate","marginBottom","marginTop","marginLeft"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/node_modules/react-native-gifted-charts/src/Components/BarAndLineChartsWrapper/renderHorizSections.tsx"],"sourcesContent":["import React from 'react';\nimport {Text, View} from 'react-native';\nimport Rule from '../lineSvg';\nimport {styles} from '../../LineChart/styles';\nimport {AxesAndRulesDefaults, yAxisSides} from '../../utils/constants';\nimport {\n  HorizSectionsType,\n  horizSectionPropTypes,\n  secondaryYAxisType,\n} from '../../utils/types';\nimport {computeMaxAndMinItems, getLabelTextUtil} from '../../utils';\n\nexport const renderHorizSections = (props: horizSectionPropTypes) => {\n  const {\n    width,\n    horizSections: h,\n    noOfSectionsBelowXAxis,\n    totalWidth,\n    endSpacing,\n    yAxisSide,\n    horizontalRulesStyle,\n    noOfSections,\n    stepHeight,\n    yAxisLabelWidth,\n    yAxisLabelContainerStyle,\n    yAxisThickness,\n    yAxisColor,\n    xAxisThickness,\n    xAxisColor,\n    xAxisLength,\n    xAxisType,\n    dashWidth,\n    dashGap,\n    backgroundColor,\n    hideRules,\n    rulesLength,\n    rulesType,\n    rulesThickness,\n    rulesColor,\n    rulesConfigArray,\n    spacing,\n    showYAxisIndices,\n    yAxisIndicesHeight,\n    yAxisIndicesWidth,\n    yAxisIndicesColor,\n\n    hideOrigin,\n    hideYAxisText,\n    showFractionalValues,\n    yAxisTextNumberOfLines,\n    yAxisLabelPrefix,\n    yAxisLabelSuffix,\n    yAxisTextStyle,\n    rotateYAxisTexts,\n    rtl,\n\n    containerHeight,\n    maxValue,\n\n    referenceLinesConfig,\n\n    yAxisLabelTexts,\n    yAxisOffset,\n\n    horizontal,\n    yAxisAtTop,\n\n    stepValue,\n    roundToDigits,\n\n    secondaryData,\n    secondaryYAxis,\n    formatYLabel,\n  } = props;\n\n  /***********************************************************************************************************************************\n   *                                                                                                                                  *\n   *****************************               secondary Y Axis related props computations               ******************************\n   *                                                                                                                                  *\n   ***********************************************************************************************************************************/\n\n  const secondaryYAxisConfig: secondaryYAxisType = {\n    noOfSections: secondaryYAxis?.noOfSections ?? noOfSections,\n    maxValue: secondaryYAxis?.maxValue,\n    mostNegativeValue: secondaryYAxis?.mostNegativeValue,\n    stepValue: secondaryYAxis?.stepValue,\n    stepHeight: secondaryYAxis?.stepHeight,\n\n    showFractionalValues:\n      secondaryYAxis?.showFractionalValues ?? showFractionalValues,\n    roundToDigits: secondaryYAxis?.roundToDigits ?? roundToDigits,\n    noOfSectionsBelowXAxis:\n      secondaryYAxis?.noOfSectionsBelowXAxis ?? noOfSectionsBelowXAxis,\n\n    showYAxisIndices: secondaryYAxis?.showYAxisIndices ?? showYAxisIndices,\n    yAxisIndicesHeight:\n      secondaryYAxis?.yAxisIndicesHeight ?? yAxisIndicesHeight,\n    yAxisIndicesWidth: secondaryYAxis?.yAxisIndicesWidth ?? yAxisIndicesWidth,\n    yAxisIndicesColor: secondaryYAxis?.yAxisIndicesColor ?? yAxisIndicesColor,\n\n    yAxisSide: secondaryYAxis?.yAxisSide ?? yAxisSide,\n    yAxisOffset: secondaryYAxis?.yAxisOffset,\n    yAxisThickness: secondaryYAxis?.yAxisThickness ?? yAxisThickness,\n    yAxisColor: secondaryYAxis?.yAxisColor ?? yAxisColor,\n    yAxisLabelContainerStyle:\n      secondaryYAxis?.yAxisLabelContainerStyle ?? yAxisLabelContainerStyle,\n    yAxisLabelTexts: secondaryYAxis?.yAxisLabelTexts ?? yAxisLabelTexts,\n    yAxisTextStyle: secondaryYAxis?.yAxisTextStyle ?? yAxisTextStyle,\n    yAxisTextNumberOfLines:\n      secondaryYAxis?.yAxisTextNumberOfLines ?? yAxisTextNumberOfLines,\n    yAxisLabelWidth: secondaryYAxis?.yAxisLabelWidth ?? yAxisLabelWidth,\n    hideYAxisText: secondaryYAxis?.hideYAxisText ?? hideYAxisText,\n    yAxisLabelPrefix: secondaryYAxis?.yAxisLabelPrefix ?? yAxisLabelPrefix,\n    yAxisLabelSuffix: secondaryYAxis?.yAxisLabelSuffix ?? yAxisLabelSuffix,\n    hideOrigin: secondaryYAxis?.hideOrigin ?? hideOrigin,\n    formatYLabel: secondaryYAxis?.formatYLabel,\n  };\n\n  const {maxItem, minItem} = computeMaxAndMinItems(\n    secondaryData,\n    secondaryYAxisConfig.roundToDigits,\n    secondaryYAxisConfig.showFractionalValues,\n  );\n  secondaryYAxisConfig.maxValue =\n    secondaryYAxisConfig.maxValue ?? (maxItem || maxValue);\n  secondaryYAxisConfig.mostNegativeValue =\n    secondaryYAxisConfig.mostNegativeValue ?? minItem;\n  secondaryYAxisConfig.stepValue =\n    secondaryYAxisConfig.stepValue ??\n    secondaryYAxisConfig.maxValue /\n      (secondaryYAxisConfig.noOfSections ?? noOfSections);\n  secondaryYAxisConfig.stepHeight =\n    secondaryYAxisConfig.stepHeight ||\n    containerHeight / (secondaryYAxisConfig.noOfSections ?? noOfSections);\n\n  const horizSections: HorizSectionsType = [];\n  for (let i = 0; i <= noOfSections; i++) {\n    let value = maxValue - stepValue * i;\n    if (showFractionalValues || roundToDigits) {\n      value = parseFloat(\n        value.toFixed(roundToDigits ?? AxesAndRulesDefaults.roundToDigits),\n      );\n    }\n\n    horizSections.push({\n      value: yAxisLabelTexts?.length\n        ? yAxisLabelTexts[noOfSections + noOfSectionsBelowXAxis - i] ??\n          value.toString()\n        : value.toString(),\n    });\n  }\n\n  const horizSectionsBelow: HorizSectionsType = [];\n  if (noOfSectionsBelowXAxis) {\n    for (let i = 1; i <= noOfSectionsBelowXAxis; i++) {\n      let value = stepValue * -i;\n      if (showFractionalValues || roundToDigits) {\n        value = parseFloat(\n          value.toFixed(roundToDigits ?? AxesAndRulesDefaults.roundToDigits),\n        );\n      }\n      horizSectionsBelow.push({\n        value: props.yAxisLabelTexts\n          ? props.yAxisLabelTexts[noOfSectionsBelowXAxis - i] ??\n            value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  const secondaryHorizSections: HorizSectionsType = [];\n  if (secondaryYAxis) {\n    for (\n      let i = 0;\n      i <= (secondaryYAxisConfig.noOfSections ?? noOfSections);\n      i++\n    ) {\n      let value = secondaryYAxisConfig.stepValue * i;\n      if (\n        secondaryYAxisConfig.showFractionalValues ||\n        secondaryYAxisConfig.roundToDigits\n      ) {\n        value = parseFloat(\n          value.toFixed(\n            secondaryYAxisConfig.roundToDigits ??\n              AxesAndRulesDefaults.roundToDigits,\n          ),\n        );\n      }\n      secondaryHorizSections.push({\n        value: secondaryYAxisConfig.yAxisLabelTexts?.length\n          ? secondaryYAxisConfig.yAxisLabelTexts[\n              i - noOfSectionsBelowXAxis - 1\n            ] ?? value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  const secondaryHorizSectionsBelow: HorizSectionsType = [];\n  if (secondaryYAxisConfig.noOfSectionsBelowXAxis) {\n    for (let i = 1; i <= secondaryYAxisConfig.noOfSectionsBelowXAxis; i++) {\n      let value =\n        secondaryYAxisConfig.stepValue *\n        (i - secondaryYAxisConfig.noOfSectionsBelowXAxis - 1);\n      if (\n        secondaryYAxisConfig.showFractionalValues ||\n        secondaryYAxisConfig.roundToDigits\n      ) {\n        value = parseFloat(\n          value.toFixed(\n            secondaryYAxisConfig.roundToDigits ??\n              AxesAndRulesDefaults.roundToDigits,\n          ),\n        );\n      }\n      secondaryHorizSectionsBelow.push({\n        value: secondaryYAxisConfig.yAxisLabelTexts?.length\n          ? secondaryYAxisConfig.yAxisLabelTexts[i - 1] ?? value.toString()\n          : value.toString(),\n      });\n    }\n  }\n\n  /***********************************************************************************************************************************\n   ***********************************************************************************************************************************/\n\n  let {\n    showReferenceLine1,\n    referenceLine1Position,\n    referenceLine1Config,\n\n    showReferenceLine2,\n    referenceLine2Position,\n    referenceLine2Config,\n\n    showReferenceLine3,\n    referenceLine3Position,\n    referenceLine3Config,\n  } = referenceLinesConfig;\n\n  const defaultReferenceConfig = {\n    thickness: rulesThickness,\n    width: (width || totalWidth - spacing) + endSpacing,\n    color: 'black',\n    type: rulesType,\n    dashWidth: dashWidth,\n    dashGap: dashGap,\n    labelText: '',\n    labelTextStyle: null,\n  };\n\n  showReferenceLine1 = referenceLinesConfig.showReferenceLine1 || false;\n  referenceLine1Position =\n    referenceLinesConfig.referenceLine1Position ??\n    (referenceLinesConfig.referenceLine1Position || containerHeight / 2);\n  referenceLine1Config = referenceLinesConfig.referenceLine1Config\n    ? {\n        thickness:\n          referenceLinesConfig.referenceLine1Config.thickness ||\n          defaultReferenceConfig.thickness,\n        width:\n          referenceLinesConfig.referenceLine1Config.width ??\n          defaultReferenceConfig.width,\n        color:\n          referenceLinesConfig.referenceLine1Config.color ||\n          defaultReferenceConfig.color,\n        type:\n          referenceLinesConfig.referenceLine1Config.type ||\n          defaultReferenceConfig.type,\n        dashWidth:\n          referenceLinesConfig.referenceLine1Config.dashWidth ||\n          defaultReferenceConfig.dashWidth,\n        dashGap:\n          referenceLinesConfig.referenceLine1Config.dashGap ||\n          defaultReferenceConfig.dashGap,\n        labelText:\n          referenceLinesConfig.referenceLine1Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          referenceLinesConfig.referenceLine1Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  showReferenceLine2 = referenceLinesConfig.showReferenceLine2 || false;\n  referenceLine2Position =\n    referenceLinesConfig.referenceLine2Position ??\n    (referenceLinesConfig.referenceLine2Position || (3 * containerHeight) / 2);\n  referenceLine2Config = referenceLinesConfig.referenceLine2Config\n    ? {\n        thickness:\n          referenceLinesConfig.referenceLine2Config.thickness ||\n          defaultReferenceConfig.thickness,\n        width:\n          referenceLinesConfig.referenceLine2Config.width ??\n          defaultReferenceConfig.width,\n        color:\n          referenceLinesConfig.referenceLine2Config.color ||\n          defaultReferenceConfig.color,\n        type:\n          referenceLinesConfig.referenceLine2Config.type ||\n          defaultReferenceConfig.type,\n        dashWidth:\n          referenceLinesConfig.referenceLine2Config.dashWidth ||\n          defaultReferenceConfig.dashWidth,\n        dashGap:\n          referenceLinesConfig.referenceLine2Config.dashGap ||\n          defaultReferenceConfig.dashGap,\n        labelText:\n          referenceLinesConfig.referenceLine2Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          referenceLinesConfig.referenceLine2Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  showReferenceLine3 = referenceLinesConfig.showReferenceLine3 || false;\n  referenceLine3Position =\n    referenceLinesConfig.referenceLine3Position ??\n    (referenceLinesConfig.referenceLine3Position || containerHeight / 3);\n  referenceLine3Config = referenceLinesConfig.referenceLine3Config\n    ? {\n        thickness:\n          referenceLinesConfig.referenceLine3Config.thickness ||\n          defaultReferenceConfig.thickness,\n        width:\n          referenceLinesConfig.referenceLine3Config.width ??\n          defaultReferenceConfig.width,\n        color:\n          referenceLinesConfig.referenceLine3Config.color ||\n          defaultReferenceConfig.color,\n        type:\n          referenceLinesConfig.referenceLine3Config.type ||\n          defaultReferenceConfig.type,\n        dashWidth:\n          referenceLinesConfig.referenceLine3Config.dashWidth ||\n          defaultReferenceConfig.dashWidth,\n        dashGap:\n          referenceLinesConfig.referenceLine3Config.dashGap ||\n          defaultReferenceConfig.dashGap,\n        labelText:\n          referenceLinesConfig.referenceLine3Config.labelText ||\n          defaultReferenceConfig.labelText,\n        labelTextStyle:\n          referenceLinesConfig.referenceLine3Config.labelTextStyle ||\n          defaultReferenceConfig.labelTextStyle,\n      }\n    : defaultReferenceConfig;\n\n  const getLabelTexts = (val, index) => {\n    return getLabelTextUtil(\n      val,\n      index,\n      showFractionalValues,\n      yAxisLabelTexts,\n      yAxisOffset,\n      yAxisLabelPrefix,\n      yAxisLabelSuffix,\n      roundToDigits ?? AxesAndRulesDefaults.roundToDigits,\n      formatYLabel,\n    );\n  };\n\n  const getLabelTextsForSecondaryYAxis = (val, index) => {\n    const {\n      showFractionalValues,\n      yAxisLabelTexts,\n      yAxisOffset,\n      yAxisLabelPrefix,\n      yAxisLabelSuffix,\n      roundToDigits,\n      formatYLabel,\n    } = secondaryYAxisConfig;\n    return getLabelTextUtil(\n      val,\n      index,\n      showFractionalValues,\n      yAxisLabelTexts,\n      yAxisOffset,\n      yAxisLabelPrefix,\n      yAxisLabelSuffix,\n      roundToDigits ?? AxesAndRulesDefaults.roundToDigits,\n      formatYLabel,\n    );\n  };\n\n  const renderAxesAndRules = (index: number) => {\n    const invertedIndex = horizSections.length - index - 1;\n    return (\n      <View\n        style={[\n          index === noOfSections ? styles.lastLeftPart : styles.leftPart,\n          {\n            borderColor: yAxisColor,\n            backgroundColor: backgroundColor,\n            width: (props.width || totalWidth - spacing) + endSpacing,\n          },\n          yAxisSide === yAxisSides.RIGHT\n            ? {borderRightWidth: yAxisThickness}\n            : {borderLeftWidth: yAxisThickness},\n        ]}>\n        {index === noOfSections ? (\n          <Rule\n            config={{\n              thickness: xAxisThickness,\n              color: xAxisColor,\n              width:\n                xAxisLength ||\n                (props.width || totalWidth - spacing) + endSpacing,\n              dashWidth: dashWidth,\n              dashGap: dashGap,\n              type: xAxisType,\n            }}\n          />\n        ) : hideRules ? null : (\n          <Rule\n            config={{\n              thickness:\n                rulesConfigArray[invertedIndex]?.rulesThickness ??\n                rulesThickness,\n              color: rulesConfigArray[invertedIndex]?.rulesColor ?? rulesColor,\n              width:\n                rulesConfigArray[invertedIndex]?.rulesLength ??\n                rulesLength ??\n                (props.width || totalWidth - spacing) + endSpacing,\n              dashWidth:\n                rulesConfigArray[invertedIndex]?.dashWidth ?? dashWidth,\n              dashGap: rulesConfigArray[invertedIndex]?.dashGap ?? dashGap,\n              type: rulesConfigArray[invertedIndex]?.rulesType ?? rulesType,\n            }}\n          />\n        )}\n        {showYAxisIndices && index !== noOfSections ? (\n          <View\n            style={{\n              height: yAxisIndicesHeight,\n              width: yAxisIndicesWidth,\n              left:\n                yAxisIndicesWidth / -2 +\n                (yAxisSide === yAxisSides.RIGHT\n                  ? (width ?? totalWidth) +\n                    yAxisLabelWidth / 2 +\n                    yAxisIndicesWidth / 4\n                  : 0),\n              backgroundColor: yAxisIndicesColor,\n            }}\n          />\n        ) : null}\n      </View>\n    );\n  };\n\n  const renderSecondaryYaxisLabels = (\n    horizSections: HorizSectionsType,\n    isBelow: boolean,\n  ) =>\n    horizSections.map((sectionItems, index) => {\n      let label = getLabelTextsForSecondaryYAxis(sectionItems.value, index);\n      if (\n        secondaryYAxisConfig.hideOrigin &&\n        index === secondaryHorizSections.length - 1\n      ) {\n        label = '';\n      }\n      return (\n        <View\n          key={index}\n          style={[\n            styles.horizBar,\n            styles.leftLabel,\n            {\n              position: 'absolute',\n              zIndex: 1,\n              bottom:\n                (secondaryYAxisConfig.stepHeight ?? 0) *\n                ((isBelow ? 0 : noOfSectionsBelowXAxis) +\n                  index -\n                  (noOfSectionsBelowXAxis ? 0 : 0.5)),\n              width: secondaryYAxisConfig.yAxisLabelWidth,\n              height: secondaryYAxisConfig.stepHeight ?? 0,\n            },\n            yAxisLabelContainerStyle,\n          ]}>\n          {secondaryYAxisConfig.showYAxisIndices && index !== 0 ? (\n            <View\n              style={{\n                height: secondaryYAxisConfig.yAxisIndicesHeight,\n                width: secondaryYAxisConfig.yAxisIndicesWidth,\n                position: 'absolute',\n                left: (secondaryYAxisConfig.yAxisIndicesWidth ?? 0) / -2,\n                backgroundColor: secondaryYAxisConfig.yAxisIndicesColor,\n              }}\n            />\n          ) : null}\n          <Text\n            numberOfLines={secondaryYAxisConfig.yAxisTextNumberOfLines}\n            ellipsizeMode={'clip'}\n            style={[secondaryYAxisConfig.yAxisTextStyle]}>\n            {label}\n          </Text>\n        </View>\n      );\n    });\n\n  return (\n    <View style={{flexDirection: 'row'}}>\n      <View style={{width: (width ?? totalWidth) + endSpacing}}>\n        {horizSections.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: (width ?? totalWidth) + endSpacing,\n                },\n                horizontal &&\n                  !yAxisAtTop && {\n                    transform: [{rotateY: '180deg'}],\n                  },\n                horizontalRulesStyle,\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    height:\n                      index === noOfSections ? stepHeight / 2 : stepHeight,\n                    width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth,\n                  },\n                  yAxisLabelContainerStyle,\n                ]}\n              />\n              {renderAxesAndRules(index)}\n            </View>\n          );\n        })}\n\n        {\n          /***********************************************************************************************/\n          /**************************      Render the y axis labels separately      **********************/\n          /***********************************************************************************************/\n\n          !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              let label = getLabelTexts(sectionItems.value, index);\n              if (hideOrigin && index === horizSections.length - 1) {\n                label = '';\n              }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === yAxisSides.RIGHT && {\n                      left: (width ?? totalWidth) + yAxisLabelWidth / 2,\n                    },\n                    horizontal &&\n                      !yAxisAtTop && {\n                        transform: [\n                          {\n                            translateX: (width ?? totalWidth) - 30 + endSpacing,\n                          },\n                        ],\n                      },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      horizontal && {\n                        transform: [\n                          {\n                            rotate: `${\n                              rotateYAxisTexts ?? (rtl ? 90 : -90)\n                            }deg`,\n                          },\n                        ],\n                      },\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n\n        {horizSectionsBelow.map((sectionItems, index) => {\n          return (\n            <View\n              key={index}\n              style={[\n                styles.horizBar,\n                {\n                  width: (width ?? totalWidth) + 15,\n                },\n                index === 0 && {marginTop: stepHeight / 2},\n              ]}>\n              <View\n                style={[\n                  styles.leftLabel,\n                  {\n                    borderRightWidth: yAxisThickness,\n                    borderColor: yAxisColor,\n                    marginLeft: yAxisThickness,\n                  },\n                  {\n                    height: index === 0 ? stepHeight * 1.5 : stepHeight,\n                    width: yAxisSide === yAxisSides.RIGHT ? 0 : yAxisLabelWidth,\n                  },\n                  index === 0 && {marginTop: -stepHeight / 2},\n                ]}\n              />\n              <View\n                style={[styles.leftPart, {backgroundColor: backgroundColor}]}>\n                {hideRules ? null : (\n                  <Rule\n                    config={{\n                      thickness: rulesThickness,\n                      color: rulesColor,\n                      width:\n                        rulesLength ||\n                        (props.width || totalWidth - spacing) + endSpacing,\n                      dashWidth: dashWidth,\n                      dashGap: dashGap,\n                      type: rulesType,\n                    }}\n                  />\n                )}\n              </View>\n            </View>\n          );\n        })}\n\n        {\n          /***********************************************************************************************/\n          /*************************      Render the y axis labels below origin      *********************/\n          /***********************************************************************************************/\n\n          !hideYAxisText &&\n            horizSectionsBelow.map((sectionItems, index) => {\n              let label = getLabelTexts(\n                horizSectionsBelow[horizSectionsBelow.length - 1 - index].value,\n                index,\n              );\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      bottom: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                    yAxisSide === yAxisSides.RIGHT && {\n                      left: (width ?? totalWidth) + yAxisLabelWidth,\n                    },\n                    yAxisLabelContainerStyle,\n                  ]}>\n                  <Text\n                    numberOfLines={yAxisTextNumberOfLines}\n                    ellipsizeMode={'clip'}\n                    style={[\n                      yAxisTextStyle,\n                      index === noOfSections && {\n                        marginBottom: stepHeight / -2,\n                      },\n                    ]}>\n                    {label}\n                  </Text>\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n\n        {\n          /***********************************************************************************************/\n          /*************************      Render the reference lines separately      *********************/\n          /***********************************************************************************************/\n\n          !hideYAxisText &&\n            horizSections.map((sectionItems, index) => {\n              // let label = getLabelTexts(sectionItems.value, index);\n              // if (hideOrigin && index === horizSections.length - 1) {\n              //   label = '';\n              // }\n              return (\n                <View\n                  key={index}\n                  style={[\n                    styles.horizBar,\n                    styles.leftLabel,\n                    {\n                      position: 'absolute',\n                      zIndex: 1,\n                      top: stepHeight * index,\n                      width: yAxisLabelWidth,\n                      height:\n                        index === noOfSections ? stepHeight / 2 : stepHeight,\n                    },\n                  ]}>\n                  {index === noOfSections && showReferenceLine1 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          ((referenceLine1Position - (yAxisOffset ?? 0)) *\n                            containerHeight) /\n                          maxValue,\n                        left:\n                          yAxisSide === yAxisSides.RIGHT\n                            ? 0\n                            : yAxisLabelWidth + yAxisThickness,\n                      }}>\n                      <Rule config={referenceLine1Config} />\n                      {referenceLine1Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            referenceLine1Config.labelTextStyle,\n                          ]}>\n                          {referenceLine1Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine2 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          ((referenceLine2Position - (yAxisOffset ?? 0)) *\n                            containerHeight) /\n                          maxValue,\n                        left:\n                          yAxisSide === yAxisSides.RIGHT\n                            ? 0\n                            : yAxisLabelWidth + yAxisThickness,\n                      }}>\n                      <Rule config={referenceLine2Config} />\n                      {referenceLine2Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            referenceLine2Config.labelTextStyle,\n                          ]}>\n                          {referenceLine2Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                  {index === noOfSections && showReferenceLine3 ? (\n                    <View\n                      style={{\n                        position: 'absolute',\n                        bottom:\n                          ((referenceLine3Position - (yAxisOffset ?? 0)) *\n                            containerHeight) /\n                          maxValue,\n                        left:\n                          yAxisSide === yAxisSides.RIGHT\n                            ? 0\n                            : yAxisLabelWidth + yAxisThickness,\n                      }}>\n                      <Rule config={referenceLine3Config} />\n                      {referenceLine3Config.labelText ? (\n                        <Text\n                          style={[\n                            {position: 'absolute'},\n                            referenceLine3Config.labelTextStyle,\n                          ]}>\n                          {referenceLine3Config.labelText}\n                        </Text>\n                      ) : null}\n                    </View>\n                  ) : null}\n                </View>\n              );\n            })\n          /***********************************************************************************************/\n          /***********************************************************************************************/\n        }\n      </View>\n      {\n        /***********************************************************************************************/\n        /*************************      Render the secondary Y Axis                *********************/\n        /***********************************************************************************************/\n        secondaryYAxis ? (\n          <View\n            style={{\n              width: secondaryYAxisConfig.yAxisLabelWidth,\n              left: width ? yAxisLabelWidth : yAxisLabelWidth - spacing,\n              borderColor: secondaryYAxisConfig.yAxisColor,\n              borderLeftWidth: secondaryYAxisConfig.yAxisThickness,\n            }}>\n            {!secondaryYAxisConfig.hideYAxisText\n              ? renderSecondaryYaxisLabels(secondaryHorizSections, false)\n              : null}\n            {noOfSectionsBelowXAxis && !secondaryYAxisConfig.hideYAxisText\n              ? renderSecondaryYaxisLabels(secondaryHorizSectionsBelow, true)\n              : null}\n          </View>\n        ) : null\n      }\n    </View>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}