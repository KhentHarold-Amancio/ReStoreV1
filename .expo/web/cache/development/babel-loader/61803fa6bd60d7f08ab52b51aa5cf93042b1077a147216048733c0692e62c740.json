{"ast":null,"code":"import React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { BarChart } from \"react-native-gifted-charts\";\nimport { SIZES, COLORS } from \"../../../constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Graph = function Graph() {\n  var barData = [{\n    value: 230,\n    label: \"M\",\n    labelTextStyle: {\n      color: COLORS.gray3\n    }\n  }, {\n    value: 180,\n    label: \"T\",\n    labelTextStyle: {\n      color: COLORS.gray3\n    }\n  }, {\n    value: 195,\n    label: \"W\",\n    labelTextStyle: {\n      color: COLORS.gray3\n    }\n  }, {\n    value: 250,\n    label: \"Th\",\n    labelTextStyle: {\n      color: COLORS.gray3\n    }\n  }, {\n    value: 320,\n    label: \"F\",\n    labelTextStyle: {\n      color: COLORS.gray3\n    }\n  }, {\n    value: 420,\n    label: \"S\",\n    labelTextStyle: {\n      color: COLORS.gray3\n    }\n  }];\n  var getMaxValue = function getMaxValue(data) {\n    if (!Array.isArray(data) || data.length === 0) {\n      return null;\n    }\n    var maxValue = data.reduce(function (max, item) {\n      return item.value > max ? item.value : max;\n    }, data[0].value);\n    var roundedMaxValue = Math.ceil(maxValue / 100) * 100;\n    return roundedMaxValue;\n  };\n  var calculateStepValue = function calculateStepValue(maxValue) {\n    var maxSections = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n    var roundedMaxValue = Math.ceil(maxValue / 100) * 100;\n    var stepValue = Math.ceil(roundedMaxValue / maxSections / 100) * 100;\n    return stepValue;\n  };\n  var maxBarValue = getMaxValue(barData);\n  var stepValue = calculateStepValue(maxBarValue, 3);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(BarChart, {\n      showFractionalValue: true,\n      showYAxisIndices: true,\n      noOfSections: 3,\n      maxValue: maxBarValue,\n      dashGap: 0,\n      data: barData,\n      isAnimated: true,\n      stepHeight: 50,\n      roundedTop: true,\n      frontColor: COLORS.primary,\n      spacing: 25,\n      barWidth: SIZES.cardWidth / 20,\n      yAxisTextStyle: {\n        color: COLORS.gray3\n      },\n      xAxisTextStyle: {\n        color: COLORS.gray3\n      },\n      xAxisColor: COLORS.lightWhite,\n      yAxisThickness: 0\n    })\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    width: \"auto\",\n    justifyContent: \"center\",\n    padding: 10,\n    marginTop: -10,\n    marginRight: 20\n  }\n});\nexport default Graph;","map":{"version":3,"names":["React","View","Text","StyleSheet","BarChart","SIZES","COLORS","jsx","_jsx","Graph","barData","value","label","labelTextStyle","color","gray3","getMaxValue","data","Array","isArray","length","maxValue","reduce","max","item","roundedMaxValue","Math","ceil","calculateStepValue","maxSections","arguments","undefined","stepValue","maxBarValue","style","styles","container","children","showFractionalValue","showYAxisIndices","noOfSections","dashGap","isAnimated","stepHeight","roundedTop","frontColor","primary","spacing","barWidth","cardWidth","yAxisTextStyle","xAxisTextStyle","xAxisColor","lightWhite","yAxisThickness","create","alignItems","width","justifyContent","padding","marginTop","marginRight"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/components/Sales/graph/graph.js"],"sourcesContent":["import React from \"react\";\nimport { View, Text, StyleSheet } from \"react-native\";\nimport { BarChart } from \"react-native-gifted-charts\";\nimport { SIZES, COLORS } from \"../../../constants\";\n\nconst Graph = () => {\n  const barData = [\n    { value: 230, label: \"M\", labelTextStyle: { color: COLORS.gray3 } },\n    { value: 180, label: \"T\", labelTextStyle: { color: COLORS.gray3 } },\n    { value: 195, label: \"W\", labelTextStyle: { color: COLORS.gray3 } },\n    { value: 250, label: \"Th\", labelTextStyle: { color: COLORS.gray3 } },\n    { value: 320, label: \"F\", labelTextStyle: { color: COLORS.gray3 } },\n    { value: 420, label: \"S\", labelTextStyle: { color: COLORS.gray3 } },\n  ];\n\n  const getMaxValue = (data) => {\n    if (!Array.isArray(data) || data.length === 0) {\n      return null;\n    }\n    const maxValue = data.reduce(\n      (max, item) => (item.value > max ? item.value : max),\n      data[0].value\n    );\n    const roundedMaxValue = Math.ceil(maxValue / 100) * 100;\n\n    return roundedMaxValue;\n  };\n\n  const calculateStepValue = (maxValue, maxSections = 3) => {\n    const roundedMaxValue = Math.ceil(maxValue / 100) * 100;\n    const stepValue = Math.ceil(roundedMaxValue / maxSections / 100) * 100;\n    return stepValue;\n  };\n\n  const maxBarValue = getMaxValue(barData);\n  const stepValue = calculateStepValue(maxBarValue, 3);\n\n  return (\n    <View style={styles.container}>\n      <BarChart\n        showFractionalValue\n        showYAxisIndices\n        noOfSections={3}\n        maxValue={maxBarValue}\n        dashGap={0}\n        data={barData}\n        isAnimated\n        stepHeight={50}\n        roundedTop\n        frontColor={COLORS.primary}\n        spacing={25}\n        barWidth={SIZES.cardWidth / 20}\n        yAxisTextStyle={{ color: COLORS.gray3 }}\n        xAxisTextStyle={{ color: COLORS.gray3 }}\n        xAxisColor={COLORS.lightWhite}\n        yAxisThickness={0}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    width: \"auto\",\n    justifyContent: \"center\",\n    padding: 10,\n    marginTop: -10,\n    marginRight: 20,\n  },\n});\n\nexport default Graph;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,QAAQ,QAAQ,4BAA4B;AACrD,SAASC,KAAK,EAAEC,MAAM;AAA6B,SAAAC,GAAA,IAAAC,IAAA;AAEnD,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAClB,IAAMC,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,cAAc,EAAE;MAAEC,KAAK,EAAER,MAAM,CAACS;IAAM;EAAE,CAAC,EACnE;IAAEJ,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,cAAc,EAAE;MAAEC,KAAK,EAAER,MAAM,CAACS;IAAM;EAAE,CAAC,EACnE;IAAEJ,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,cAAc,EAAE;MAAEC,KAAK,EAAER,MAAM,CAACS;IAAM;EAAE,CAAC,EACnE;IAAEJ,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,IAAI;IAAEC,cAAc,EAAE;MAAEC,KAAK,EAAER,MAAM,CAACS;IAAM;EAAE,CAAC,EACpE;IAAEJ,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,cAAc,EAAE;MAAEC,KAAK,EAAER,MAAM,CAACS;IAAM;EAAE,CAAC,EACnE;IAAEJ,KAAK,EAAE,GAAG;IAAEC,KAAK,EAAE,GAAG;IAAEC,cAAc,EAAE;MAAEC,KAAK,EAAER,MAAM,CAACS;IAAM;EAAE,CAAC,CACpE;EAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,IAAI,EAAK;IAC5B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,IAAIA,IAAI,CAACG,MAAM,KAAK,CAAC,EAAE;MAC7C,OAAO,IAAI;IACb;IACA,IAAMC,QAAQ,GAAGJ,IAAI,CAACK,MAAM,CAC1B,UAACC,GAAG,EAAEC,IAAI;MAAA,OAAMA,IAAI,CAACb,KAAK,GAAGY,GAAG,GAAGC,IAAI,CAACb,KAAK,GAAGY,GAAG;IAAA,CAAC,EACpDN,IAAI,CAAC,CAAC,CAAC,CAACN,KACV,CAAC;IACD,IAAMc,eAAe,GAAGC,IAAI,CAACC,IAAI,CAACN,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG;IAEvD,OAAOI,eAAe;EACxB,CAAC;EAED,IAAMG,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIP,QAAQ,EAAsB;IAAA,IAApBQ,WAAW,GAAAC,SAAA,CAAAV,MAAA,QAAAU,SAAA,QAAAC,SAAA,GAAAD,SAAA,MAAG,CAAC;IACnD,IAAML,eAAe,GAAGC,IAAI,CAACC,IAAI,CAACN,QAAQ,GAAG,GAAG,CAAC,GAAG,GAAG;IACvD,IAAMW,SAAS,GAAGN,IAAI,CAACC,IAAI,CAACF,eAAe,GAAGI,WAAW,GAAG,GAAG,CAAC,GAAG,GAAG;IACtE,OAAOG,SAAS;EAClB,CAAC;EAED,IAAMC,WAAW,GAAGjB,WAAW,CAACN,OAAO,CAAC;EACxC,IAAMsB,SAAS,GAAGJ,kBAAkB,CAACK,WAAW,EAAE,CAAC,CAAC;EAEpD,OACEzB,IAAA,CAACP,IAAI;IAACiC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,EAC5B7B,IAAA,CAACJ,QAAQ;MACPkC,mBAAmB;MACnBC,gBAAgB;MAChBC,YAAY,EAAE,CAAE;MAChBnB,QAAQ,EAAEY,WAAY;MACtBQ,OAAO,EAAE,CAAE;MACXxB,IAAI,EAAEP,OAAQ;MACdgC,UAAU;MACVC,UAAU,EAAE,EAAG;MACfC,UAAU;MACVC,UAAU,EAAEvC,MAAM,CAACwC,OAAQ;MAC3BC,OAAO,EAAE,EAAG;MACZC,QAAQ,EAAE3C,KAAK,CAAC4C,SAAS,GAAG,EAAG;MAC/BC,cAAc,EAAE;QAAEpC,KAAK,EAAER,MAAM,CAACS;MAAM,CAAE;MACxCoC,cAAc,EAAE;QAAErC,KAAK,EAAER,MAAM,CAACS;MAAM,CAAE;MACxCqC,UAAU,EAAE9C,MAAM,CAAC+C,UAAW;MAC9BC,cAAc,EAAE;IAAE,CACnB;EAAC,CACE,CAAC;AAEX,CAAC;AAED,IAAMnB,MAAM,GAAGhC,UAAU,CAACoD,MAAM,CAAC;EAC/BnB,SAAS,EAAE;IACToB,UAAU,EAAE,QAAQ;IACpBC,KAAK,EAAE,MAAM;IACbC,cAAc,EAAE,QAAQ;IACxBC,OAAO,EAAE,EAAE;IACXC,SAAS,EAAE,CAAC,EAAE;IACdC,WAAW,EAAE;EACf;AACF,CAAC,CAAC;AAEF,eAAepD,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}