{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { useCallback, useEffect, useMemo, useState, useRef } from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RenderBars from \"./RenderBars\";\nimport RenderStackBars from \"./RenderStackBars\";\nimport { getArrowPoints, getAxesAndRulesProps, getExtendedContainerHeightWithPadding, getLineConfigForBarChart, getSecondaryDataWithOffsetIncluded, getXForLineInBar, getYForLineInBar, maxAndMinUtil, svgPath } from \"../utils\";\nimport { AxesAndRulesDefaults, BarDefaults, chartTypes, defaultLineConfig, defaultPointerConfig, screenWidth } from \"../utils/constants\";\nimport BarAndLineChartsWrapper from \"../Components/BarAndLineChartsWrapper\";\nimport { StripAndLabel } from \"../Components/common/StripAndLabel\";\nimport { Pointer } from \"../Components/common/Pointer\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport var BarChart = function BarChart(props) {\n  var _props$scrollRef, _props$spacing, _props$initialSpacing, _props$endSpacing, _props$horizontal, _props$rtl, _props$yAxisAtTop, _props$intactTopLabel, _props$isAnimated, _props$animationDurat, _props$noOfSections, _props$stepHeight, _props$stepHeight2, _props$labelWidth, _props$scrollToEnd, _props$scrollAnimatio, _props$scrollEventThr, _props$labelsExtraHei, _props$maxValue, _props$mostNegativeVa, _props$stepValue, _props$noOfSectionsBe, _props$showScrollIndi, _props$side, _props$rotateLabel, _props$opacity, _props$isThreeD, _props$showXAxisIndic, _props$xAxisIndicesHe, _props$xAxisIndicesWi, _props$xAxisIndicesCo, _props$xAxisThickness, _props$xAxisTextNumbe, _props$xAxisLabelsVer, _props$yAxisLabelWidt, _props$autoShiftLabel, _props$barBorderColor, _pointerConfig$height, _pointerConfig$width, _pointerConfig$radius, _pointerConfig$pointe, _pointerConfig$pointe2, _pointerConfig$pointe3, _pointerConfig$pointe4, _pointerConfig$pointe5, _pointerConfig$pointe6, _pointerConfig$pointe7, _pointerConfig$stripO, _pointerConfig$shiftP, _pointerConfig$shiftP2, _pointerConfig$pointe8, _pointerConfig$pointe9, _pointerConfig$autoAd, _pointerConfig$pointe10, _pointerConfig$activa, _pointerConfig$activa2, _pointerConfig$initia, _pointerConfig$initia2, _pointerConfig$persis, _pointerConfig$hidePo, _props$shiftX, _props$shiftY;\n  var scrollRef = (_props$scrollRef = props.scrollRef) != null ? _props$scrollRef : useRef(null);\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    points = _useState2[0],\n    setPoints = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    points2 = _useState4[0],\n    setPoints2 = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    arrowPoints = _useState6[0],\n    setArrowPoints = _useState6[1];\n  var _useState7 = useState(-1),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedIndex = _useState8[0],\n    setSelectedIndex = _useState8[1];\n  var showLine = props.showLine || BarDefaults.showLine;\n  var spacing = (_props$spacing = props.spacing) != null ? _props$spacing : BarDefaults.spacing;\n  var initialSpacing = (_props$initialSpacing = props.initialSpacing) != null ? _props$initialSpacing : spacing;\n  var endSpacing = (_props$endSpacing = props.endSpacing) != null ? _props$endSpacing : spacing;\n  var showFractionalValues = props.showFractionalValues || AxesAndRulesDefaults.showFractionalValues;\n  var horizontal = (_props$horizontal = props.horizontal) != null ? _props$horizontal : BarDefaults.horizontal;\n  var rtl = (_props$rtl = props.rtl) != null ? _props$rtl : BarDefaults.rtl;\n  var yAxisAtTop = (_props$yAxisAtTop = props.yAxisAtTop) != null ? _props$yAxisAtTop : BarDefaults.yAxisAtTop;\n  var intactTopLabel = (_props$intactTopLabel = props.intactTopLabel) != null ? _props$intactTopLabel : BarDefaults.intactTopLabel;\n  var heightFromProps = horizontal ? props.width : props.height;\n  var widthFromProps = horizontal ? props.height : props.width;\n  var isAnimated = (_props$isAnimated = props.isAnimated) != null ? _props$isAnimated : BarDefaults.isAnimated;\n  var animationDuration = (_props$animationDurat = props.animationDuration) != null ? _props$animationDurat : BarDefaults.animationDuration;\n  var data = useMemo(function () {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(function (item) {\n        var _props$yAxisOffset;\n        item.value = item.value - ((_props$yAxisOffset = props.yAxisOffset) != null ? _props$yAxisOffset : 0);\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n  var secondaryData = getSecondaryDataWithOffsetIncluded(props.secondaryData, props.secondaryYAxis);\n  var lineData = useMemo(function () {\n    if (!props.lineData) {\n      var _props$stackData;\n      return (_props$stackData = props.stackData) != null ? _props$stackData : data;\n    }\n    if (props.yAxisOffset) {\n      return props.lineData.map(function (item) {\n        var _props$yAxisOffset2;\n        item.value = item.value - ((_props$yAxisOffset2 = props.yAxisOffset) != null ? _props$yAxisOffset2 : 0);\n        return item;\n      });\n    }\n    return props.lineData;\n  }, [props.yAxisOffset, props.lineData, data, props.stackData]);\n  var lineData2 = props.lineData2;\n  var lineBehindBars = props.lineBehindBars || BarDefaults.lineBehindBars;\n  defaultLineConfig.initialSpacing = initialSpacing;\n  defaultLineConfig.endIndex = lineData.length - 1;\n  defaultLineConfig.animationDuration = animationDuration;\n  var lineConfig = props.lineConfig ? getLineConfigForBarChart(props.lineConfig) : defaultLineConfig;\n  var lineConfig2 = props.lineConfig2 ? getLineConfigForBarChart(props.lineConfig2) : defaultLineConfig;\n  var noOfSections = (_props$noOfSections = props.noOfSections) != null ? _props$noOfSections : AxesAndRulesDefaults.noOfSections;\n  var containerHeight = heightFromProps != null ? heightFromProps : ((_props$stepHeight = props.stepHeight) != null ? _props$stepHeight : 0) * noOfSections || AxesAndRulesDefaults.containerHeight;\n  var horizSections = [{\n    value: '0'\n  }];\n  var stepHeight = (_props$stepHeight2 = props.stepHeight) != null ? _props$stepHeight2 : containerHeight / noOfSections;\n  var labelWidth = (_props$labelWidth = props.labelWidth) != null ? _props$labelWidth : AxesAndRulesDefaults.labelWidth;\n  var scrollToEnd = (_props$scrollToEnd = props.scrollToEnd) != null ? _props$scrollToEnd : BarDefaults.scrollToEnd;\n  var scrollAnimation = (_props$scrollAnimatio = props.scrollAnimation) != null ? _props$scrollAnimatio : BarDefaults.scrollAnimation;\n  var scrollEventThrottle = (_props$scrollEventThr = props.scrollEventThrottle) != null ? _props$scrollEventThr : BarDefaults.scrollEventThrottle;\n  var labelsExtraHeight = (_props$labelsExtraHei = props.labelsExtraHeight) != null ? _props$labelsExtraHei : AxesAndRulesDefaults.labelsExtraHeight;\n  var totalWidth = initialSpacing;\n  var maxItem = 0,\n    minItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(function (stackItem) {\n      var _ref, _stackItem$stacks$0$b;\n      var stackSum = stackItem.stacks.reduce(function (acc, stack) {\n        var _stack$value;\n        return acc + ((_stack$value = stack.value) != null ? _stack$value : 0);\n      }, 0);\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n      totalWidth += ((_ref = (_stackItem$stacks$0$b = stackItem.stacks[0].barWidth) != null ? _stackItem$stacks$0$b : props.barWidth) != null ? _ref : BarDefaults.barWidth) + spacing;\n    });\n  } else {\n    data.forEach(function (item) {\n      var _ref2, _item$barWidth, _item$spacing;\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n      totalWidth += ((_ref2 = (_item$barWidth = item.barWidth) != null ? _item$barWidth : props.barWidth) != null ? _ref2 : BarDefaults.barWidth) + ((_item$spacing = item.spacing) != null ? _item$spacing : spacing);\n    });\n  }\n  var secondaryMaxItem = 0,\n    secondaryMinItem = 0;\n  if (lineConfig.isSecondary) {\n    lineData.forEach(function (item) {\n      if (item.value > secondaryMaxItem) {\n        secondaryMaxItem = item.value;\n      }\n      if (item.value < secondaryMinItem) {\n        secondaryMinItem = item.value;\n      }\n    });\n  }\n  var maxAndMin = maxAndMinUtil(maxItem, minItem, props.roundToDigits, props.showFractionalValues);\n  var secondaryMaxAndMin = maxAndMinUtil(secondaryMaxItem, secondaryMinItem, props.roundToDigits, props.showFractionalValues);\n  var maxValue = (_props$maxValue = props.maxValue) != null ? _props$maxValue : maxAndMin.maxItem;\n  var secondaryMaxValue = lineConfig.isSecondary ? secondaryMaxAndMin.maxItem : maxValue;\n  var mostNegativeValue = (_props$mostNegativeVa = props.mostNegativeValue) != null ? _props$mostNegativeVa : maxAndMin.minItem;\n  var stepValue = (_props$stepValue = props.stepValue) != null ? _props$stepValue : maxValue / noOfSections;\n  var noOfSectionsBelowXAxis = (_props$noOfSectionsBe = props.noOfSectionsBelowXAxis) != null ? _props$noOfSectionsBe : -mostNegativeValue / stepValue;\n  var showScrollIndicator = (_props$showScrollIndi = props.showScrollIndicator) != null ? _props$showScrollIndi : BarDefaults.showScrollIndicator;\n  var side = (_props$side = props.side) != null ? _props$side : BarDefaults.side;\n  var rotateLabel = (_props$rotateLabel = props.rotateLabel) != null ? _props$rotateLabel : AxesAndRulesDefaults.rotateLabel;\n  var opacity = (_props$opacity = props.opacity) != null ? _props$opacity : BarDefaults.opacity;\n  var isThreeD = (_props$isThreeD = props.isThreeD) != null ? _props$isThreeD : BarDefaults.isThreeD;\n  var showXAxisIndices = (_props$showXAxisIndic = props.showXAxisIndices) != null ? _props$showXAxisIndic : AxesAndRulesDefaults.showXAxisIndices;\n  var xAxisIndicesHeight = (_props$xAxisIndicesHe = props.xAxisIndicesHeight) != null ? _props$xAxisIndicesHe : AxesAndRulesDefaults.xAxisIndicesHeight;\n  var xAxisIndicesWidth = (_props$xAxisIndicesWi = props.xAxisIndicesWidth) != null ? _props$xAxisIndicesWi : AxesAndRulesDefaults.xAxisIndicesWidth;\n  var xAxisIndicesColor = (_props$xAxisIndicesCo = props.xAxisIndicesColor) != null ? _props$xAxisIndicesCo : AxesAndRulesDefaults.xAxisIndicesColor;\n  var xAxisThickness = (_props$xAxisThickness = props.xAxisThickness) != null ? _props$xAxisThickness : AxesAndRulesDefaults.xAxisThickness;\n  var xAxisTextNumberOfLines = (_props$xAxisTextNumbe = props.xAxisTextNumberOfLines) != null ? _props$xAxisTextNumbe : AxesAndRulesDefaults.xAxisTextNumberOfLines;\n  var xAxisLabelsVerticalShift = (_props$xAxisLabelsVer = props.xAxisLabelsVerticalShift) != null ? _props$xAxisLabelsVer : AxesAndRulesDefaults.xAxisLabelsVerticalShift;\n  var horizontalRulesStyle = props.horizontalRulesStyle;\n  var yAxisLabelWidth = (_props$yAxisLabelWidt = props.yAxisLabelWidth) != null ? _props$yAxisLabelWidt : props.hideYAxisText ? AxesAndRulesDefaults.yAxisEmptyLabelWidth : AxesAndRulesDefaults.yAxisLabelWidth;\n  var heightValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var opacValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var widthValue = useMemo(function () {\n    return new Animated.Value(0);\n  }, []);\n  var autoShiftLabels = (_props$autoShiftLabel = props.autoShiftLabels) != null ? _props$autoShiftLabel : false;\n  var barWidth = props.barWidth || BarDefaults.barWidth;\n  var barBorderColor = (_props$barBorderColor = props.barBorderColor) != null ? _props$barBorderColor : BarDefaults.barBorderColor;\n  var extendedContainerHeight = getExtendedContainerHeightWithPadding(containerHeight, 0);\n  var containerHeightIncludingBelowXAxis = extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight;\n  var _useState9 = useState(-1),\n    _useState10 = _slicedToArray(_useState9, 2),\n    pointerIndex = _useState10[0],\n    setPointerIndex = _useState10[1];\n  var _useState11 = useState(0),\n    _useState12 = _slicedToArray(_useState11, 2),\n    pointerX = _useState12[0],\n    setPointerX = _useState12[1];\n  var _useState13 = useState(0),\n    _useState14 = _slicedToArray(_useState13, 2),\n    pointerY = _useState14[0],\n    setPointerY = _useState14[1];\n  var _useState15 = useState({\n      pointerShiftX: 0,\n      pointerShiftY: 0\n    }),\n    _useState16 = _slicedToArray(_useState15, 2),\n    pointerItem = _useState16[0],\n    setPointerItem = _useState16[1];\n  var _useState17 = useState(0),\n    _useState18 = _slicedToArray(_useState17, 2),\n    responderStartTime = _useState18[0],\n    setResponderStartTime = _useState18[1];\n  var _useState19 = useState(false),\n    _useState20 = _slicedToArray(_useState19, 2),\n    responderActive = _useState20[0],\n    setResponderActive = _useState20[1];\n  var pointerConfig = props.pointerConfig || undefined;\n  var getPointerProps = props.getPointerProps || null;\n  var pointerHeight = (_pointerConfig$height = pointerConfig == null ? void 0 : pointerConfig.height) != null ? _pointerConfig$height : defaultPointerConfig.height;\n  var pointerWidth = (_pointerConfig$width = pointerConfig == null ? void 0 : pointerConfig.width) != null ? _pointerConfig$width : defaultPointerConfig.width;\n  var pointerRadius = (_pointerConfig$radius = pointerConfig == null ? void 0 : pointerConfig.radius) != null ? _pointerConfig$radius : defaultPointerConfig.radius;\n  var pointerColor = (_pointerConfig$pointe = pointerConfig == null ? void 0 : pointerConfig.pointerColor) != null ? _pointerConfig$pointe : defaultPointerConfig.pointerColor;\n  var pointerComponent = (_pointerConfig$pointe2 = pointerConfig == null ? void 0 : pointerConfig.pointerComponent) != null ? _pointerConfig$pointe2 : defaultPointerConfig.pointerComponent;\n  var showPointerStrip = (pointerConfig == null ? void 0 : pointerConfig.showPointerStrip) === false ? false : defaultPointerConfig.showPointerStrip;\n  var pointerStripHeight = (_pointerConfig$pointe3 = pointerConfig == null ? void 0 : pointerConfig.pointerStripHeight) != null ? _pointerConfig$pointe3 : defaultPointerConfig.pointerStripHeight;\n  var pointerStripWidth = (_pointerConfig$pointe4 = pointerConfig == null ? void 0 : pointerConfig.pointerStripWidth) != null ? _pointerConfig$pointe4 : defaultPointerConfig.pointerStripWidth;\n  var pointerStripColor = (_pointerConfig$pointe5 = pointerConfig == null ? void 0 : pointerConfig.pointerStripColor) != null ? _pointerConfig$pointe5 : defaultPointerConfig.pointerStripColor;\n  var pointerStripUptoDataPoint = (_pointerConfig$pointe6 = pointerConfig == null ? void 0 : pointerConfig.pointerStripUptoDataPoint) != null ? _pointerConfig$pointe6 : defaultPointerConfig.pointerStripUptoDataPoint;\n  var pointerLabelComponent = (_pointerConfig$pointe7 = pointerConfig == null ? void 0 : pointerConfig.pointerLabelComponent) != null ? _pointerConfig$pointe7 : defaultPointerConfig.pointerLabelComponent;\n  var stripOverPointer = (_pointerConfig$stripO = pointerConfig == null ? void 0 : pointerConfig.stripOverPointer) != null ? _pointerConfig$stripO : defaultPointerConfig.stripOverPointer;\n  var shiftPointerLabelX = (_pointerConfig$shiftP = pointerConfig == null ? void 0 : pointerConfig.shiftPointerLabelX) != null ? _pointerConfig$shiftP : defaultPointerConfig.shiftPointerLabelX;\n  var shiftPointerLabelY = (_pointerConfig$shiftP2 = pointerConfig == null ? void 0 : pointerConfig.shiftPointerLabelY) != null ? _pointerConfig$shiftP2 : defaultPointerConfig.shiftPointerLabelY;\n  var pointerLabelWidth = (_pointerConfig$pointe8 = pointerConfig == null ? void 0 : pointerConfig.pointerLabelWidth) != null ? _pointerConfig$pointe8 : defaultPointerConfig.pointerLabelWidth;\n  var pointerLabelHeight = (_pointerConfig$pointe9 = pointerConfig == null ? void 0 : pointerConfig.pointerLabelHeight) != null ? _pointerConfig$pointe9 : defaultPointerConfig.pointerLabelHeight;\n  var autoAdjustPointerLabelPosition = (_pointerConfig$autoAd = pointerConfig == null ? void 0 : pointerConfig.autoAdjustPointerLabelPosition) != null ? _pointerConfig$autoAd : defaultPointerConfig.autoAdjustPointerLabelPosition;\n  var pointerVanishDelay = (_pointerConfig$pointe10 = pointerConfig == null ? void 0 : pointerConfig.pointerVanishDelay) != null ? _pointerConfig$pointe10 : defaultPointerConfig.pointerVanishDelay;\n  var activatePointersOnLongPress = (_pointerConfig$activa = pointerConfig == null ? void 0 : pointerConfig.activatePointersOnLongPress) != null ? _pointerConfig$activa : defaultPointerConfig.activatePointersOnLongPress;\n  var activatePointersDelay = (_pointerConfig$activa2 = pointerConfig == null ? void 0 : pointerConfig.activatePointersDelay) != null ? _pointerConfig$activa2 : defaultPointerConfig.activatePointersDelay;\n  var initialPointerIndex = (_pointerConfig$initia = pointerConfig == null ? void 0 : pointerConfig.initialPointerIndex) != null ? _pointerConfig$initia : defaultPointerConfig.initialPointerIndex;\n  var initialPointerAppearDelay = (_pointerConfig$initia2 = pointerConfig == null ? void 0 : pointerConfig.initialPointerAppearDelay) != null ? _pointerConfig$initia2 : isAnimated ? animationDuration : defaultPointerConfig.initialPointerAppearDelay;\n  var persistPointer = (_pointerConfig$persis = pointerConfig == null ? void 0 : pointerConfig.persistPointer) != null ? _pointerConfig$persis : defaultPointerConfig.persistPointer;\n  var hidePointer1 = (_pointerConfig$hidePo = pointerConfig == null ? void 0 : pointerConfig.hidePointer1) != null ? _pointerConfig$hidePo : defaultPointerConfig.hidePointer1;\n  var pointerEvents = pointerConfig == null ? void 0 : pointerConfig.pointerEvents;\n  var disableScroll = props.disableScroll || (pointerConfig ? activatePointersOnLongPress ? responderActive ? true : false : true : false);\n  var labelsAppear = useCallback(function () {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false\n    }).start();\n  }, [opacValue]);\n  var decreaseWidth = useCallback(function () {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: lineConfig.animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false\n    }).start();\n  }, [lineConfig.animationDuration, widthValue]);\n  useEffect(function () {\n    if (showLine) {\n      var _ref3, _$barWidth, _ref4, _props$stackData2;\n      var pp = '',\n        pp2 = '';\n      var firstBarWidth = (_ref3 = (_$barWidth = (_ref4 = (_props$stackData2 = props.stackData) != null ? _props$stackData2 : data) == null ? void 0 : _ref4[0].barWidth) != null ? _$barWidth : props.barWidth) != null ? _ref3 : 30;\n      if (!lineConfig.curved) {\n        for (var i = 0; i < lineData.length; i++) {\n          var _ref5, _data$i$barWidth, _data$i;\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          var currentBarWidth = (_ref5 = (_data$i$barWidth = data == null ? void 0 : (_data$i = data[i]) == null ? void 0 : _data$i.barWidth) != null ? _data$i$barWidth : props.barWidth) != null ? _ref5 : BarDefaults.barWidth;\n          var currentValue = props.lineData ? props.lineData[i].value : props.stackData ? props.stackData[i].stacks.reduce(function (total, item) {\n            return total + item.value;\n          }, 0) : data[i].value;\n          pp += 'L' + getXForLineInBar(i, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing) + ' ' + getYForLineInBar(currentValue, lineConfig.shiftY, containerHeight, lineConfig.isSecondary ? secondaryMaxValue : maxValue) + ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n        if (lineData.length > 1 && lineConfig.showArrow) {\n          var ppArray = pp.trim().split(' ');\n          var arrowTipY = parseInt(ppArray[ppArray.length - 1]);\n          var arrowTipX = parseInt(ppArray[ppArray.length - 2].replace('L', ''));\n          var y1 = parseInt(ppArray[ppArray.length - 3]);\n          var x1 = parseInt(ppArray[ppArray.length - 4].replace('L', ''));\n          var _arrowPoints = getArrowPoints(arrowTipX, arrowTipY, x1, y1, lineConfig.arrowConfig.length, lineConfig.arrowConfig.width, lineConfig.arrowConfig.showArrowBase);\n          setArrowPoints(_arrowPoints);\n        }\n      } else {\n        var p1Array = [];\n        for (var _i = 0; _i < lineData.length; _i++) {\n          var _ref6, _data$_i$barWidth, _data$_i;\n          if (_i < lineConfig.startIndex || _i > lineConfig.endIndex) continue;\n          var _currentBarWidth = (_ref6 = (_data$_i$barWidth = data == null ? void 0 : (_data$_i = data[_i]) == null ? void 0 : _data$_i.barWidth) != null ? _data$_i$barWidth : props.barWidth) != null ? _ref6 : BarDefaults.barWidth;\n          var _currentValue = props.lineData ? props.lineData[_i].value : props.stackData ? props.stackData[_i].stacks.reduce(function (total, item) {\n            return total + item.value;\n          }, 0) : data[_i].value;\n          p1Array.push([getXForLineInBar(_i, firstBarWidth, _currentBarWidth, yAxisLabelWidth, lineConfig, spacing), getYForLineInBar(_currentValue, lineConfig.shiftY, containerHeight, lineConfig.isSecondary ? secondaryMaxValue : maxValue)]);\n          var xx = svgPath(p1Array, lineConfig.curveType, lineConfig.curvature);\n          setPoints(xx);\n        }\n      }\n      if (lineData2 != null && lineData2.length) {\n        if (!(lineConfig2 != null && lineConfig2.curved)) {\n          for (var _i2 = 0; _i2 < lineData2.length; _i2++) {\n            var _ref7, _data$_i2$barWidth, _data$_i2;\n            if (_i2 < lineConfig2.startIndex || _i2 > lineConfig2.endIndex) continue;\n            var _currentBarWidth2 = (_ref7 = (_data$_i2$barWidth = data == null ? void 0 : (_data$_i2 = data[_i2]) == null ? void 0 : _data$_i2.barWidth) != null ? _data$_i2$barWidth : props.barWidth) != null ? _ref7 : BarDefaults.barWidth;\n            var _currentValue2 = lineData2[_i2].value;\n            pp2 += 'L' + getXForLineInBar(_i2, firstBarWidth, _currentBarWidth2, yAxisLabelWidth, lineConfig2, spacing) + ' ' + getYForLineInBar(_currentValue2, lineConfig2.shiftY, containerHeight, lineConfig2.isSecondary ? secondaryMaxValue : maxValue) + ' ';\n          }\n          setPoints2(pp2.replace('L', 'M'));\n        } else {\n          var p2Array = [];\n          for (var _i3 = 0; _i3 < lineData2.length; _i3++) {\n            var _ref8, _data$_i3$barWidth, _data$_i3;\n            if (_i3 < lineConfig2.startIndex || _i3 > lineConfig2.endIndex) continue;\n            var _currentBarWidth3 = (_ref8 = (_data$_i3$barWidth = data == null ? void 0 : (_data$_i3 = data[_i3]) == null ? void 0 : _data$_i3.barWidth) != null ? _data$_i3$barWidth : props.barWidth) != null ? _ref8 : BarDefaults.barWidth;\n            var _currentValue3 = lineData2[_i3].value;\n            p2Array.push([getXForLineInBar(_i3, firstBarWidth, _currentBarWidth3, yAxisLabelWidth, lineConfig2, spacing), getYForLineInBar(_currentValue3, lineConfig2.shiftY, containerHeight, lineConfig2.isSecondary ? secondaryMaxValue : maxValue)]);\n            var _xx = svgPath(p2Array, lineConfig2.curveType, lineConfig2.curvature);\n            setPoints2(_xx);\n          }\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(function () {\n          return decreaseWidth();\n        }, lineConfig.delay || 0);\n      }\n    }\n    setTimeout(function () {\n      return labelsAppear();\n    }, animationDuration);\n  }, [animationDuration, containerHeight, data, lineData, decreaseWidth, initialSpacing, labelsAppear, lineConfig.initialSpacing, lineConfig.curved, lineConfig.dataPointsWidth, lineConfig.shiftY, lineConfig.isAnimated, lineConfig.delay, lineConfig.startIndex, lineConfig.endIndex, maxValue, props.barWidth, showLine, spacing, yAxisLabelWidth, lineConfig.showArrow, lineConfig.arrowConfig.length, lineConfig.arrowConfig.width, lineConfig.arrowConfig.showArrowBase]);\n  useEffect(function () {\n    if (initialPointerIndex !== -1) {\n      var _props$stackData3, _item$stacks;\n      var item = ((_props$stackData3 = props.stackData) != null ? _props$stackData3 : data)[initialPointerIndex];\n      var stackSum = (_item$stacks = item.stacks) == null ? void 0 : _item$stacks.reduce(function (acc, stack) {\n        var _stack$value2;\n        return acc + ((_stack$value2 = stack.value) != null ? _stack$value2 : 0);\n      }, 0);\n      var x = initialSpacing + (spacing + barWidth) * initialPointerIndex - (pointerRadius || pointerWidth / 2) + barWidth / 2;\n      var y = containerHeight - (stackSum != null ? stackSum : item.value) * containerHeight / maxValue - (pointerRadius || pointerHeight / 2) + 10;\n      if (initialPointerAppearDelay) {\n        setTimeout(function () {\n          setPointerConfig(initialPointerIndex, item, x, y);\n        }, initialPointerAppearDelay);\n      } else {\n        setPointerConfig(initialPointerIndex, item, x, y);\n      }\n    }\n  }, []);\n  var setPointerConfig = function setPointerConfig(initialPointerIndex, item, x, y) {\n    setPointerIndex(initialPointerIndex);\n    setPointerItem(item);\n    setPointerX(x);\n    setPointerY(y);\n  };\n  var animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%']\n  });\n  var appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1]\n  });\n  var animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth]\n  });\n  var renderPointer = function renderPointer(lineNumber) {\n    if (lineNumber === 1 && hidePointer1) return;\n    var pointerItemLocal = pointerItem;\n    var pointerYLocal = pointerY;\n    var pointerColorLocal = (pointerConfig == null ? void 0 : pointerConfig.pointer1Color) || pointerColor;\n    return Pointer({\n      pointerX: pointerX,\n      pointerYLocal: pointerYLocal,\n      pointerComponent: pointerComponent,\n      pointerHeight: pointerHeight,\n      pointerRadius: pointerRadius,\n      pointerWidth: pointerWidth,\n      pointerItemLocal: pointerItemLocal,\n      pointerColorLocal: pointerColorLocal\n    });\n  };\n  var renderStripAndLabel = function renderStripAndLabel() {\n    var pointerItemLocal,\n      pointerYLocal = pointerY;\n    pointerItemLocal = [pointerItem];\n    return StripAndLabel({\n      autoAdjustPointerLabelPosition: autoAdjustPointerLabelPosition,\n      pointerX: pointerX,\n      pointerLabelWidth: pointerLabelWidth,\n      activatePointersOnLongPress: activatePointersOnLongPress,\n      yAxisLabelWidth: yAxisLabelWidth,\n      pointerRadius: pointerRadius,\n      pointerWidth: pointerWidth,\n      shiftPointerLabelX: shiftPointerLabelX,\n      pointerLabelHeight: pointerLabelHeight,\n      pointerYLocal: pointerYLocal,\n      pointerStripUptoDataPoint: pointerStripUptoDataPoint,\n      pointerStripHeight: pointerStripHeight,\n      shiftPointerLabelY: shiftPointerLabelY,\n      pointerItemLocal: pointerItemLocal,\n      showPointerStrip: showPointerStrip,\n      pointerStripWidth: pointerStripWidth,\n      containerHeight: containerHeight,\n      xAxisThickness: xAxisThickness,\n      pointerStripColor: pointerStripColor,\n      pointerConfig: pointerConfig,\n      pointerLabelComponent: pointerLabelComponent,\n      scrollX: 0,\n      pointerEvents: pointerEvents\n    });\n  };\n  var renderChartContent = function renderChartContent() {\n    if (pointerConfig) {\n      return _jsxs(View, {\n        onStartShouldSetResponder: function onStartShouldSetResponder(evt) {\n          return pointerConfig ? true : false;\n        },\n        onMoveShouldSetResponder: function onMoveShouldSetResponder(evt) {\n          return pointerConfig ? true : false;\n        },\n        onResponderGrant: function onResponderGrant(evt) {\n          var _props$stackData4, _item$stacks2;\n          if (!pointerConfig) return;\n          setResponderStartTime(evt.timeStamp);\n          if (activatePointersOnLongPress) {\n            return;\n          }\n          var x = evt.nativeEvent.locationX;\n          if (!activatePointersOnLongPress && x > (props.width || screenWidth)) return;\n          var factor = (x - initialSpacing - barWidth / 2) / (spacing + barWidth);\n          factor = Math.round(factor);\n          factor = Math.min(factor, data.length - 1);\n          factor = Math.max(factor, 0);\n          var z = initialSpacing + (spacing + barWidth) * factor - (pointerRadius || pointerWidth / 2) + barWidth / 2;\n          setPointerX(z);\n          setPointerIndex(factor);\n          var item, y;\n          item = ((_props$stackData4 = props.stackData) != null ? _props$stackData4 : data)[factor];\n          var stackSum = (_item$stacks2 = item.stacks) == null ? void 0 : _item$stacks2.reduce(function (acc, stack) {\n            var _stack$value3;\n            return acc + ((_stack$value3 = stack.value) != null ? _stack$value3 : 0);\n          }, 0);\n          y = containerHeight - (stackSum != null ? stackSum : item.value) * containerHeight / maxValue - (pointerRadius || pointerHeight / 2) + 10;\n          setPointerY(y);\n          setPointerItem(item);\n        },\n        onResponderMove: function onResponderMove(evt) {\n          var _props$stackData5, _props$stackData6, _item$stacks3;\n          if (!pointerConfig) return;\n          if (activatePointersOnLongPress && evt.timeStamp - responderStartTime < activatePointersDelay) {\n            return;\n          } else {\n            setResponderActive(true);\n          }\n          var x = evt.nativeEvent.locationX;\n          if (!activatePointersOnLongPress && x > (props.width || screenWidth)) return;\n          var factor = (x - initialSpacing - barWidth / 2) / (spacing + barWidth);\n          factor = Math.round(factor);\n          factor = Math.min(factor, ((_props$stackData5 = props.stackData) != null ? _props$stackData5 : data).length - 1);\n          factor = Math.max(factor, 0);\n          var z = initialSpacing + (spacing + barWidth) * factor - (pointerRadius || pointerWidth / 2) + barWidth / 2;\n          var item, y;\n          setPointerX(z);\n          setPointerIndex(factor);\n          item = ((_props$stackData6 = props.stackData) != null ? _props$stackData6 : data)[factor];\n          var stackSum = (_item$stacks3 = item.stacks) == null ? void 0 : _item$stacks3.reduce(function (acc, stack) {\n            var _stack$value4;\n            return acc + ((_stack$value4 = stack.value) != null ? _stack$value4 : 0);\n          }, 0);\n          y = containerHeight - (stackSum != null ? stackSum : item.value) * containerHeight / maxValue - (pointerRadius || pointerHeight / 2) + 10;\n          setPointerY(y);\n          setPointerItem(item);\n        },\n        onResponderEnd: function onResponderEnd(evt) {\n          setResponderStartTime(0);\n          setPointerIndex(-1);\n          setResponderActive(false);\n          if (!persistPointer) setTimeout(function () {\n            return setPointerX(0);\n          }, pointerVanishDelay);\n        },\n        onResponderTerminationRequest: function onResponderTerminationRequest(evt) {\n          return false;\n        },\n        style: {\n          position: 'absolute',\n          height: containerHeightIncludingBelowXAxis,\n          bottom: 60,\n          paddingLeft: initialSpacing,\n          width: totalWidth,\n          flexDirection: 'row'\n        },\n        children: [renderChart(), pointerX > 0 ? _jsxs(View, {\n          pointerEvents: pointerEvents != null ? pointerEvents : 'none',\n          style: {\n            position: 'absolute',\n            height: extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight,\n            bottom: xAxisLabelsVerticalShift + labelsExtraHeight,\n            width: totalWidth,\n            zIndex: 20\n          },\n          children: [!stripOverPointer && renderStripAndLabel(), renderPointer(1), stripOverPointer && renderStripAndLabel()]\n        }) : null]\n      });\n    } else {\n      return renderChart();\n    }\n  };\n  var renderChart = function renderChart() {\n    var getPropsCommonForBarAndStack = function getPropsCommonForBarAndStack(item, index) {\n      var _item$spacing2;\n      return {\n        key: index,\n        item: item,\n        index: index,\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        spacing: (_item$spacing2 = item.spacing) != null ? _item$spacing2 : spacing,\n        propSpacing: spacing,\n        xAxisThickness: xAxisThickness,\n        barWidth: props.barWidth,\n        opacity: opacity,\n        disablePress: item.disablePress || props.disablePress,\n        rotateLabel: rotateLabel,\n        showXAxisIndices: showXAxisIndices,\n        xAxisIndicesHeight: xAxisIndicesHeight,\n        xAxisIndicesWidth: xAxisIndicesWidth,\n        xAxisIndicesColor: xAxisIndicesColor,\n        horizontal: horizontal,\n        rtl: rtl,\n        intactTopLabel: intactTopLabel,\n        showValuesAsTopLabel: props.showValuesAsTopLabel,\n        topLabelContainerStyle: props.topLabelContainerStyle,\n        topLabelTextStyle: props.topLabelTextStyle,\n        barBorderWidth: props.barBorderWidth,\n        barBorderColor: barBorderColor,\n        barBorderRadius: props.barBorderRadius,\n        barBorderTopLeftRadius: props.barBorderTopLeftRadius,\n        barBorderTopRightRadius: props.barBorderTopRightRadius,\n        barBorderBottomLeftRadius: props.barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: props.barBorderBottomRightRadius,\n        color: props.color,\n        showGradient: props.showGradient,\n        gradientColor: props.gradientColor,\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        onPress: props.onPress,\n        xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n        xAxisLabelsHeight: props.xAxisLabelsHeight,\n        xAxisLabelsVerticalShift: xAxisLabelsVerticalShift,\n        renderTooltip: props.renderTooltip,\n        leftShiftForTooltip: props.leftShiftForTooltip || 0,\n        initialSpacing: initialSpacing,\n        selectedIndex: selectedIndex,\n        setSelectedIndex: setSelectedIndex,\n        activeOpacity: props.activeOpacity || 0.2,\n        leftShiftForLastIndexTooltip: props.leftShiftForLastIndexTooltip || 0,\n        label: item.label || (props.xAxisLabelTexts && props.xAxisLabelTexts[index] ? props.xAxisLabelTexts[index] : ''),\n        labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n        pointerConfig: pointerConfig\n      };\n    };\n    if (props.stackData) {\n      return props.stackData.map(function (item, index) {\n        return _jsx(RenderStackBars, _objectSpread({\n          stackData: props.stackData || [],\n          isAnimated: isAnimated,\n          animationDuration: animationDuration,\n          stackBorderRadius: props.stackBorderRadius,\n          stackBorderTopLeftRadius: props.stackBorderTopLeftRadius,\n          stackBorderTopRightRadius: props.stackBorderTopRightRadius,\n          stackBorderBottomLeftRadius: props.stackBorderBottomLeftRadius,\n          stackBorderBottomRightRadius: props.stackBorderBottomRightRadius\n        }, getPropsCommonForBarAndStack(item, index)));\n      });\n    } else {\n      return data.map(function (item, index) {\n        return _jsx(RenderBars, _objectSpread({\n          data: data,\n          side: side,\n          minHeight: props.minHeight || 0,\n          sideWidth: props.sideWidth,\n          labelWidth: labelWidth,\n          isThreeD: isThreeD,\n          isAnimated: isAnimated,\n          animationDuration: animationDuration,\n          animatedHeight: animatedHeight,\n          appearingOpacity: appearingOpacity,\n          roundedTop: props.roundedTop,\n          roundedBottom: props.roundedBottom,\n          frontColor: props.frontColor,\n          sideColor: props.sideColor,\n          topColor: props.topColor,\n          cappedBars: props.cappedBars,\n          capThickness: props.capThickness,\n          capColor: props.capColor,\n          capRadius: props.capRadius,\n          autoShiftLabels: autoShiftLabels,\n          barMarginBottom: props.barMarginBottom,\n          barStyle: props.barStyle\n        }, getPropsCommonForBarAndStack(item, index)));\n      });\n    }\n  };\n  var remainingScrollViewProps = {\n    onTouchStart: function onTouchStart(evt) {\n      if (props.renderTooltip) {\n        setSelectedIndex(-1);\n      }\n    }\n  };\n  var barAndLineChartsWrapperProps = {\n    chartType: chartTypes.BAR,\n    containerHeight: containerHeight,\n    noOfSectionsBelowXAxis: noOfSectionsBelowXAxis,\n    stepHeight: stepHeight,\n    labelsExtraHeight: labelsExtraHeight,\n    yAxisLabelWidth: yAxisLabelWidth,\n    horizontal: horizontal,\n    rtl: rtl,\n    shiftX: (_props$shiftX = props.shiftX) != null ? _props$shiftX : 0,\n    shiftY: (_props$shiftY = props.shiftY) != null ? _props$shiftY : 0,\n    scrollRef: scrollRef,\n    yAxisAtTop: yAxisAtTop,\n    initialSpacing: initialSpacing,\n    data: data,\n    stackData: props.stackData,\n    secondaryData: secondaryData,\n    barWidth: props.barWidth || BarDefaults.barWidth,\n    xAxisThickness: xAxisThickness,\n    totalWidth: totalWidth,\n    disableScroll: disableScroll,\n    showScrollIndicator: showScrollIndicator,\n    scrollToEnd: scrollToEnd,\n    scrollToIndex: props.scrollToIndex,\n    scrollAnimation: scrollAnimation,\n    scrollEventThrottle: scrollEventThrottle,\n    indicatorColor: props.indicatorColor,\n    setSelectedIndex: setSelectedIndex,\n    spacing: spacing,\n    showLine: showLine,\n    lineConfig: lineConfig,\n    lineConfig2: lineConfig2,\n    maxValue: maxValue,\n    lineData: lineData,\n    lineData2: lineData2,\n    animatedWidth: animatedWidth,\n    lineBehindBars: lineBehindBars,\n    points: points,\n    points2: points2,\n    arrowPoints: arrowPoints,\n    renderChartContent: renderChartContent,\n    remainingScrollViewProps: remainingScrollViewProps,\n    width: widthFromProps,\n    horizSections: horizSections,\n    endSpacing: endSpacing,\n    horizontalRulesStyle: horizontalRulesStyle,\n    noOfSections: noOfSections,\n    showFractionalValues: showFractionalValues,\n    axesAndRulesProps: getAxesAndRulesProps(props, stepValue, secondaryMaxValue),\n    yAxisLabelTexts: props.yAxisLabelTexts,\n    yAxisOffset: props.yAxisOffset,\n    rotateYAxisTexts: props.rotateYAxisTexts,\n    hideAxesAndRules: props.hideAxesAndRules,\n    showXAxisIndices: showXAxisIndices,\n    xAxisIndicesHeight: xAxisIndicesHeight,\n    xAxisIndicesWidth: xAxisIndicesWidth,\n    xAxisIndicesColor: xAxisIndicesColor,\n    pointerConfig: pointerConfig,\n    getPointerProps: getPointerProps,\n    pointerIndex: pointerIndex,\n    pointerX: pointerX,\n    pointerY: pointerY\n  };\n  return _jsx(BarAndLineChartsWrapper, _objectSpread({}, barAndLineChartsWrapperProps));\n};","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","useState","useRef","Animated","Easing","View","RenderBars","RenderStackBars","getArrowPoints","getAxesAndRulesProps","getExtendedContainerHeightWithPadding","getLineConfigForBarChart","getSecondaryDataWithOffsetIncluded","getXForLineInBar","getYForLineInBar","maxAndMinUtil","svgPath","AxesAndRulesDefaults","BarDefaults","chartTypes","defaultLineConfig","defaultPointerConfig","screenWidth","BarAndLineChartsWrapper","StripAndLabel","Pointer","jsxs","_jsxs","jsx","_jsx","BarChart","props","_props$scrollRef","_props$spacing","_props$initialSpacing","_props$endSpacing","_props$horizontal","_props$rtl","_props$yAxisAtTop","_props$intactTopLabel","_props$isAnimated","_props$animationDurat","_props$noOfSections","_props$stepHeight","_props$stepHeight2","_props$labelWidth","_props$scrollToEnd","_props$scrollAnimatio","_props$scrollEventThr","_props$labelsExtraHei","_props$maxValue","_props$mostNegativeVa","_props$stepValue","_props$noOfSectionsBe","_props$showScrollIndi","_props$side","_props$rotateLabel","_props$opacity","_props$isThreeD","_props$showXAxisIndic","_props$xAxisIndicesHe","_props$xAxisIndicesWi","_props$xAxisIndicesCo","_props$xAxisThickness","_props$xAxisTextNumbe","_props$xAxisLabelsVer","_props$yAxisLabelWidt","_props$autoShiftLabel","_props$barBorderColor","_pointerConfig$height","_pointerConfig$width","_pointerConfig$radius","_pointerConfig$pointe","_pointerConfig$pointe2","_pointerConfig$pointe3","_pointerConfig$pointe4","_pointerConfig$pointe5","_pointerConfig$pointe6","_pointerConfig$pointe7","_pointerConfig$stripO","_pointerConfig$shiftP","_pointerConfig$shiftP2","_pointerConfig$pointe8","_pointerConfig$pointe9","_pointerConfig$autoAd","_pointerConfig$pointe10","_pointerConfig$activa","_pointerConfig$activa2","_pointerConfig$initia","_pointerConfig$initia2","_pointerConfig$persis","_pointerConfig$hidePo","_props$shiftX","_props$shiftY","scrollRef","_useState","_useState2","_slicedToArray","points","setPoints","_useState3","_useState4","points2","setPoints2","_useState5","_useState6","arrowPoints","setArrowPoints","_useState7","_useState8","selectedIndex","setSelectedIndex","showLine","spacing","initialSpacing","endSpacing","showFractionalValues","horizontal","rtl","yAxisAtTop","intactTopLabel","heightFromProps","width","height","widthFromProps","isAnimated","animationDuration","data","yAxisOffset","map","item","_props$yAxisOffset","value","secondaryData","secondaryYAxis","lineData","_props$stackData","stackData","_props$yAxisOffset2","lineData2","lineBehindBars","endIndex","length","lineConfig","lineConfig2","noOfSections","containerHeight","stepHeight","horizSections","labelWidth","scrollToEnd","scrollAnimation","scrollEventThrottle","labelsExtraHeight","totalWidth","maxItem","minItem","forEach","stackItem","_ref","_stackItem$stacks$0$b","stackSum","stacks","reduce","acc","stack","_stack$value","barWidth","_ref2","_item$barWidth","_item$spacing","secondaryMaxItem","secondaryMinItem","isSecondary","maxAndMin","roundToDigits","secondaryMaxAndMin","maxValue","secondaryMaxValue","mostNegativeValue","stepValue","noOfSectionsBelowXAxis","showScrollIndicator","side","rotateLabel","opacity","isThreeD","showXAxisIndices","xAxisIndicesHeight","xAxisIndicesWidth","xAxisIndicesColor","xAxisThickness","xAxisTextNumberOfLines","xAxisLabelsVerticalShift","horizontalRulesStyle","yAxisLabelWidth","hideYAxisText","yAxisEmptyLabelWidth","heightValue","Value","opacValue","widthValue","autoShiftLabels","barBorderColor","extendedContainerHeight","containerHeightIncludingBelowXAxis","_useState9","_useState10","pointerIndex","setPointerIndex","_useState11","_useState12","pointerX","setPointerX","_useState13","_useState14","pointerY","setPointerY","_useState15","pointerShiftX","pointerShiftY","_useState16","pointerItem","setPointerItem","_useState17","_useState18","responderStartTime","setResponderStartTime","_useState19","_useState20","responderActive","setResponderActive","pointerConfig","undefined","getPointerProps","pointerHeight","pointerWidth","pointerRadius","radius","pointerColor","pointerComponent","showPointerStrip","pointerStripHeight","pointerStripWidth","pointerStripColor","pointerStripUptoDataPoint","pointerLabelComponent","stripOverPointer","shiftPointerLabelX","shiftPointerLabelY","pointerLabelWidth","pointerLabelHeight","autoAdjustPointerLabelPosition","pointerVanishDelay","activatePointersOnLongPress","activatePointersDelay","initialPointerIndex","initialPointerAppearDelay","persistPointer","hidePointer1","pointerEvents","disableScroll","labelsAppear","setValue","timing","toValue","duration","easing","ease","useNativeDriver","start","decreaseWidth","linear","_ref3","_$barWidth","_ref4","_props$stackData2","pp","pp2","firstBarWidth","curved","i","_ref5","_data$i$barWidth","_data$i","startIndex","currentBarWidth","currentValue","total","shiftY","replace","showArrow","ppArray","trim","split","arrowTipY","parseInt","arrowTipX","y1","x1","arrowConfig","showArrowBase","p1Array","_ref6","_data$_i$barWidth","_data$_i","push","xx","curveType","curvature","_ref7","_data$_i2$barWidth","_data$_i2","p2Array","_ref8","_data$_i3$barWidth","_data$_i3","setTimeout","delay","dataPointsWidth","_props$stackData3","_item$stacks","_stack$value2","x","y","setPointerConfig","animatedHeight","interpolate","inputRange","outputRange","appearingOpacity","animatedWidth","renderPointer","lineNumber","pointerItemLocal","pointerYLocal","pointerColorLocal","pointer1Color","renderStripAndLabel","scrollX","renderChartContent","onStartShouldSetResponder","evt","onMoveShouldSetResponder","onResponderGrant","_props$stackData4","_item$stacks2","timeStamp","nativeEvent","locationX","factor","Math","round","min","max","z","_stack$value3","onResponderMove","_props$stackData5","_props$stackData6","_item$stacks3","_stack$value4","onResponderEnd","onResponderTerminationRequest","style","position","bottom","paddingLeft","flexDirection","children","renderChart","zIndex","getPropsCommonForBarAndStack","index","_item$spacing2","key","propSpacing","disablePress","showValuesAsTopLabel","topLabelContainerStyle","topLabelTextStyle","barBorderWidth","barBorderRadius","barBorderTopLeftRadius","barBorderTopRightRadius","barBorderBottomLeftRadius","barBorderBottomRightRadius","color","showGradient","gradientColor","barBackgroundPattern","patternId","onPress","xAxisLabelsHeight","renderTooltip","leftShiftForTooltip","activeOpacity","leftShiftForLastIndexTooltip","label","xAxisLabelTexts","labelTextStyle","xAxisLabelTextStyle","_objectSpread","stackBorderRadius","stackBorderTopLeftRadius","stackBorderTopRightRadius","stackBorderBottomLeftRadius","stackBorderBottomRightRadius","minHeight","sideWidth","roundedTop","roundedBottom","frontColor","sideColor","topColor","cappedBars","capThickness","capColor","capRadius","barMarginBottom","barStyle","remainingScrollViewProps","onTouchStart","barAndLineChartsWrapperProps","chartType","BAR","shiftX","scrollToIndex","indicatorColor","axesAndRulesProps","yAxisLabelTexts","rotateYAxisTexts","hideAxesAndRules"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/node_modules/react-native-gifted-charts/src/BarChart/index.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useMemo, useState, useRef} from 'react';\nimport {Animated, Easing, View} from 'react-native';\nimport RenderBars from './RenderBars';\nimport RenderStackBars from './RenderStackBars';\nimport {\n  getArrowPoints,\n  getAxesAndRulesProps,\n  getExtendedContainerHeightWithPadding,\n  getLineConfigForBarChart,\n  getSecondaryDataWithOffsetIncluded,\n  getXForLineInBar,\n  getYForLineInBar,\n  maxAndMinUtil,\n  svgPath,\n} from '../utils';\nimport {\n  AxesAndRulesDefaults,\n  BarDefaults,\n  chartTypes,\n  defaultLineConfig,\n  defaultPointerConfig,\n  screenWidth,\n} from '../utils/constants';\nimport BarAndLineChartsWrapper from '../Components/BarAndLineChartsWrapper';\nimport {BarChartPropsType, itemType} from './types';\nimport {BarAndLineChartsWrapperTypes} from '../utils/types';\nimport {StripAndLabel} from '../Components/common/StripAndLabel';\nimport {Pointer} from '../Components/common/Pointer';\n\nexport const BarChart = (props: BarChartPropsType) => {\n  const scrollRef = props.scrollRef ?? useRef(null);\n  const [points, setPoints] = useState('');\n  const [points2, setPoints2] = useState('');\n  const [arrowPoints, setArrowPoints] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(-1);\n  const showLine = props.showLine || BarDefaults.showLine;\n  const spacing = props.spacing ?? BarDefaults.spacing;\n  const initialSpacing = props.initialSpacing ?? spacing;\n  const endSpacing = props.endSpacing ?? spacing;\n  const showFractionalValues =\n    props.showFractionalValues || AxesAndRulesDefaults.showFractionalValues;\n\n  const horizontal = props.horizontal ?? BarDefaults.horizontal;\n  const rtl = props.rtl ?? BarDefaults.rtl;\n  const yAxisAtTop = props.yAxisAtTop ?? BarDefaults.yAxisAtTop;\n  const intactTopLabel = props.intactTopLabel ?? BarDefaults.intactTopLabel;\n\n  const heightFromProps = horizontal ? props.width : props.height;\n  const widthFromProps = horizontal ? props.height : props.width;\n\n  const isAnimated = props.isAnimated ?? BarDefaults.isAnimated;\n  const animationDuration =\n    props.animationDuration ?? BarDefaults.animationDuration;\n\n  const data = useMemo(() => {\n    if (!props.data) {\n      return [];\n    }\n    if (props.yAxisOffset) {\n      return props.data.map(item => {\n        item.value = item.value - (props.yAxisOffset ?? 0);\n        return item;\n      });\n    }\n    return props.data;\n  }, [props.yAxisOffset, props.data]);\n\n  const secondaryData = getSecondaryDataWithOffsetIncluded(\n    props.secondaryData,\n    props.secondaryYAxis,\n  );\n\n  const lineData = useMemo(() => {\n    if (!props.lineData) {\n      return props.stackData ?? data;\n    }\n    if (props.yAxisOffset) {\n      return props.lineData.map(item => {\n        item.value = item.value - (props.yAxisOffset ?? 0);\n        return item;\n      });\n    }\n    return props.lineData;\n  }, [props.yAxisOffset, props.lineData, data, props.stackData]);\n\n  const lineData2 = props.lineData2;\n\n  const lineBehindBars = props.lineBehindBars || BarDefaults.lineBehindBars;\n\n  defaultLineConfig.initialSpacing = initialSpacing;\n  defaultLineConfig.endIndex = lineData.length - 1;\n  defaultLineConfig.animationDuration = animationDuration;\n\n  const lineConfig = props.lineConfig\n    ? getLineConfigForBarChart(props.lineConfig)\n    : defaultLineConfig;\n  const lineConfig2 = props.lineConfig2\n    ? getLineConfigForBarChart(props.lineConfig2)\n    : defaultLineConfig;\n  const noOfSections = props.noOfSections ?? AxesAndRulesDefaults.noOfSections;\n  const containerHeight =\n    heightFromProps ??\n    ((props.stepHeight ?? 0) * noOfSections ||\n      AxesAndRulesDefaults.containerHeight);\n  const horizSections = [{value: '0'}];\n  const stepHeight = props.stepHeight ?? containerHeight / noOfSections;\n  const labelWidth = props.labelWidth ?? AxesAndRulesDefaults.labelWidth;\n  const scrollToEnd = props.scrollToEnd ?? BarDefaults.scrollToEnd;\n  const scrollAnimation = props.scrollAnimation ?? BarDefaults.scrollAnimation;\n  const scrollEventThrottle =\n    props.scrollEventThrottle ?? BarDefaults.scrollEventThrottle;\n  const labelsExtraHeight =\n    props.labelsExtraHeight ?? AxesAndRulesDefaults.labelsExtraHeight;\n\n  let totalWidth = initialSpacing;\n  let maxItem = 0,\n    minItem = 0;\n  if (props.stackData) {\n    props.stackData.forEach(stackItem => {\n      let stackSum = stackItem.stacks.reduce(\n        (acc, stack) => acc + (stack.value ?? 0),\n        0,\n      );\n      if (stackSum > maxItem) {\n        maxItem = stackSum;\n      }\n      if (stackSum < minItem) {\n        minItem = stackSum;\n      }\n      totalWidth +=\n        (stackItem.stacks[0].barWidth ??\n          props.barWidth ??\n          BarDefaults.barWidth) + spacing;\n    });\n  } else {\n    data.forEach((item: itemType) => {\n      if (item.value > maxItem) {\n        maxItem = item.value;\n      }\n      if (item.value < minItem) {\n        minItem = item.value;\n      }\n      totalWidth +=\n        (item.barWidth ?? props.barWidth ?? BarDefaults.barWidth) +\n        (item.spacing ?? spacing);\n    });\n  }\n\n  let secondaryMaxItem = 0,\n    secondaryMinItem = 0;\n\n  if (lineConfig.isSecondary) {\n    lineData.forEach((item: itemType) => {\n      if (item.value > secondaryMaxItem) {\n        secondaryMaxItem = item.value;\n      }\n      if (item.value < secondaryMinItem) {\n        secondaryMinItem = item.value;\n      }\n    });\n  }\n\n  const maxAndMin = maxAndMinUtil(\n    maxItem,\n    minItem,\n    props.roundToDigits,\n    props.showFractionalValues,\n  );\n\n  const secondaryMaxAndMin = maxAndMinUtil(\n    secondaryMaxItem,\n    secondaryMinItem,\n    props.roundToDigits,\n    props.showFractionalValues,\n  );\n\n  const maxValue = props.maxValue ?? maxAndMin.maxItem;\n  const secondaryMaxValue = lineConfig.isSecondary\n    ? secondaryMaxAndMin.maxItem\n    : maxValue;\n  const mostNegativeValue = props.mostNegativeValue ?? maxAndMin.minItem;\n\n  const stepValue = props.stepValue ?? maxValue / noOfSections;\n  const noOfSectionsBelowXAxis =\n    props.noOfSectionsBelowXAxis ?? -mostNegativeValue / stepValue;\n  const showScrollIndicator =\n    props.showScrollIndicator ?? BarDefaults.showScrollIndicator;\n  const side = props.side ?? BarDefaults.side;\n  const rotateLabel = props.rotateLabel ?? AxesAndRulesDefaults.rotateLabel;\n  const opacity = props.opacity ?? BarDefaults.opacity;\n  const isThreeD = props.isThreeD ?? BarDefaults.isThreeD;\n\n  const showXAxisIndices =\n    props.showXAxisIndices ?? AxesAndRulesDefaults.showXAxisIndices;\n  const xAxisIndicesHeight =\n    props.xAxisIndicesHeight ?? AxesAndRulesDefaults.xAxisIndicesHeight;\n  const xAxisIndicesWidth =\n    props.xAxisIndicesWidth ?? AxesAndRulesDefaults.xAxisIndicesWidth;\n  const xAxisIndicesColor =\n    props.xAxisIndicesColor ?? AxesAndRulesDefaults.xAxisIndicesColor;\n\n  const xAxisThickness =\n    props.xAxisThickness ?? AxesAndRulesDefaults.xAxisThickness;\n\n  const xAxisTextNumberOfLines =\n    props.xAxisTextNumberOfLines ?? AxesAndRulesDefaults.xAxisTextNumberOfLines;\n  const xAxisLabelsVerticalShift =\n    props.xAxisLabelsVerticalShift ??\n    AxesAndRulesDefaults.xAxisLabelsVerticalShift;\n  const horizontalRulesStyle = props.horizontalRulesStyle;\n  const yAxisLabelWidth =\n    props.yAxisLabelWidth ??\n    (props.hideYAxisText\n      ? AxesAndRulesDefaults.yAxisEmptyLabelWidth\n      : AxesAndRulesDefaults.yAxisLabelWidth);\n\n  const heightValue = useMemo(() => new Animated.Value(0), []);\n  const opacValue = useMemo(() => new Animated.Value(0), []);\n  const widthValue = useMemo(() => new Animated.Value(0), []);\n  const autoShiftLabels = props.autoShiftLabels ?? false;\n\n  const barWidth = props.barWidth || BarDefaults.barWidth;\n  const barBorderColor = props.barBorderColor ?? BarDefaults.barBorderColor;\n\n  const extendedContainerHeight = getExtendedContainerHeightWithPadding(\n    containerHeight,\n    0,\n  );\n\n  const containerHeightIncludingBelowXAxis =\n    extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight;\n\n  const [pointerIndex, setPointerIndex] = useState(-1);\n  const [pointerX, setPointerX] = useState(0);\n  const [pointerY, setPointerY] = useState(0);\n  const [pointerItem, setPointerItem] = useState({\n    pointerShiftX: 0,\n    pointerShiftY: 0,\n  });\n  const [responderStartTime, setResponderStartTime] = useState(0);\n  const [responderActive, setResponderActive] = useState(false);\n\n  const pointerConfig = props.pointerConfig || undefined;\n  const getPointerProps = props.getPointerProps || null;\n  const pointerHeight = pointerConfig?.height ?? defaultPointerConfig.height;\n  const pointerWidth = pointerConfig?.width ?? defaultPointerConfig.width;\n  const pointerRadius = pointerConfig?.radius ?? defaultPointerConfig.radius;\n  const pointerColor =\n    pointerConfig?.pointerColor ?? defaultPointerConfig.pointerColor;\n  const pointerComponent =\n    pointerConfig?.pointerComponent ?? defaultPointerConfig.pointerComponent;\n\n  const showPointerStrip =\n    pointerConfig?.showPointerStrip === false\n      ? false\n      : defaultPointerConfig.showPointerStrip;\n  const pointerStripHeight =\n    pointerConfig?.pointerStripHeight ??\n    defaultPointerConfig.pointerStripHeight;\n  const pointerStripWidth =\n    pointerConfig?.pointerStripWidth ?? defaultPointerConfig.pointerStripWidth;\n  const pointerStripColor =\n    pointerConfig?.pointerStripColor ?? defaultPointerConfig.pointerStripColor;\n  const pointerStripUptoDataPoint =\n    pointerConfig?.pointerStripUptoDataPoint ??\n    defaultPointerConfig.pointerStripUptoDataPoint;\n  const pointerLabelComponent =\n    pointerConfig?.pointerLabelComponent ??\n    defaultPointerConfig.pointerLabelComponent;\n  const stripOverPointer =\n    pointerConfig?.stripOverPointer ?? defaultPointerConfig.stripOverPointer;\n  const shiftPointerLabelX =\n    pointerConfig?.shiftPointerLabelX ??\n    defaultPointerConfig.shiftPointerLabelX;\n  const shiftPointerLabelY =\n    pointerConfig?.shiftPointerLabelY ??\n    defaultPointerConfig.shiftPointerLabelY;\n  const pointerLabelWidth =\n    pointerConfig?.pointerLabelWidth ?? defaultPointerConfig.pointerLabelWidth;\n  const pointerLabelHeight =\n    pointerConfig?.pointerLabelHeight ??\n    defaultPointerConfig.pointerLabelHeight;\n  const autoAdjustPointerLabelPosition =\n    pointerConfig?.autoAdjustPointerLabelPosition ??\n    defaultPointerConfig.autoAdjustPointerLabelPosition;\n  const pointerVanishDelay =\n    pointerConfig?.pointerVanishDelay ??\n    defaultPointerConfig.pointerVanishDelay;\n  const activatePointersOnLongPress =\n    pointerConfig?.activatePointersOnLongPress ??\n    defaultPointerConfig.activatePointersOnLongPress;\n  const activatePointersDelay =\n    pointerConfig?.activatePointersDelay ??\n    defaultPointerConfig.activatePointersDelay;\n  const initialPointerIndex =\n    pointerConfig?.initialPointerIndex ??\n    defaultPointerConfig.initialPointerIndex;\n  const initialPointerAppearDelay =\n    pointerConfig?.initialPointerAppearDelay ??\n    (isAnimated\n      ? animationDuration\n      : defaultPointerConfig.initialPointerAppearDelay);\n  const persistPointer =\n    pointerConfig?.persistPointer ?? defaultPointerConfig.persistPointer;\n  const hidePointer1 =\n    pointerConfig?.hidePointer1 ?? defaultPointerConfig.hidePointer1;\n  const pointerEvents = pointerConfig?.pointerEvents;\n\n  const disableScroll =\n    props.disableScroll ||\n    (pointerConfig\n      ? activatePointersOnLongPress\n        ? responderActive\n          ? true\n          : false\n        : true\n      : false);\n\n  const labelsAppear = useCallback(() => {\n    opacValue.setValue(0);\n    Animated.timing(opacValue, {\n      toValue: 1,\n      duration: 500,\n      easing: Easing.ease,\n      useNativeDriver: false,\n    }).start();\n  }, [opacValue]);\n\n  const decreaseWidth = useCallback(() => {\n    widthValue.setValue(0);\n    Animated.timing(widthValue, {\n      toValue: 1,\n      duration: lineConfig.animationDuration,\n      easing: Easing.linear,\n      useNativeDriver: false,\n    }).start();\n  }, [lineConfig.animationDuration, widthValue]);\n\n  useEffect(() => {\n    if (showLine) {\n      let pp = '',\n        pp2 = '';\n      const firstBarWidth =\n        (props.stackData ?? data)?.[0].barWidth ?? props.barWidth ?? 30;\n      if (!lineConfig.curved) {\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            data?.[i]?.barWidth ?? props.barWidth ?? BarDefaults.barWidth;\n          const currentValue = props.lineData\n            ? props.lineData[i].value\n            : props.stackData\n            ? props.stackData[i].stacks.reduce(\n                (total, item) => total + item.value,\n                0,\n              )\n            : data[i].value;\n          pp +=\n            'L' +\n            getXForLineInBar(\n              i,\n              firstBarWidth,\n              currentBarWidth,\n              yAxisLabelWidth,\n              lineConfig,\n              spacing,\n            ) +\n            ' ' +\n            getYForLineInBar(\n              currentValue,\n              lineConfig.shiftY,\n              containerHeight,\n              lineConfig.isSecondary ? secondaryMaxValue : maxValue,\n            ) +\n            ' ';\n        }\n        setPoints(pp.replace('L', 'M'));\n        if (lineData.length > 1 && lineConfig.showArrow) {\n          let ppArray = pp.trim().split(' ');\n          let arrowTipY = parseInt(ppArray[ppArray.length - 1]);\n          let arrowTipX = parseInt(\n            ppArray[ppArray.length - 2].replace('L', ''),\n          );\n          let y1 = parseInt(ppArray[ppArray.length - 3]);\n          let x1 = parseInt(ppArray[ppArray.length - 4].replace('L', ''));\n\n          let arrowPoints = getArrowPoints(\n            arrowTipX,\n            arrowTipY,\n            x1,\n            y1,\n            lineConfig.arrowConfig.length,\n            lineConfig.arrowConfig.width,\n            lineConfig.arrowConfig.showArrowBase,\n          );\n\n          setArrowPoints(arrowPoints);\n        }\n      } else {\n        let p1Array: Array<Array<number>> = [];\n        for (let i = 0; i < lineData.length; i++) {\n          if (i < lineConfig.startIndex || i > lineConfig.endIndex) continue;\n          const currentBarWidth =\n            data?.[i]?.barWidth ?? props.barWidth ?? BarDefaults.barWidth;\n          const currentValue = props.lineData\n            ? props.lineData[i].value\n            : props.stackData\n            ? props.stackData[i].stacks.reduce(\n                (total, item) => total + item.value,\n                0,\n              )\n            : data[i].value;\n          p1Array.push([\n            getXForLineInBar(\n              i,\n              firstBarWidth,\n              currentBarWidth,\n              yAxisLabelWidth,\n              lineConfig,\n              spacing,\n            ),\n            getYForLineInBar(\n              currentValue,\n              lineConfig.shiftY,\n              containerHeight,\n              lineConfig.isSecondary ? secondaryMaxValue : maxValue,\n            ),\n          ]);\n          let xx = svgPath(p1Array, lineConfig.curveType, lineConfig.curvature);\n          setPoints(xx);\n        }\n      }\n      if (lineData2?.length) {\n        if (!lineConfig2?.curved) {\n          for (let i = 0; i < lineData2.length; i++) {\n            if (i < lineConfig2.startIndex || i > lineConfig2.endIndex)\n              continue;\n            const currentBarWidth =\n              data?.[i]?.barWidth ?? props.barWidth ?? BarDefaults.barWidth;\n            const currentValue = lineData2[i].value;\n            pp2 +=\n              'L' +\n              getXForLineInBar(\n                i,\n                firstBarWidth,\n                currentBarWidth,\n                yAxisLabelWidth,\n                lineConfig2,\n                spacing,\n              ) +\n              ' ' +\n              getYForLineInBar(\n                currentValue,\n                lineConfig2.shiftY,\n                containerHeight,\n                lineConfig2.isSecondary ? secondaryMaxValue : maxValue,\n              ) +\n              ' ';\n          }\n          setPoints2(pp2.replace('L', 'M'));\n        } else {\n          let p2Array: Array<Array<number>> = [];\n          for (let i = 0; i < lineData2.length; i++) {\n            if (i < lineConfig2.startIndex || i > lineConfig2.endIndex)\n              continue;\n            const currentBarWidth =\n              data?.[i]?.barWidth ?? props.barWidth ?? BarDefaults.barWidth;\n            const currentValue = lineData2[i].value;\n            p2Array.push([\n              getXForLineInBar(\n                i,\n                firstBarWidth,\n                currentBarWidth,\n                yAxisLabelWidth,\n                lineConfig2,\n                spacing,\n              ),\n              getYForLineInBar(\n                currentValue,\n                lineConfig2.shiftY,\n                containerHeight,\n                lineConfig2.isSecondary ? secondaryMaxValue : maxValue,\n              ),\n            ]);\n            let xx = svgPath(\n              p2Array,\n              lineConfig2.curveType,\n              lineConfig2.curvature,\n            );\n            setPoints2(xx);\n          }\n        }\n      }\n      if (lineConfig.isAnimated) {\n        setTimeout(() => decreaseWidth(), lineConfig.delay || 0);\n      }\n    }\n    setTimeout(() => labelsAppear(), animationDuration);\n  }, [\n    animationDuration,\n    containerHeight,\n    data,\n    lineData,\n    decreaseWidth,\n    initialSpacing,\n    labelsAppear,\n    lineConfig.initialSpacing,\n    lineConfig.curved,\n    lineConfig.dataPointsWidth,\n    lineConfig.shiftY,\n    lineConfig.isAnimated,\n    lineConfig.delay,\n    lineConfig.startIndex,\n    lineConfig.endIndex,\n    maxValue,\n    props.barWidth,\n    showLine,\n    spacing,\n    yAxisLabelWidth,\n    lineConfig.showArrow,\n    lineConfig.arrowConfig.length,\n    lineConfig.arrowConfig.width,\n    lineConfig.arrowConfig.showArrowBase,\n  ]);\n  useEffect(() => {\n    if (initialPointerIndex !== -1) {\n      const item = (props.stackData ?? data)[initialPointerIndex];\n      const stackSum = item.stacks?.reduce(\n        (acc, stack) => acc + (stack.value ?? 0),\n        0,\n      );\n      const x =\n        initialSpacing +\n        (spacing + barWidth) * initialPointerIndex -\n        (pointerRadius || pointerWidth / 2) +\n        barWidth / 2;\n      const y =\n        containerHeight -\n        ((stackSum ?? item.value) * containerHeight) / maxValue -\n        (pointerRadius || pointerHeight / 2) +\n        10;\n      if (initialPointerAppearDelay) {\n        setTimeout(() => {\n          setPointerConfig(initialPointerIndex, item, x, y);\n        }, initialPointerAppearDelay);\n      } else {\n        setPointerConfig(initialPointerIndex, item, x, y);\n      }\n    }\n  }, []);\n\n  const setPointerConfig = (initialPointerIndex, item, x, y) => {\n    setPointerIndex(initialPointerIndex);\n    setPointerItem(item);\n    setPointerX(x);\n    setPointerY(y);\n  };\n\n  const animatedHeight = heightValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0%', '100%'],\n  });\n  const appearingOpacity = opacValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, 1],\n  });\n\n  const animatedWidth = widthValue.interpolate({\n    inputRange: [0, 1],\n    outputRange: [0, totalWidth],\n  });\n\n  const renderPointer = (lineNumber: number) => {\n    if (lineNumber === 1 && hidePointer1) return;\n\n    const pointerItemLocal = pointerItem;\n    const pointerYLocal = pointerY;\n    const pointerColorLocal = pointerConfig?.pointer1Color || pointerColor;\n\n    return Pointer({\n      pointerX,\n      pointerYLocal,\n      pointerComponent,\n      pointerHeight,\n      pointerRadius,\n      pointerWidth,\n      pointerItemLocal,\n      pointerColorLocal,\n    });\n  };\n\n  const renderStripAndLabel = () => {\n    let pointerItemLocal,\n      pointerYLocal = pointerY;\n\n    pointerItemLocal = [pointerItem];\n    return StripAndLabel({\n      autoAdjustPointerLabelPosition,\n      pointerX,\n      pointerLabelWidth,\n      activatePointersOnLongPress,\n      yAxisLabelWidth,\n      pointerRadius,\n      pointerWidth,\n      shiftPointerLabelX,\n      pointerLabelHeight,\n      pointerYLocal,\n      pointerStripUptoDataPoint,\n      pointerStripHeight,\n      shiftPointerLabelY,\n      pointerItemLocal,\n      showPointerStrip,\n      pointerStripWidth,\n      containerHeight,\n      xAxisThickness,\n      pointerStripColor,\n      pointerConfig,\n      pointerLabelComponent,\n      scrollX: 0,\n      pointerEvents,\n    });\n  };\n\n  const renderChartContent = () => {\n    if (pointerConfig) {\n      return (\n        <View\n          onStartShouldSetResponder={evt => (pointerConfig ? true : false)}\n          onMoveShouldSetResponder={evt => (pointerConfig ? true : false)}\n          onResponderGrant={evt => {\n            if (!pointerConfig) return;\n            setResponderStartTime(evt.timeStamp);\n            if (activatePointersOnLongPress) {\n              return;\n            }\n            let x = evt.nativeEvent.locationX;\n            if (\n              !activatePointersOnLongPress &&\n              x > (props.width || screenWidth)\n            )\n              return;\n            let factor =\n              (x - initialSpacing - barWidth / 2) / (spacing + barWidth);\n            factor = Math.round(factor);\n            factor = Math.min(factor, data.length - 1);\n            factor = Math.max(factor, 0);\n            let z =\n              initialSpacing +\n              (spacing + barWidth) * factor -\n              (pointerRadius || pointerWidth / 2) +\n              barWidth / 2;\n            setPointerX(z);\n            setPointerIndex(factor);\n            let item, y;\n            item = (props.stackData ?? data)[factor];\n            const stackSum = item.stacks?.reduce(\n              (acc, stack) => acc + (stack.value ?? 0),\n              0,\n            );\n            y =\n              containerHeight -\n              ((stackSum ?? item.value) * containerHeight) / maxValue -\n              (pointerRadius || pointerHeight / 2) +\n              10;\n            setPointerY(y);\n            setPointerItem(item);\n          }}\n          onResponderMove={evt => {\n            if (!pointerConfig) return;\n            if (\n              activatePointersOnLongPress &&\n              evt.timeStamp - responderStartTime < activatePointersDelay\n            ) {\n              return;\n            } else {\n              setResponderActive(true);\n            }\n            let x = evt.nativeEvent.locationX;\n            if (\n              !activatePointersOnLongPress &&\n              x > (props.width || screenWidth)\n            )\n              return;\n            let factor =\n              (x - initialSpacing - barWidth / 2) / (spacing + barWidth);\n            factor = Math.round(factor);\n            factor = Math.min(factor, (props.stackData ?? data).length - 1);\n            factor = Math.max(factor, 0);\n            let z =\n              initialSpacing +\n              (spacing + barWidth) * factor -\n              (pointerRadius || pointerWidth / 2) +\n              barWidth / 2;\n            let item, y;\n            setPointerX(z);\n            setPointerIndex(factor);\n            item = (props.stackData ?? data)[factor];\n            const stackSum = item.stacks?.reduce(\n              (acc, stack) => acc + (stack.value ?? 0),\n              0,\n            );\n            y =\n              containerHeight -\n              ((stackSum ?? item.value) * containerHeight) / maxValue -\n              (pointerRadius || pointerHeight / 2) +\n              10;\n            setPointerY(y);\n            setPointerItem(item);\n          }}\n          onResponderEnd={evt => {\n            setResponderStartTime(0);\n            setPointerIndex(-1);\n            setResponderActive(false);\n            if (!persistPointer)\n              setTimeout(() => setPointerX(0), pointerVanishDelay);\n          }}\n          onResponderTerminationRequest={evt => false}\n          style={{\n            position: 'absolute',\n            height: containerHeightIncludingBelowXAxis,\n            bottom: 60,\n            paddingLeft: initialSpacing,\n            width: totalWidth,\n            flexDirection: 'row',\n          }}>\n          {renderChart()}\n          {pointerX > 0 ? (\n            <View\n              pointerEvents={pointerEvents ?? 'none'}\n              style={{\n                position: 'absolute',\n                height:\n                  extendedContainerHeight + noOfSectionsBelowXAxis * stepHeight,\n                bottom: xAxisLabelsVerticalShift + labelsExtraHeight,\n                width: totalWidth,\n                zIndex: 20,\n              }}>\n              {!stripOverPointer && renderStripAndLabel()}\n              {renderPointer(1)}\n              {stripOverPointer && renderStripAndLabel()}\n            </View>\n          ) : null}\n        </View>\n      );\n    } else {\n      return renderChart();\n    }\n  };\n\n  const renderChart = () => {\n    const getPropsCommonForBarAndStack = (item, index) => {\n      return {\n        key: index,\n        item: item,\n        index: index,\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        spacing: item.spacing ?? spacing,\n        propSpacing: spacing,\n        xAxisThickness: xAxisThickness,\n        barWidth: props.barWidth,\n        opacity: opacity,\n        disablePress: item.disablePress || props.disablePress,\n        rotateLabel: rotateLabel,\n        showXAxisIndices: showXAxisIndices,\n        xAxisIndicesHeight: xAxisIndicesHeight,\n        xAxisIndicesWidth: xAxisIndicesWidth,\n        xAxisIndicesColor: xAxisIndicesColor,\n        horizontal: horizontal,\n        rtl: rtl,\n        intactTopLabel: intactTopLabel,\n        showValuesAsTopLabel: props.showValuesAsTopLabel,\n        topLabelContainerStyle: props.topLabelContainerStyle,\n        topLabelTextStyle: props.topLabelTextStyle,\n        barBorderWidth: props.barBorderWidth,\n        barBorderColor: barBorderColor,\n        barBorderRadius: props.barBorderRadius,\n        barBorderTopLeftRadius: props.barBorderTopLeftRadius,\n        barBorderTopRightRadius: props.barBorderTopRightRadius,\n        barBorderBottomLeftRadius: props.barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: props.barBorderBottomRightRadius,\n        color: props.color,\n        showGradient: props.showGradient,\n        gradientColor: props.gradientColor,\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        onPress: props.onPress,\n        xAxisTextNumberOfLines: xAxisTextNumberOfLines,\n        xAxisLabelsHeight: props.xAxisLabelsHeight,\n        xAxisLabelsVerticalShift,\n        renderTooltip: props.renderTooltip,\n        leftShiftForTooltip: props.leftShiftForTooltip || 0,\n        initialSpacing: initialSpacing,\n        selectedIndex: selectedIndex,\n        setSelectedIndex: setSelectedIndex,\n        activeOpacity: props.activeOpacity || 0.2,\n\n        leftShiftForLastIndexTooltip: props.leftShiftForLastIndexTooltip || 0,\n        label:\n          item.label ||\n          (props.xAxisLabelTexts && props.xAxisLabelTexts[index]\n            ? props.xAxisLabelTexts[index]\n            : ''),\n        labelTextStyle: item.labelTextStyle || props.xAxisLabelTextStyle,\n        pointerConfig,\n      };\n    };\n    if (props.stackData) {\n      return props.stackData.map((item, index) => {\n        return (\n          <RenderStackBars\n            stackData={props.stackData || []}\n            isAnimated={isAnimated}\n            animationDuration={animationDuration}\n            stackBorderRadius={props.stackBorderRadius}\n            stackBorderTopLeftRadius={props.stackBorderTopLeftRadius}\n            stackBorderTopRightRadius={props.stackBorderTopRightRadius}\n            stackBorderBottomLeftRadius={props.stackBorderBottomLeftRadius}\n            stackBorderBottomRightRadius={props.stackBorderBottomRightRadius}\n            {...getPropsCommonForBarAndStack(item, index)}\n          />\n        );\n      });\n    } else {\n      return data.map((item, index) => (\n        <RenderBars\n          data={data}\n          side={side}\n          minHeight={props.minHeight || 0}\n          sideWidth={props.sideWidth}\n          labelWidth={labelWidth}\n          isThreeD={isThreeD}\n          isAnimated={isAnimated}\n          animationDuration={animationDuration}\n          animatedHeight={animatedHeight}\n          appearingOpacity={appearingOpacity}\n          roundedTop={props.roundedTop}\n          roundedBottom={props.roundedBottom}\n          frontColor={props.frontColor}\n          sideColor={props.sideColor}\n          topColor={props.topColor}\n          cappedBars={props.cappedBars}\n          capThickness={props.capThickness}\n          capColor={props.capColor}\n          capRadius={props.capRadius}\n          autoShiftLabels={autoShiftLabels}\n          barMarginBottom={props.barMarginBottom}\n          barStyle={props.barStyle}\n          {...getPropsCommonForBarAndStack(item, index)}\n        />\n      ));\n    }\n  };\n\n  const remainingScrollViewProps = {\n    onTouchStart: evt => {\n      if (props.renderTooltip) {\n        setSelectedIndex(-1);\n      }\n    },\n  };\n\n  const barAndLineChartsWrapperProps: BarAndLineChartsWrapperTypes = {\n    chartType: chartTypes.BAR,\n    containerHeight,\n    noOfSectionsBelowXAxis,\n    stepHeight,\n    labelsExtraHeight,\n    yAxisLabelWidth,\n    horizontal,\n    rtl,\n    shiftX: props.shiftX ?? 0,\n    shiftY: props.shiftY ?? 0,\n    scrollRef,\n    yAxisAtTop,\n    initialSpacing,\n    data,\n    stackData: props.stackData,\n    secondaryData: secondaryData,\n    barWidth: props.barWidth || BarDefaults.barWidth,\n    xAxisThickness,\n    totalWidth,\n    disableScroll,\n    showScrollIndicator,\n    scrollToEnd,\n    scrollToIndex: props.scrollToIndex,\n    scrollAnimation,\n    scrollEventThrottle,\n    indicatorColor: props.indicatorColor,\n    setSelectedIndex,\n    spacing,\n    showLine,\n    lineConfig,\n    lineConfig2,\n    maxValue,\n    lineData,\n    lineData2,\n    animatedWidth,\n    lineBehindBars,\n    points,\n    points2,\n    arrowPoints,\n    renderChartContent,\n    remainingScrollViewProps,\n\n    //horizSectionProps-\n    width: widthFromProps,\n    horizSections,\n    endSpacing,\n    horizontalRulesStyle,\n    noOfSections,\n    showFractionalValues,\n\n    axesAndRulesProps: getAxesAndRulesProps(\n      props,\n      stepValue,\n      secondaryMaxValue,\n    ),\n\n    yAxisLabelTexts: props.yAxisLabelTexts,\n    yAxisOffset: props.yAxisOffset,\n    rotateYAxisTexts: props.rotateYAxisTexts,\n    hideAxesAndRules: props.hideAxesAndRules,\n\n    showXAxisIndices,\n    xAxisIndicesHeight,\n    xAxisIndicesWidth,\n    xAxisIndicesColor,\n\n    // These are Not needed but passing this prop to maintain consistency (between LineChart and BarChart props)\n    pointerConfig,\n    getPointerProps,\n    pointerIndex,\n    pointerX,\n    pointerY,\n  };\n\n  return <BarAndLineChartsWrapper {...barAndLineChartsWrapperProps} />;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}