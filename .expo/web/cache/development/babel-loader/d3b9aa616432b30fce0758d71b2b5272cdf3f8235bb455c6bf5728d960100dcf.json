{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { RANGE_ENTER, RANGE_EXIT, STOP, defaultLineConfig, loc } from \"./constants\";\nimport { CurveType } from \"./types\";\nexport var getCumulativeWidth = function getCumulativeWidth(data, index, spacing) {\n  var cumWidth = 0;\n  for (var i = 0; i < index; i++) {\n    var barWidth = data[i].barWidth;\n    barWidth = barWidth || 30;\n    cumWidth += barWidth + (spacing != null ? spacing : 20);\n  }\n  return cumWidth;\n};\nexport var getLighterColor = function getLighterColor(color) {\n  var r,\n    g,\n    b,\n    lighter = '#';\n  if (color.startsWith('#')) {\n    if (color.length < 7) {\n      r = parseInt(color[1], 16);\n      g = parseInt(color[2], 16);\n      b = parseInt(color[3], 16);\n      if (r < 14) {\n        r += 2;\n        lighter += r.toString(16);\n      }\n      if (g < 14) {\n        g += 2;\n        lighter += g.toString(16);\n      }\n      if (b < 14) {\n        b += 2;\n        lighter += b.toString(16);\n      }\n    } else {\n      r = parseInt(color[1] + color[2], 16);\n      g = parseInt(color[3] + color[4], 16);\n      b = parseInt(color[5] + color[6], 16);\n      if (r < 224) {\n        r += 32;\n        lighter += r.toString(16);\n      }\n      if (g < 224) {\n        g += 32;\n        lighter += g.toString(16);\n      }\n      if (b < 224) {\n        b += 32;\n        lighter += b.toString(16);\n      }\n    }\n  }\n  return lighter;\n};\nexport var svgQuadraticCurvePath = function svgQuadraticCurvePath(points) {\n  var path = 'M' + points[0][0] + ',' + points[0][1];\n  for (var i = 0; i < points.length - 1; i++) {\n    var xMid = (points[i][0] + points[i + 1][0]) / 2;\n    var yMid = (points[i][1] + points[i + 1][1]) / 2;\n    var cpX1 = (xMid + points[i][0]) / 2;\n    var cpX2 = (xMid + points[i + 1][0]) / 2;\n    path += 'Q ' + cpX1 + ', ' + points[i][1] + ', ' + xMid + ', ' + yMid + (' Q ' + cpX2 + ', ' + points[i + 1][1] + ', ' + points[i + 1][0] + ', ' + points[i + 1][1]);\n  }\n  return path;\n};\nexport var svgPath = function svgPath(points, curveType, curvature) {\n  if (!(points != null && points.length)) return '';\n  if (curveType === CurveType.QUADRATIC) {\n    return svgQuadraticCurvePath(points);\n  }\n  var d = points.reduce(function (acc, point, i, a) {\n    return i === 0 ? `M${point[0]},${point[1]}` : `${acc} ${bezierCommand(point, i, a, curvature)}`;\n  }, '');\n  return d;\n};\nvar line = function line(pointA, pointB) {\n  var lengthX = pointB[0] - pointA[0];\n  var lengthY = pointB[1] - pointA[1];\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX)\n  };\n};\nvar controlPoint = function controlPoint(curvature, current, previous, next, reverse) {\n  var p = previous || current;\n  var n = next || current;\n  var smoothing = curvature;\n  var o = line(p, n);\n  var angle = o.angle + (reverse ? Math.PI : 0);\n  var length = o.length * smoothing;\n  var x = current[0] + Math.cos(angle) * length;\n  var y = current[1] + Math.sin(angle) * length;\n  return [x, y];\n};\nexport var bezierCommand = function bezierCommand(point, i, a, curvature) {\n  var _controlPoint = controlPoint(curvature, a[i - 1], a[i - 2], point),\n    _controlPoint2 = _slicedToArray(_controlPoint, 2),\n    cpsX = _controlPoint2[0],\n    cpsY = _controlPoint2[1];\n  var _controlPoint3 = controlPoint(curvature, point, a[i - 1], a[i + 1], true),\n    _controlPoint4 = _slicedToArray(_controlPoint3, 2),\n    cpeX = _controlPoint4[0],\n    cpeY = _controlPoint4[1];\n  return `C${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`;\n};\nexport var getSegmentString = function getSegmentString(lineSegment, index, startDelimeter, endDelimeter) {\n  var segment = lineSegment == null ? void 0 : lineSegment.find(function (segment) {\n    return segment.startIndex === index;\n  });\n  return segment ? startDelimeter + JSON.stringify(segment) + endDelimeter : '';\n};\nexport var getCurvePathWithSegments = function getCurvePathWithSegments(path, lineSegment, startDelimeter, endDelimeter) {\n  if (!(lineSegment != null && lineSegment.length)) return path;\n  var newPath = '';\n  var pathArray = path.split('C');\n  var _loop = function _loop(i) {\n    var segment = lineSegment == null ? void 0 : lineSegment.find(function (segment) {\n      return segment.startIndex === i;\n    });\n    newPath += (pathArray[i].startsWith('M') ? '' : 'C') + pathArray[i] + (segment ? startDelimeter + JSON.stringify(segment) + endDelimeter : '');\n  };\n  for (var i = 0; i < pathArray.length; i++) {\n    _loop(i);\n  }\n  return newPath;\n};\nexport var getPreviousSegmentsLastPoint = function getPreviousSegmentsLastPoint(isCurved, previousSegment) {\n  var prevSegmentLastPoint = isCurved ? previousSegment.substring(previousSegment.trim().lastIndexOf(' ')) : previousSegment.substring(previousSegment.lastIndexOf('L')).replace('L', 'M');\n  return (prevSegmentLastPoint.trim()[0] === 'M' ? '' : 'M') + prevSegmentLastPoint;\n};\nexport var getPathWithHighlight = function getPathWithHighlight(data, i, highlightedRange, startIndex, endIndex, getX, getY) {\n  var path = '';\n  var from = highlightedRange.from,\n    to = highlightedRange.to;\n  var currentPointRegion = data[i].value < from ? loc.DOWN : data[i].value > to ? loc.UP : loc.IN;\n  if (i !== endIndex) {\n    var nextPointRegion = data[i + 1].value < from ? loc.DOWN : data[i + 1].value > to ? loc.UP : loc.IN;\n    if (currentPointRegion !== nextPointRegion || i === startIndex && currentPointRegion === loc.IN) {\n      var x1 = getX(i),\n        y1 = getY(data[i].value),\n        x2 = getX(i + 1),\n        y2 = getY(data[i + 1].value);\n      var m = (y2 - y1) / (x2 - x1),\n        x,\n        y;\n      if (i === startIndex && currentPointRegion === loc.IN) {\n        y = y1;\n        x = x1;\n        path += 'L' + x + ' ' + y + ' ' + RANGE_ENTER + JSON.stringify(highlightedRange) + STOP;\n        if (nextPointRegion === loc.UP) {\n          y = getY(to);\n          x = (y - y1) / m + x1;\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        } else if (nextPointRegion === loc.DOWN) {\n          y = getY(from);\n          x = (y - y1) / m + x1;\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        }\n      } else if (currentPointRegion !== nextPointRegion) {\n        if (currentPointRegion === loc.DOWN && nextPointRegion === loc.UP) {\n          y = getY(from);\n          x = (y - y1) / m + x1;\n          path += 'L' + x + ' ' + y + ' ' + RANGE_ENTER + JSON.stringify(highlightedRange) + STOP;\n          y = getY(to);\n          x = (y - y1) / m + x1;\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        } else if (currentPointRegion === loc.UP && nextPointRegion === loc.DOWN) {\n          y = getY(to);\n          x = (y - y1) / m + x1;\n          path += 'L' + x + ' ' + y + ' ' + RANGE_ENTER + JSON.stringify(highlightedRange) + STOP;\n          y = getY(from);\n          x = (y - y1) / m + x1;\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        } else {\n          if (currentPointRegion === loc.UP && nextPointRegion === loc.IN || currentPointRegion === loc.IN && nextPointRegion === loc.UP) {\n            y = getY(to);\n          } else if (currentPointRegion === loc.IN && nextPointRegion === loc.DOWN || currentPointRegion === loc.DOWN && nextPointRegion === loc.IN) {\n            y = getY(from);\n          }\n          m = (y2 - y1) / (x2 - x1);\n          x = (y - y1) / m + x1;\n          var prefix = nextPointRegion === loc.IN ? RANGE_ENTER + JSON.stringify(highlightedRange) + STOP : RANGE_EXIT;\n          path += 'L' + x + ' ' + y + ' ' + prefix;\n        }\n      }\n    }\n  } else if (currentPointRegion === loc.IN) {\n    path += RANGE_EXIT;\n  }\n  return path;\n};\nexport var getRegionPathObjects = function getRegionPathObjects(points, color, currentLineThickness, thickness, strokeDashArray, isCurved, startDelimeter, stop, endDelimeter) {\n  var ar = [{}];\n  var tempStr = points;\n  if (!points.startsWith(startDelimeter)) {\n    var lineSvgProps = {\n      d: points.substring(0, points.indexOf(startDelimeter)),\n      color: color,\n      strokeWidth: currentLineThickness || thickness\n    };\n    if (strokeDashArray) {\n      lineSvgProps.strokeDashArray = strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n  }\n  while (tempStr.includes(startDelimeter)) {\n    var _segmentConfig$color, _segmentConfig$thickn;\n    var startDelimeterIndex = tempStr.indexOf(startDelimeter);\n    var stopIndex = tempStr.indexOf(stop);\n    var endDelimeterIndex = tempStr.indexOf(endDelimeter);\n    var segmentConfigString = tempStr.substring(startDelimeterIndex + startDelimeter.length, stopIndex);\n    var segmentConfig = JSON.parse(segmentConfigString);\n    var segment = tempStr.substring(stopIndex + stop.length, endDelimeterIndex);\n    var previousSegment = ar[ar.length - 1].d;\n    var moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(isCurved, previousSegment);\n    var _lineSvgProps = {\n      d: moveToLastPointOfPreviousSegment + segment,\n      color: (_segmentConfig$color = segmentConfig.color) != null ? _segmentConfig$color : color,\n      strokeWidth: (_segmentConfig$thickn = segmentConfig.thickness) != null ? _segmentConfig$thickn : currentLineThickness || thickness\n    };\n    if (segmentConfig.strokeDashArray) {\n      _lineSvgProps.strokeDashArray = segmentConfig.strokeDashArray;\n    }\n    ar.push(_lineSvgProps);\n    tempStr = tempStr.substring(endDelimeterIndex + endDelimeter.length);\n    var nextDelimiterIndex = tempStr.indexOf(startDelimeter);\n    var stringUptoNextSegment = tempStr.substring(0, nextDelimiterIndex);\n    if (nextDelimiterIndex !== -1 && stringUptoNextSegment.indexOf(isCurved ? 'C' : 'L') !== -1) {\n      var _previousSegment = ar[ar.length - 1].d;\n      var _moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(isCurved, _previousSegment);\n      var _lineSvgProps2 = {\n        d: _moveToLastPointOfPreviousSegment + ' ' + stringUptoNextSegment,\n        color: color,\n        strokeWidth: currentLineThickness || thickness\n      };\n      if (strokeDashArray) {\n        _lineSvgProps2.strokeDashArray = strokeDashArray;\n      }\n      ar.push(_lineSvgProps2);\n    }\n  }\n  if (tempStr.length) {\n    var _previousSegment2 = ar[ar.length - 1].d;\n    var _moveToLastPointOfPreviousSegment2 = getPreviousSegmentsLastPoint(isCurved, _previousSegment2);\n    var _lineSvgProps3 = {\n      d: _moveToLastPointOfPreviousSegment2 + tempStr,\n      color: color,\n      strokeWidth: currentLineThickness || thickness\n    };\n    if (strokeDashArray) {\n      _lineSvgProps3.strokeDashArray = strokeDashArray;\n    }\n    ar.push(_lineSvgProps3);\n  }\n  ar.shift();\n  return ar;\n};\nexport var getSegmentedPathObjects = function getSegmentedPathObjects(points, color, currentLineThickness, thickness, strokeDashArray, isCurved, startDelimeter, endDelimeter) {\n  var ar = [{}];\n  var tempStr = points;\n  if (!points.startsWith(startDelimeter)) {\n    var lineSvgProps = {\n      d: points.substring(0, points.indexOf(startDelimeter)),\n      color: color,\n      strokeWidth: currentLineThickness || thickness\n    };\n    if (strokeDashArray) {\n      lineSvgProps.strokeDashArray = strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n  }\n  while (tempStr.includes(startDelimeter)) {\n    var _segmentConfig$color2, _segmentConfig$thickn2;\n    var startDelimeterIndex = tempStr.indexOf(startDelimeter);\n    var endDelimeterIndex = tempStr.indexOf(endDelimeter);\n    var segmentConfigString = tempStr.substring(startDelimeterIndex + startDelimeter.length, endDelimeterIndex);\n    var segmentConfig = JSON.parse(segmentConfigString);\n    var startIndex = segmentConfig.startIndex,\n      endIndex = segmentConfig.endIndex;\n    var segmentLength = endIndex - startIndex;\n    var segment = tempStr.substring(endDelimeterIndex + endDelimeter.length);\n    var c = 0,\n      s = 0,\n      i = void 0;\n    for (i = 0; i < segment.length; i++) {\n      if (segment[i] === (isCurved ? 'C' : 'L')) c++;\n      if (c === segmentLength) {\n        if (segment[i] === ' ') s++;\n        if (s === (isCurved ? 3 : 2)) break;\n      }\n    }\n    segment = segment.substring(0, i);\n    var previousSegment = ar[ar.length - 1].d;\n    var moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(isCurved, previousSegment);\n    var _lineSvgProps4 = {\n      d: moveToLastPointOfPreviousSegment + segment,\n      color: (_segmentConfig$color2 = segmentConfig.color) != null ? _segmentConfig$color2 : color,\n      strokeWidth: (_segmentConfig$thickn2 = segmentConfig.thickness) != null ? _segmentConfig$thickn2 : currentLineThickness || thickness\n    };\n    if (segmentConfig.strokeDashArray) {\n      _lineSvgProps4.strokeDashArray = segmentConfig.strokeDashArray;\n    }\n    ar.push(_lineSvgProps4);\n    tempStr = tempStr.substring(endDelimeterIndex + endDelimeter.length + i);\n    var nextDelimiterIndex = tempStr.indexOf(startDelimeter);\n    var stringUptoNextSegment = tempStr.substring(0, nextDelimiterIndex);\n    if (nextDelimiterIndex !== -1 && stringUptoNextSegment.indexOf(isCurved ? 'C' : 'L') !== -1) {\n      var _previousSegment3 = ar[ar.length - 1].d;\n      var _moveToLastPointOfPreviousSegment3 = getPreviousSegmentsLastPoint(isCurved, _previousSegment3);\n      var _lineSvgProps5 = {\n        d: _moveToLastPointOfPreviousSegment3 + ' ' + stringUptoNextSegment,\n        color: color,\n        strokeWidth: currentLineThickness || thickness\n      };\n      if (strokeDashArray) {\n        _lineSvgProps5.strokeDashArray = strokeDashArray;\n      }\n      ar.push(_lineSvgProps5);\n    }\n  }\n  if (tempStr.length) {\n    var _previousSegment4 = ar[ar.length - 1].d;\n    var _moveToLastPointOfPreviousSegment4 = getPreviousSegmentsLastPoint(isCurved, _previousSegment4);\n    var _lineSvgProps6 = {\n      d: _moveToLastPointOfPreviousSegment4 + tempStr,\n      color: color,\n      strokeWidth: currentLineThickness || thickness\n    };\n    if (strokeDashArray) {\n      _lineSvgProps6.strokeDashArray = strokeDashArray;\n    }\n    ar.push(_lineSvgProps6);\n  }\n  ar.shift();\n  return ar;\n};\nexport var getArrowPoints = function getArrowPoints(arrowTipX, arrowTipY, x1, y1, arrowLength, arrowWidth, showArrowBase) {\n  var dataLineSlope = (arrowTipY - y1) / (arrowTipX - x1);\n  var d = arrowLength != null ? arrowLength : 0;\n  var d2 = (arrowWidth != null ? arrowWidth : 0) / 2;\n  var interSectionX = arrowTipX - Math.sqrt(d * d / (dataLineSlope * dataLineSlope + 1));\n  var interSectionY = arrowTipY - dataLineSlope * (arrowTipX - interSectionX);\n  var arrowBasex1, arrowBaseY1, arrowBaseX2, arrowBaseY2;\n  if (dataLineSlope === 0) {\n    arrowBasex1 = interSectionX;\n    arrowBaseY1 = interSectionY - d2;\n    arrowBaseX2 = interSectionX;\n    arrowBaseY2 = interSectionY + d2;\n  } else {\n    var arrowBaseSlope = -1 / dataLineSlope;\n    arrowBasex1 = interSectionX - Math.sqrt(d2 * d2 / (arrowBaseSlope * arrowBaseSlope + 1));\n    arrowBaseY1 = interSectionY - arrowBaseSlope * (interSectionX - arrowBasex1);\n    arrowBaseX2 = interSectionX + Math.sqrt(d2 * d2 / (arrowBaseSlope * arrowBaseSlope + 1));\n    arrowBaseY2 = interSectionY + arrowBaseSlope * (interSectionX - arrowBasex1);\n  }\n  var arrowPoints = ` M${interSectionX} ${interSectionY}`;\n  arrowPoints += ` ${showArrowBase ? 'L' : 'M'}${arrowBasex1} ${arrowBaseY1}`;\n  arrowPoints += ` L${arrowTipX} ${arrowTipY}`;\n  arrowPoints += ` M${interSectionX} ${interSectionY}`;\n  arrowPoints += ` ${showArrowBase ? 'L' : 'M'}${arrowBaseX2} ${arrowBaseY2}`;\n  arrowPoints += ` L${arrowTipX} ${arrowTipY}`;\n  return arrowPoints;\n};\nexport var getAxesAndRulesProps = function getAxesAndRulesProps(props, stepValue, maxValue) {\n  var _props$xAxisTextNumbe;\n  var axesAndRulesProps = {\n    yAxisSide: props.yAxisSide,\n    yAxisLabelContainerStyle: props.yAxisLabelContainerStyle,\n    yAxisColor: props.yAxisColor,\n    yAxisThickness: props.yAxisThickness,\n    xAxisColor: props.xAxisColor,\n    xAxisLength: props.xAxisLength,\n    xAxisType: props.xAxisType,\n    xAxisTextNumberOfLines: (_props$xAxisTextNumbe = props.xAxisTextNumberOfLines) != null ? _props$xAxisTextNumbe : 1,\n    xAxisLabelsHeight: props.xAxisLabelsHeight,\n    xAxisLabelsVerticalShift: props.xAxisLabelsVerticalShift,\n    dashWidth: props.dashWidth,\n    dashGap: props.dashGap,\n    backgroundColor: props.backgroundColor,\n    hideRules: props.hideRules,\n    rulesLength: props.rulesLength,\n    rulesType: props.rulesType,\n    rulesThickness: props.rulesThickness,\n    rulesColor: props.rulesColor,\n    rulesConfigArray: props.rulesConfigArray,\n    showYAxisIndices: props.showYAxisIndices,\n    yAxisIndicesHeight: props.yAxisIndicesHeight,\n    yAxisIndicesWidth: props.yAxisIndicesWidth,\n    yAxisIndicesColor: props.yAxisIndicesColor,\n    hideOrigin: props.hideOrigin,\n    hideYAxisText: props.hideYAxisText,\n    yAxisTextNumberOfLines: props.yAxisTextNumberOfLines,\n    yAxisLabelPrefix: props.yAxisLabelPrefix,\n    yAxisLabelSuffix: props.yAxisLabelSuffix,\n    yAxisTextStyle: props.yAxisTextStyle,\n    referenceLinesConfig: {\n      showReferenceLine1: props.showReferenceLine1,\n      referenceLine1Position: props.referenceLine1Position,\n      referenceLine1Config: props.referenceLine1Config,\n      showReferenceLine2: props.showReferenceLine2,\n      referenceLine2Position: props.referenceLine2Position,\n      referenceLine2Config: props.referenceLine2Config,\n      showReferenceLine3: props.showReferenceLine3,\n      referenceLine3Position: props.referenceLine3Position,\n      referenceLine3Config: props.referenceLine3Config\n    },\n    showVerticalLines: props.showVerticalLines,\n    verticalLinesThickness: props.verticalLinesThickness,\n    verticalLinesHeight: props.verticalLinesHeight,\n    verticalLinesColor: props.verticalLinesColor,\n    verticalLinesShift: props.verticalLinesShift,\n    verticalLinesZIndex: props.verticalLinesZIndex,\n    verticalLinesSpacing: props.verticalLinesSpacing,\n    noOfVerticalLines: props.noOfVerticalLines,\n    verticalLinesUptoDataPoint: props.verticalLinesUptoDataPoint,\n    roundToDigits: props.roundToDigits,\n    stepValue: stepValue,\n    secondaryYAxis: props.secondaryYAxis,\n    formatYLabel: props.formatYLabel\n  };\n  if (props.secondaryYAxis && maxValue !== undefined) {\n    axesAndRulesProps.secondaryYAxis = _objectSpread(_objectSpread({}, props.secondaryYAxis), {}, {\n      maxValue: maxValue\n    });\n  }\n  return axesAndRulesProps;\n};\nexport var getExtendedContainerHeightWithPadding = function getExtendedContainerHeightWithPadding(containerHeight, overflowTop) {\n  return containerHeight + (overflowTop != null ? overflowTop : 0) + 10;\n};\nexport var getSecondaryDataWithOffsetIncluded = function getSecondaryDataWithOffsetIncluded(secondaryData, secondaryYAxis) {\n  if (secondaryData && secondaryYAxis != null && secondaryYAxis.yAxisOffset) {\n    return secondaryData == null ? void 0 : secondaryData.map(function (item) {\n      var _secondaryYAxis$yAxis;\n      item.value = item.value - ((_secondaryYAxis$yAxis = secondaryYAxis == null ? void 0 : secondaryYAxis.yAxisOffset) != null ? _secondaryYAxis$yAxis : 0);\n      return item;\n    });\n  }\n  return secondaryData;\n};\nexport var getArrowProperty = function getArrowProperty(property, count, props, defaultArrowConfig) {\n  var _ref, _props, _props2, _props3;\n  return (_ref = (_props = (_props2 = props[`arrowConfig${count}`]) == null ? void 0 : _props2[`${property}`]) != null ? _props : (_props3 = props[`arrowConfig`]) == null ? void 0 : _props3[`${property}`]) != null ? _ref : defaultArrowConfig[`${property}`];\n};\nexport var getAllArrowProperties = function getAllArrowProperties(props, defaultArrowConfig) {\n  var _props$dataSet, _props$dataSet2, _props$dataSet3, _props$dataSet4, _props$dataSet5, _props$dataSet6;\n  var arrowLength1 = getArrowProperty('length', 1, props, defaultArrowConfig);\n  var arrowWidth1 = getArrowProperty('width', 1, props, defaultArrowConfig);\n  var arrowStrokeWidth1 = getArrowProperty('strokeWidth', 1, props, defaultArrowConfig);\n  var arrowStrokeColor1 = getArrowProperty('strokeColor', 1, props, defaultArrowConfig);\n  var arrowFillColor1 = getArrowProperty('fillColor', 1, props, defaultArrowConfig);\n  var showArrowBase1 = getArrowProperty('showArrowBase', 1, props, defaultArrowConfig);\n  var arrowLength2 = getArrowProperty('length', 2, props, defaultArrowConfig);\n  var arrowWidth2 = getArrowProperty('width', 2, props, defaultArrowConfig);\n  var arrowStrokeWidth2 = getArrowProperty('strokeWidth', 2, props, defaultArrowConfig);\n  var arrowStrokeColor2 = getArrowProperty('strokeColor', 2, props, defaultArrowConfig);\n  var arrowFillColor2 = getArrowProperty('fillColor', 2, props, defaultArrowConfig);\n  var showArrowBase2 = getArrowProperty('showArrowBase', 2, props, defaultArrowConfig);\n  var arrowLength3 = getArrowProperty('length', 3, props, defaultArrowConfig);\n  var arrowWidth3 = getArrowProperty('width', 3, props, defaultArrowConfig);\n  var arrowStrokeWidth3 = getArrowProperty('strokeWidth', 3, props, defaultArrowConfig);\n  var arrowStrokeColor3 = getArrowProperty('strokeColor', 3, props, defaultArrowConfig);\n  var arrowFillColor3 = getArrowProperty('fillColor', 3, props, defaultArrowConfig);\n  var showArrowBase3 = getArrowProperty('showArrowBase', 3, props, defaultArrowConfig);\n  var arrowLength4 = getArrowProperty('length', 4, props, defaultArrowConfig);\n  var arrowWidth4 = getArrowProperty('width', 4, props, defaultArrowConfig);\n  var arrowStrokeWidth4 = getArrowProperty('strokeWidth', 4, props, defaultArrowConfig);\n  var arrowStrokeColor4 = getArrowProperty('strokeColor', 4, props, defaultArrowConfig);\n  var arrowFillColor4 = getArrowProperty('fillColor', 4, props, defaultArrowConfig);\n  var showArrowBase4 = getArrowProperty('showArrowBase', 4, props, defaultArrowConfig);\n  var arrowLength5 = getArrowProperty('length', 5, props, defaultArrowConfig);\n  var arrowWidth5 = getArrowProperty('width', 5, props, defaultArrowConfig);\n  var arrowStrokeWidth5 = getArrowProperty('strokeWidth', 5, props, defaultArrowConfig);\n  var arrowStrokeColor5 = getArrowProperty('strokeColor', 5, props, defaultArrowConfig);\n  var arrowFillColor5 = getArrowProperty('fillColor', 5, props, defaultArrowConfig);\n  var showArrowBase5 = getArrowProperty('showArrowBase', 5, props, defaultArrowConfig);\n  var arrowLengthsFromSet = (_props$dataSet = props.dataSet) == null ? void 0 : _props$dataSet.map(function (item) {\n    var _item$arrowConfig$len, _item$arrowConfig;\n    return (_item$arrowConfig$len = item == null ? void 0 : (_item$arrowConfig = item.arrowConfig) == null ? void 0 : _item$arrowConfig.length) != null ? _item$arrowConfig$len : arrowLength1;\n  });\n  var arrowWidthsFromSet = (_props$dataSet2 = props.dataSet) == null ? void 0 : _props$dataSet2.map(function (item) {\n    var _item$arrowConfig$arr, _item$arrowConfig2;\n    return (_item$arrowConfig$arr = item == null ? void 0 : (_item$arrowConfig2 = item.arrowConfig) == null ? void 0 : _item$arrowConfig2.arrowWidth) != null ? _item$arrowConfig$arr : arrowWidth1;\n  });\n  var arrowStrokeWidthsFromSet = (_props$dataSet3 = props.dataSet) == null ? void 0 : _props$dataSet3.map(function (item) {\n    var _item$arrowConfig$arr2, _item$arrowConfig3;\n    return (_item$arrowConfig$arr2 = item == null ? void 0 : (_item$arrowConfig3 = item.arrowConfig) == null ? void 0 : _item$arrowConfig3.arrowStrokeWidth) != null ? _item$arrowConfig$arr2 : arrowStrokeWidth1;\n  });\n  var arrowStrokeColorsFromSet = (_props$dataSet4 = props.dataSet) == null ? void 0 : _props$dataSet4.map(function (item) {\n    var _item$arrowConfig$arr3, _item$arrowConfig4;\n    return (_item$arrowConfig$arr3 = item == null ? void 0 : (_item$arrowConfig4 = item.arrowConfig) == null ? void 0 : _item$arrowConfig4.arrowStrokeColor) != null ? _item$arrowConfig$arr3 : arrowStrokeColor1;\n  });\n  var arrowFillColorsFromSet = (_props$dataSet5 = props.dataSet) == null ? void 0 : _props$dataSet5.map(function (item) {\n    var _item$arrowConfig$arr4, _item$arrowConfig5;\n    return (_item$arrowConfig$arr4 = item == null ? void 0 : (_item$arrowConfig5 = item.arrowConfig) == null ? void 0 : _item$arrowConfig5.arrowFillColor) != null ? _item$arrowConfig$arr4 : arrowFillColor1;\n  });\n  var showArrowBasesFromSet = (_props$dataSet6 = props.dataSet) == null ? void 0 : _props$dataSet6.map(function (item) {\n    var _item$arrowConfig$sho, _item$arrowConfig6;\n    return (_item$arrowConfig$sho = item == null ? void 0 : (_item$arrowConfig6 = item.arrowConfig) == null ? void 0 : _item$arrowConfig6.showArrowBase) != null ? _item$arrowConfig$sho : showArrowBase1;\n  });\n  return {\n    arrowLength1: arrowLength1,\n    arrowWidth1: arrowWidth1,\n    arrowStrokeWidth1: arrowStrokeWidth1,\n    arrowStrokeColor1: arrowStrokeColor1,\n    arrowFillColor1: arrowFillColor1,\n    showArrowBase1: showArrowBase1,\n    arrowLength2: arrowLength2,\n    arrowWidth2: arrowWidth2,\n    arrowStrokeWidth2: arrowStrokeWidth2,\n    arrowStrokeColor2: arrowStrokeColor2,\n    arrowFillColor2: arrowFillColor2,\n    showArrowBase2: showArrowBase2,\n    arrowLength3: arrowLength3,\n    arrowWidth3: arrowWidth3,\n    arrowStrokeWidth3: arrowStrokeWidth3,\n    arrowStrokeColor3: arrowStrokeColor3,\n    arrowFillColor3: arrowFillColor3,\n    showArrowBase3: showArrowBase3,\n    arrowLength4: arrowLength4,\n    arrowWidth4: arrowWidth4,\n    arrowStrokeWidth4: arrowStrokeWidth4,\n    arrowStrokeColor4: arrowStrokeColor4,\n    arrowFillColor4: arrowFillColor4,\n    showArrowBase4: showArrowBase4,\n    arrowLength5: arrowLength5,\n    arrowWidth5: arrowWidth5,\n    arrowStrokeWidth5: arrowStrokeWidth5,\n    arrowStrokeColor5: arrowStrokeColor5,\n    arrowFillColor5: arrowFillColor5,\n    showArrowBase5: showArrowBase5,\n    arrowLengthsFromSet: arrowLengthsFromSet,\n    arrowWidthsFromSet: arrowWidthsFromSet,\n    arrowStrokeWidthsFromSet: arrowStrokeWidthsFromSet,\n    arrowStrokeColorsFromSet: arrowStrokeColorsFromSet,\n    arrowFillColorsFromSet: arrowFillColorsFromSet,\n    showArrowBasesFromSet: showArrowBasesFromSet\n  };\n};\nexport var maxAndMinUtil = function maxAndMinUtil(maxItem, minItem, roundToDigits, showFractionalValues) {\n  if (showFractionalValues || roundToDigits) {\n    maxItem *= 10 * (roundToDigits || 1);\n    maxItem = maxItem + (10 - maxItem % 10);\n    maxItem /= 10 * (roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(roundToDigits || 1));\n    if (minItem !== 0) {\n      minItem *= 10 * (roundToDigits || 1);\n      minItem = minItem - (10 + minItem % 10);\n      minItem /= 10 * (roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - maxItem % 10);\n    if (minItem !== 0) {\n      minItem = minItem - (10 + minItem % 10);\n    }\n  }\n  return {\n    maxItem: maxItem,\n    minItem: minItem\n  };\n};\nexport var computeMaxAndMinItems = function computeMaxAndMinItems(data, roundToDigits, showFractionalValues) {\n  if (!(data != null && data.length)) {\n    return {\n      maxItem: 0,\n      minItem: 0\n    };\n  }\n  var maxItem = 0,\n    minItem = 0;\n  data.forEach(function (item) {\n    if (item.value > maxItem) {\n      maxItem = item.value;\n    }\n    if (item.value < minItem) {\n      minItem = item.value;\n    }\n  });\n  return maxAndMinUtil(maxItem, minItem, roundToDigits, showFractionalValues);\n};\nexport var getLabelTextUtil = function getLabelTextUtil(val, index, showFractionalValues, yAxisLabelTexts, yAxisOffset, yAxisLabelPrefix, yAxisLabelSuffix, roundToDigits, formatYLabel) {\n  var label = '';\n  if (showFractionalValues || yAxisLabelTexts && yAxisLabelTexts[index] !== undefined) {\n    if (yAxisLabelTexts != null && yAxisLabelTexts[index]) return val;\n    if (val) {\n      label = isNaN(Number(val)) ? val : (Number(val) + (yAxisOffset != null ? yAxisOffset : 0)).toFixed(roundToDigits);\n    } else {\n      var _yAxisOffset$toString;\n      label = (_yAxisOffset$toString = yAxisOffset == null ? void 0 : yAxisOffset.toString()) != null ? _yAxisOffset$toString : '0';\n    }\n  } else {\n    if (val) {\n      label = val.toString().split('.')[0];\n      label = (Number(label) + (yAxisOffset != null ? yAxisOffset : 0)).toString();\n    } else {\n      var _yAxisOffset$toString2;\n      label = (_yAxisOffset$toString2 = yAxisOffset == null ? void 0 : yAxisOffset.toString()) != null ? _yAxisOffset$toString2 : '0';\n    }\n  }\n  return yAxisLabelPrefix + (formatYLabel ? formatYLabel(label) : label) + yAxisLabelSuffix;\n};\nexport var getXForLineInBar = function getXForLineInBar(index, firstBarWidth, currentBarWidth, yAxisLabelWidth, lineConfig, spacing) {\n  var _lineConfig$spacing;\n  return yAxisLabelWidth + firstBarWidth / 2 + lineConfig.initialSpacing + (currentBarWidth + ((_lineConfig$spacing = lineConfig.spacing) != null ? _lineConfig$spacing : spacing)) * index + lineConfig.shiftX - lineConfig.dataPointsWidth / 2 - 32;\n};\nexport var getYForLineInBar = function getYForLineInBar(value, shiftY, containerHeight, maxValue) {\n  return containerHeight - shiftY - value * containerHeight / maxValue;\n};\nexport var clone = function clone(obj) {\n  if (obj === null || typeof obj !== 'object' || 'isActiveClone' in obj) return obj;\n  var temp;\n  if (obj instanceof Date) temp = new Date(obj);else temp = obj.constructor();\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      obj['isActiveClone'] = null;\n      temp[key] = clone(obj[key]);\n      delete obj['isActiveClone'];\n    }\n  }\n  return temp;\n};\nexport var getLineConfigForBarChart = function getLineConfigForBarChart(lineConfig) {\n  var _lineConfig$initialSp, _lineConfig$curvature, _lineConfig$curveType, _lineConfig$showArrow, _lineConfig$arrowConf, _lineConfig$arrowConf2, _defaultLineConfig$ar, _lineConfig$arrowConf3, _lineConfig$arrowConf4, _defaultLineConfig$ar2, _lineConfig$arrowConf5, _lineConfig$arrowConf6, _defaultLineConfig$ar3, _lineConfig$arrowConf7, _lineConfig$arrowConf8, _defaultLineConfig$ar4, _lineConfig$arrowConf9, _lineConfig$arrowConf10, _defaultLineConfig$ar5, _lineConfig$arrowConf11, _lineConfig$arrowConf12, _defaultLineConfig$ar6, _lineConfig$isSeconda;\n  return {\n    initialSpacing: (_lineConfig$initialSp = lineConfig.initialSpacing) != null ? _lineConfig$initialSp : defaultLineConfig.initialSpacing,\n    spacing: lineConfig.initialSpacing,\n    curved: lineConfig.curved || defaultLineConfig.curved,\n    curvature: (_lineConfig$curvature = lineConfig.curvature) != null ? _lineConfig$curvature : defaultLineConfig.curvature,\n    curveType: (_lineConfig$curveType = lineConfig.curveType) != null ? _lineConfig$curveType : defaultLineConfig.curveType,\n    isAnimated: lineConfig.isAnimated || defaultLineConfig.isAnimated,\n    animationDuration: lineConfig.animationDuration || defaultLineConfig.animationDuration,\n    thickness: lineConfig.thickness || defaultLineConfig.thickness,\n    color: lineConfig.color || defaultLineConfig.color,\n    hideDataPoints: lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n    dataPointsShape: lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n    dataPointsHeight: lineConfig.dataPointsHeight || defaultLineConfig.dataPointsHeight,\n    dataPointsWidth: lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n    dataPointsColor: lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n    dataPointsRadius: lineConfig.dataPointsRadius || defaultLineConfig.dataPointsRadius,\n    textColor: lineConfig.textColor || defaultLineConfig.textColor,\n    textFontSize: lineConfig.textFontSize || defaultLineConfig.textFontSize,\n    textShiftX: lineConfig.textShiftX || defaultLineConfig.textShiftX,\n    textShiftY: lineConfig.textShiftY || defaultLineConfig.textShiftY,\n    shiftX: lineConfig.shiftX || defaultLineConfig.shiftX,\n    shiftY: lineConfig.shiftY || defaultLineConfig.shiftY,\n    delay: lineConfig.delay || defaultLineConfig.delay,\n    startIndex: lineConfig.startIndex || defaultLineConfig.startIndex,\n    endIndex: lineConfig.endIndex === 0 ? 0 : lineConfig.endIndex || defaultLineConfig.endIndex,\n    showArrow: (_lineConfig$showArrow = lineConfig.showArrow) != null ? _lineConfig$showArrow : defaultLineConfig.showArrow,\n    arrowConfig: {\n      length: (_lineConfig$arrowConf = (_lineConfig$arrowConf2 = lineConfig.arrowConfig) == null ? void 0 : _lineConfig$arrowConf2.length) != null ? _lineConfig$arrowConf : (_defaultLineConfig$ar = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar.length,\n      width: (_lineConfig$arrowConf3 = (_lineConfig$arrowConf4 = lineConfig.arrowConfig) == null ? void 0 : _lineConfig$arrowConf4.width) != null ? _lineConfig$arrowConf3 : (_defaultLineConfig$ar2 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar2.width,\n      strokeWidth: (_lineConfig$arrowConf5 = (_lineConfig$arrowConf6 = lineConfig.arrowConfig) == null ? void 0 : _lineConfig$arrowConf6.strokeWidth) != null ? _lineConfig$arrowConf5 : (_defaultLineConfig$ar3 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar3.strokeWidth,\n      strokeColor: (_lineConfig$arrowConf7 = (_lineConfig$arrowConf8 = lineConfig.arrowConfig) == null ? void 0 : _lineConfig$arrowConf8.strokeColor) != null ? _lineConfig$arrowConf7 : (_defaultLineConfig$ar4 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar4.strokeColor,\n      fillColor: (_lineConfig$arrowConf9 = (_lineConfig$arrowConf10 = lineConfig.arrowConfig) == null ? void 0 : _lineConfig$arrowConf10.fillColor) != null ? _lineConfig$arrowConf9 : (_defaultLineConfig$ar5 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar5.fillColor,\n      showArrowBase: (_lineConfig$arrowConf11 = (_lineConfig$arrowConf12 = lineConfig.arrowConfig) == null ? void 0 : _lineConfig$arrowConf12.showArrowBase) != null ? _lineConfig$arrowConf11 : (_defaultLineConfig$ar6 = defaultLineConfig.arrowConfig) == null ? void 0 : _defaultLineConfig$ar6.showArrowBase\n    },\n    customDataPoint: lineConfig.customDataPoint,\n    isSecondary: (_lineConfig$isSeconda = lineConfig.isSecondary) != null ? _lineConfig$isSeconda : defaultLineConfig.isSecondary\n  };\n};\nexport var isValueSumZeroForStackBottom = function isValueSumZeroForStackBottom(item, index) {\n  var stacks = item.stacks;\n  var isValueSumZero = true;\n  for (var i = 0; i < index; i++) {\n    if (stacks[i].value) {\n      isValueSumZero = false;\n      break;\n    }\n  }\n  return isValueSumZero;\n};\nexport var isValueSumZeroForStackTop = function isValueSumZeroForStackTop(item, index) {\n  var stacks = item.stacks;\n  var isValueSumZero = true;\n  for (var i = stacks.length - 1; i > index; i--) {\n    if (stacks[i].value) {\n      isValueSumZero = false;\n      break;\n    }\n  }\n  return isValueSumZero;\n};","map":{"version":3,"names":["RANGE_ENTER","RANGE_EXIT","STOP","defaultLineConfig","loc","CurveType","getCumulativeWidth","data","index","spacing","cumWidth","i","barWidth","getLighterColor","color","r","g","b","lighter","startsWith","length","parseInt","toString","svgQuadraticCurvePath","points","path","xMid","yMid","cpX1","cpX2","svgPath","curveType","curvature","QUADRATIC","d","reduce","acc","point","a","bezierCommand","line","pointA","pointB","lengthX","lengthY","Math","sqrt","pow","angle","atan2","controlPoint","current","previous","next","reverse","p","n","smoothing","o","PI","x","cos","y","sin","_controlPoint","_controlPoint2","_slicedToArray","cpsX","cpsY","_controlPoint3","_controlPoint4","cpeX","cpeY","getSegmentString","lineSegment","startDelimeter","endDelimeter","segment","find","startIndex","JSON","stringify","getCurvePathWithSegments","newPath","pathArray","split","_loop","getPreviousSegmentsLastPoint","isCurved","previousSegment","prevSegmentLastPoint","substring","trim","lastIndexOf","replace","getPathWithHighlight","highlightedRange","endIndex","getX","getY","from","to","currentPointRegion","value","DOWN","UP","IN","nextPointRegion","x1","y1","x2","y2","m","prefix","getRegionPathObjects","currentLineThickness","thickness","strokeDashArray","stop","ar","tempStr","lineSvgProps","indexOf","strokeWidth","push","includes","_segmentConfig$color","_segmentConfig$thickn","startDelimeterIndex","stopIndex","endDelimeterIndex","segmentConfigString","segmentConfig","parse","moveToLastPointOfPreviousSegment","nextDelimiterIndex","stringUptoNextSegment","shift","getSegmentedPathObjects","_segmentConfig$color2","_segmentConfig$thickn2","segmentLength","c","s","getArrowPoints","arrowTipX","arrowTipY","arrowLength","arrowWidth","showArrowBase","dataLineSlope","d2","interSectionX","interSectionY","arrowBasex1","arrowBaseY1","arrowBaseX2","arrowBaseY2","arrowBaseSlope","arrowPoints","getAxesAndRulesProps","props","stepValue","maxValue","_props$xAxisTextNumbe","axesAndRulesProps","yAxisSide","yAxisLabelContainerStyle","yAxisColor","yAxisThickness","xAxisColor","xAxisLength","xAxisType","xAxisTextNumberOfLines","xAxisLabelsHeight","xAxisLabelsVerticalShift","dashWidth","dashGap","backgroundColor","hideRules","rulesLength","rulesType","rulesThickness","rulesColor","rulesConfigArray","showYAxisIndices","yAxisIndicesHeight","yAxisIndicesWidth","yAxisIndicesColor","hideOrigin","hideYAxisText","yAxisTextNumberOfLines","yAxisLabelPrefix","yAxisLabelSuffix","yAxisTextStyle","referenceLinesConfig","showReferenceLine1","referenceLine1Position","referenceLine1Config","showReferenceLine2","referenceLine2Position","referenceLine2Config","showReferenceLine3","referenceLine3Position","referenceLine3Config","showVerticalLines","verticalLinesThickness","verticalLinesHeight","verticalLinesColor","verticalLinesShift","verticalLinesZIndex","verticalLinesSpacing","noOfVerticalLines","verticalLinesUptoDataPoint","roundToDigits","secondaryYAxis","formatYLabel","undefined","_objectSpread","getExtendedContainerHeightWithPadding","containerHeight","overflowTop","getSecondaryDataWithOffsetIncluded","secondaryData","yAxisOffset","map","item","_secondaryYAxis$yAxis","getArrowProperty","property","count","defaultArrowConfig","_ref","_props","_props2","_props3","getAllArrowProperties","_props$dataSet","_props$dataSet2","_props$dataSet3","_props$dataSet4","_props$dataSet5","_props$dataSet6","arrowLength1","arrowWidth1","arrowStrokeWidth1","arrowStrokeColor1","arrowFillColor1","showArrowBase1","arrowLength2","arrowWidth2","arrowStrokeWidth2","arrowStrokeColor2","arrowFillColor2","showArrowBase2","arrowLength3","arrowWidth3","arrowStrokeWidth3","arrowStrokeColor3","arrowFillColor3","showArrowBase3","arrowLength4","arrowWidth4","arrowStrokeWidth4","arrowStrokeColor4","arrowFillColor4","showArrowBase4","arrowLength5","arrowWidth5","arrowStrokeWidth5","arrowStrokeColor5","arrowFillColor5","showArrowBase5","arrowLengthsFromSet","dataSet","_item$arrowConfig$len","_item$arrowConfig","arrowConfig","arrowWidthsFromSet","_item$arrowConfig$arr","_item$arrowConfig2","arrowStrokeWidthsFromSet","_item$arrowConfig$arr2","_item$arrowConfig3","arrowStrokeWidth","arrowStrokeColorsFromSet","_item$arrowConfig$arr3","_item$arrowConfig4","arrowStrokeColor","arrowFillColorsFromSet","_item$arrowConfig$arr4","_item$arrowConfig5","arrowFillColor","showArrowBasesFromSet","_item$arrowConfig$sho","_item$arrowConfig6","maxAndMinUtil","maxItem","minItem","showFractionalValues","parseFloat","toFixed","computeMaxAndMinItems","forEach","getLabelTextUtil","val","yAxisLabelTexts","label","isNaN","Number","_yAxisOffset$toString","_yAxisOffset$toString2","getXForLineInBar","firstBarWidth","currentBarWidth","yAxisLabelWidth","lineConfig","_lineConfig$spacing","initialSpacing","shiftX","dataPointsWidth","getYForLineInBar","shiftY","clone","obj","temp","Date","constructor","key","Object","prototype","hasOwnProperty","call","getLineConfigForBarChart","_lineConfig$initialSp","_lineConfig$curvature","_lineConfig$curveType","_lineConfig$showArrow","_lineConfig$arrowConf","_lineConfig$arrowConf2","_defaultLineConfig$ar","_lineConfig$arrowConf3","_lineConfig$arrowConf4","_defaultLineConfig$ar2","_lineConfig$arrowConf5","_lineConfig$arrowConf6","_defaultLineConfig$ar3","_lineConfig$arrowConf7","_lineConfig$arrowConf8","_defaultLineConfig$ar4","_lineConfig$arrowConf9","_lineConfig$arrowConf10","_defaultLineConfig$ar5","_lineConfig$arrowConf11","_lineConfig$arrowConf12","_defaultLineConfig$ar6","_lineConfig$isSeconda","curved","isAnimated","animationDuration","hideDataPoints","dataPointsShape","dataPointsHeight","dataPointsColor","dataPointsRadius","textColor","textFontSize","textShiftX","textShiftY","delay","showArrow","width","strokeColor","fillColor","customDataPoint","isSecondary","isValueSumZeroForStackBottom","stacks","isValueSumZero","isValueSumZeroForStackTop"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/node_modules/react-native-gifted-charts/src/utils/index.tsx"],"sourcesContent":["import {stackItemType} from '../BarChart/types';\nimport {\n  RANGE_ENTER,\n  RANGE_EXIT,\n  STOP,\n  defaultLineConfig,\n  loc,\n} from './constants';\nimport {arrowConfigType, CurveType, LineProperties, LineSegment} from './types';\n\nexport const getCumulativeWidth = (\n  data: any,\n  index: number,\n  spacing: number,\n) => {\n  let cumWidth = 0;\n  for (let i = 0; i < index; i++) {\n    let {barWidth} = data[i];\n    barWidth = barWidth || 30;\n    cumWidth += barWidth + (spacing ?? 20);\n  }\n  return cumWidth;\n};\n\nexport const getLighterColor = (color: String) => {\n  let r,\n    g,\n    b,\n    lighter = '#';\n  if (color.startsWith('#')) {\n    if (color.length < 7) {\n      r = parseInt(color[1], 16);\n      g = parseInt(color[2], 16);\n      b = parseInt(color[3], 16);\n      if (r < 14) {\n        r += 2;\n        lighter += r.toString(16);\n      }\n      if (g < 14) {\n        g += 2;\n        lighter += g.toString(16);\n      }\n      if (b < 14) {\n        b += 2;\n        lighter += b.toString(16);\n      }\n    } else {\n      r = parseInt(color[1] + color[2], 16);\n      g = parseInt(color[3] + color[4], 16);\n      b = parseInt(color[5] + color[6], 16);\n\n      if (r < 224) {\n        r += 32;\n        lighter += r.toString(16);\n      }\n      if (g < 224) {\n        g += 32;\n        lighter += g.toString(16);\n      }\n      if (b < 224) {\n        b += 32;\n        lighter += b.toString(16);\n      }\n    }\n  }\n  return lighter;\n};\n\nexport const svgQuadraticCurvePath = points => {\n  let path = 'M' + points[0][0] + ',' + points[0][1];\n\n  for (let i = 0; i < points.length - 1; i++) {\n    const xMid = (points[i][0] + points[i + 1][0]) / 2;\n    const yMid = (points[i][1] + points[i + 1][1]) / 2;\n    const cpX1 = (xMid + points[i][0]) / 2;\n    const cpX2 = (xMid + points[i + 1][0]) / 2;\n    path +=\n      'Q ' +\n      cpX1 +\n      ', ' +\n      points[i][1] +\n      ', ' +\n      xMid +\n      ', ' +\n      yMid +\n      (' Q ' +\n        cpX2 +\n        ', ' +\n        points[i + 1][1] +\n        ', ' +\n        points[i + 1][0] +\n        ', ' +\n        points[i + 1][1]);\n  }\n\n  return path;\n};\n\nexport const svgPath = (\n  points: Array<Array<number>>,\n  curveType: CurveType,\n  curvature: number,\n) => {\n  if (!points?.length) return '';\n  if (curveType === CurveType.QUADRATIC) {\n    return svgQuadraticCurvePath(points);\n  }\n  // build the d attributes by looping over the points\n  const d = points.reduce(\n    (acc, point, i, a) =>\n      i === 0\n        ? // if first point\n          `M${point[0]},${point[1]}`\n        : // else\n          `${acc} ${bezierCommand(point, i, a, curvature)}`,\n    '',\n  );\n  return d;\n};\n\nconst line = (pointA: Array<number>, pointB: Array<number>) => {\n  const lengthX = pointB[0] - pointA[0];\n  const lengthY = pointB[1] - pointA[1];\n  return {\n    length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\n    angle: Math.atan2(lengthY, lengthX),\n  };\n};\n\nconst controlPoint = (\n  curvature: number,\n  current: Array<number>,\n  previous: Array<number>,\n  next: Array<number>,\n  reverse?: any,\n) => {\n  // When 'current' is the first or last point of the array\n  // 'previous' or 'next' don't exist.\n  // Replace with 'current'\n  const p = previous || current;\n  const n = next || current;\n  // The smoothing ratio\n  const smoothing = curvature;\n  // Properties of the opposed-line\n  const o = line(p, n);\n  // If is end-control-point, add PI to the angle to go backward\n  const angle = o.angle + (reverse ? Math.PI : 0);\n  const length = o.length * smoothing;\n  // The control point position is relative to the current point\n  const x = current[0] + Math.cos(angle) * length;\n  const y = current[1] + Math.sin(angle) * length;\n  return [x, y];\n};\n\nexport const bezierCommand = (\n  point: Array<number>,\n  i: number,\n  a: Array<Array<number>>,\n  curvature: number,\n) => {\n  // start control point\n  const [cpsX, cpsY] = controlPoint(curvature, a[i - 1], a[i - 2], point);\n  // end control point\n  const [cpeX, cpeY] = controlPoint(curvature, point, a[i - 1], a[i + 1], true);\n  return `C${cpsX},${cpsY} ${cpeX},${cpeY} ${point[0]},${point[1]}`;\n};\n\nexport const getSegmentString = (\n  lineSegment,\n  index,\n  startDelimeter,\n  endDelimeter,\n) => {\n  const segment = lineSegment?.find(segment => segment.startIndex === index);\n  return segment ? startDelimeter + JSON.stringify(segment) + endDelimeter : '';\n};\n\nexport const getCurvePathWithSegments = (\n  path: string,\n  lineSegment: LineSegment[] | undefined,\n  startDelimeter,\n  endDelimeter,\n) => {\n  if (!lineSegment?.length) return path;\n  let newPath = '';\n  const pathArray = path.split('C');\n  for (let i = 0; i < pathArray.length; i++) {\n    const segment = lineSegment?.find(segment => segment.startIndex === i);\n    newPath +=\n      (pathArray[i].startsWith('M') ? '' : 'C') +\n      pathArray[i] +\n      (segment ? startDelimeter + JSON.stringify(segment) + endDelimeter : '');\n  }\n  return newPath;\n};\n\nexport const getPreviousSegmentsLastPoint = (isCurved, previousSegment) => {\n  const prevSegmentLastPoint = isCurved\n    ? previousSegment.substring(previousSegment.trim().lastIndexOf(' '))\n    : previousSegment\n        .substring(previousSegment.lastIndexOf('L'))\n        .replace('L', 'M');\n\n  return (\n    (prevSegmentLastPoint.trim()[0] === 'M' ? '' : 'M') + prevSegmentLastPoint\n  );\n};\n\nexport const getPathWithHighlight = (\n  data,\n  i,\n  highlightedRange,\n  startIndex,\n  endIndex,\n  getX,\n  getY,\n) => {\n  let path = '';\n  const {from, to} = highlightedRange;\n  const currentPointRegion =\n    data[i].value < from ? loc.DOWN : data[i].value > to ? loc.UP : loc.IN;\n\n  if (i !== endIndex) {\n    const nextPointRegion =\n      data[i + 1].value < from\n        ? loc.DOWN\n        : data[i + 1].value > to\n        ? loc.UP\n        : loc.IN;\n    if (\n      currentPointRegion !== nextPointRegion ||\n      (i === startIndex && currentPointRegion === loc.IN)\n    ) {\n      const x1 = getX(i),\n        y1 = getY(data[i].value),\n        x2 = getX(i + 1),\n        y2 = getY(data[i + 1].value);\n\n      let m = (y2 - y1) / (x2 - x1),\n        x,\n        y;\n      if (i === startIndex && currentPointRegion === loc.IN) {\n        // If the 1st point lies IN\n        y = y1;\n        x = x1;\n\n        path +=\n          'L' +\n          x +\n          ' ' +\n          y +\n          ' ' +\n          RANGE_ENTER +\n          JSON.stringify(highlightedRange) +\n          STOP;\n\n        if (nextPointRegion === loc.UP) {\n          y = getY(to);\n          x = (y - y1) / m + x1;\n\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        } else if (nextPointRegion === loc.DOWN) {\n          y = getY(from);\n          x = (y - y1) / m + x1;\n\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        }\n      } else if (currentPointRegion !== nextPointRegion) {\n        if (currentPointRegion === loc.DOWN && nextPointRegion === loc.UP) {\n          // if current point is in DOWN and next point is in UP, then we will add 2 points to the the path\n          y = getY(from);\n          x = (y - y1) / m + x1;\n\n          path +=\n            'L' +\n            x +\n            ' ' +\n            y +\n            ' ' +\n            RANGE_ENTER +\n            JSON.stringify(highlightedRange) +\n            STOP;\n          y = getY(to);\n          x = (y - y1) / m + x1;\n\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        } else if (\n          currentPointRegion === loc.UP &&\n          nextPointRegion === loc.DOWN\n        ) {\n          // if current point is in UP and next point is in DOWN, then we will add 2 points to the the path\n          y = getY(to);\n          x = (y - y1) / m + x1;\n\n          path +=\n            'L' +\n            x +\n            ' ' +\n            y +\n            ' ' +\n            RANGE_ENTER +\n            JSON.stringify(highlightedRange) +\n            STOP;\n          y = getY(from);\n          x = (y - y1) / m + x1;\n\n          path += 'L' + x + ' ' + y + ' ' + RANGE_EXIT;\n        } else {\n          if (\n            (currentPointRegion === loc.UP && nextPointRegion === loc.IN) ||\n            (currentPointRegion === loc.IN && nextPointRegion === loc.UP)\n          ) {\n            y = getY(to);\n          } else if (\n            (currentPointRegion === loc.IN && nextPointRegion === loc.DOWN) ||\n            (currentPointRegion === loc.DOWN && nextPointRegion === loc.IN)\n          ) {\n            y = getY(from);\n          }\n          m = (y2 - y1) / (x2 - x1);\n          x = (y - y1) / m + x1;\n\n          const prefix =\n            nextPointRegion === loc.IN\n              ? RANGE_ENTER + JSON.stringify(highlightedRange) + STOP\n              : RANGE_EXIT;\n\n          path += 'L' + x + ' ' + y + ' ' + prefix;\n        }\n      }\n    }\n  } else if (currentPointRegion === loc.IN) {\n    // If the last point lies IN, add RANGE_EXIT\n    path += RANGE_EXIT;\n  }\n\n  return path;\n};\n\nexport const getRegionPathObjects = (\n  points,\n  color,\n  currentLineThickness,\n  thickness,\n  strokeDashArray,\n  isCurved,\n  startDelimeter,\n  stop,\n  endDelimeter,\n) => {\n  const ar: [any] = [{}];\n  let tempStr = points;\n\n  if (!points.startsWith(startDelimeter)) {\n    /**********************            line upto first segment                 *****************/\n\n    const lineSvgProps: LineProperties = {\n      d: points.substring(0, points.indexOf(startDelimeter)),\n      color,\n      strokeWidth: currentLineThickness || thickness,\n    };\n    if (strokeDashArray) {\n      lineSvgProps.strokeDashArray = strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n  }\n\n  while (tempStr.includes(startDelimeter)) {\n    const startDelimeterIndex = tempStr.indexOf(startDelimeter);\n    const stopIndex = tempStr.indexOf(stop);\n    const endDelimeterIndex = tempStr.indexOf(endDelimeter);\n\n    const segmentConfigString = tempStr.substring(\n      startDelimeterIndex + startDelimeter.length,\n      stopIndex,\n    );\n\n    const segmentConfig = JSON.parse(segmentConfigString);\n\n    let segment = tempStr.substring(stopIndex + stop.length, endDelimeterIndex);\n\n    const previousSegment = ar[ar.length - 1].d;\n    const moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(\n      isCurved,\n      previousSegment,\n    );\n\n    /**********************            segment line                 *****************/\n\n    const lineSvgProps: LineProperties = {\n      d: moveToLastPointOfPreviousSegment + segment,\n      color: segmentConfig.color ?? color,\n      strokeWidth:\n        segmentConfig.thickness ?? (currentLineThickness || thickness),\n    };\n    if (segmentConfig.strokeDashArray) {\n      lineSvgProps.strokeDashArray = segmentConfig.strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n\n    tempStr = tempStr.substring(endDelimeterIndex + endDelimeter.length);\n\n    const nextDelimiterIndex = tempStr.indexOf(startDelimeter);\n    const stringUptoNextSegment = tempStr.substring(0, nextDelimiterIndex);\n\n    /**********************            line upto the next segment            *****************/\n\n    if (\n      nextDelimiterIndex !== -1 &&\n      stringUptoNextSegment.indexOf(isCurved ? 'C' : 'L') !== -1\n    ) {\n      const previousSegment = ar[ar.length - 1].d;\n      const moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(\n        isCurved,\n        previousSegment,\n      );\n      const lineSvgProps: LineProperties = {\n        d: moveToLastPointOfPreviousSegment + ' ' + stringUptoNextSegment,\n        color,\n        strokeWidth: currentLineThickness || thickness,\n      };\n      if (strokeDashArray) {\n        lineSvgProps.strokeDashArray = strokeDashArray;\n      }\n      ar.push(lineSvgProps);\n    }\n  }\n\n  /**********************            line after the last segment            *****************/\n\n  if (tempStr.length) {\n    const previousSegment = ar[ar.length - 1].d;\n    const moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(\n      isCurved,\n      previousSegment,\n    );\n    const lineSvgProps: LineProperties = {\n      d: moveToLastPointOfPreviousSegment + tempStr,\n      color,\n      strokeWidth: currentLineThickness || thickness,\n    };\n    if (strokeDashArray) {\n      lineSvgProps.strokeDashArray = strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n  }\n\n  ar.shift();\n  return ar;\n};\n\nexport const getSegmentedPathObjects = (\n  points,\n  color,\n  currentLineThickness,\n  thickness,\n  strokeDashArray,\n  isCurved,\n  startDelimeter,\n  endDelimeter,\n) => {\n  const ar: [any] = [{}];\n  let tempStr = points;\n\n  if (!points.startsWith(startDelimeter)) {\n    /**********************            line upto first segment                 *****************/\n\n    const lineSvgProps: LineProperties = {\n      d: points.substring(0, points.indexOf(startDelimeter)),\n      color,\n      strokeWidth: currentLineThickness || thickness,\n    };\n    if (strokeDashArray) {\n      lineSvgProps.strokeDashArray = strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n  }\n\n  while (tempStr.includes(startDelimeter)) {\n    const startDelimeterIndex = tempStr.indexOf(startDelimeter);\n    const endDelimeterIndex = tempStr.indexOf(endDelimeter);\n\n    const segmentConfigString = tempStr.substring(\n      startDelimeterIndex + startDelimeter.length,\n      endDelimeterIndex,\n    );\n\n    const segmentConfig = JSON.parse(segmentConfigString);\n\n    const {startIndex, endIndex} = segmentConfig;\n    const segmentLength = endIndex - startIndex;\n    let segment = tempStr.substring(endDelimeterIndex + endDelimeter.length);\n    let c = 0,\n      s = 0,\n      i;\n    for (i = 0; i < segment.length; i++) {\n      if (segment[i] === (isCurved ? 'C' : 'L')) c++;\n      if (c === segmentLength) {\n        if (segment[i] === ' ') s++;\n        if (s === (isCurved ? 3 : 2)) break;\n      }\n    }\n    segment = segment.substring(0, i);\n\n    const previousSegment = ar[ar.length - 1].d;\n    const moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(\n      isCurved,\n      previousSegment,\n    );\n\n    /**********************            segment line                 *****************/\n\n    const lineSvgProps: LineProperties = {\n      d: moveToLastPointOfPreviousSegment + segment,\n      color: segmentConfig.color ?? color,\n      strokeWidth:\n        segmentConfig.thickness ?? (currentLineThickness || thickness),\n    };\n    if (segmentConfig.strokeDashArray) {\n      lineSvgProps.strokeDashArray = segmentConfig.strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n\n    tempStr = tempStr.substring(endDelimeterIndex + endDelimeter.length + i);\n\n    const nextDelimiterIndex = tempStr.indexOf(startDelimeter);\n    const stringUptoNextSegment = tempStr.substring(0, nextDelimiterIndex);\n\n    /**********************            line upto the next segment            *****************/\n\n    if (\n      nextDelimiterIndex !== -1 &&\n      stringUptoNextSegment.indexOf(isCurved ? 'C' : 'L') !== -1\n    ) {\n      const previousSegment = ar[ar.length - 1].d;\n      const moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(\n        isCurved,\n        previousSegment,\n      );\n      const lineSvgProps: LineProperties = {\n        d: moveToLastPointOfPreviousSegment + ' ' + stringUptoNextSegment,\n        color,\n        strokeWidth: currentLineThickness || thickness,\n      };\n      if (strokeDashArray) {\n        lineSvgProps.strokeDashArray = strokeDashArray;\n      }\n      ar.push(lineSvgProps);\n    }\n  }\n\n  /**********************            line after the last segment            *****************/\n\n  if (tempStr.length) {\n    const previousSegment = ar[ar.length - 1].d;\n    const moveToLastPointOfPreviousSegment = getPreviousSegmentsLastPoint(\n      isCurved,\n      previousSegment,\n    );\n    const lineSvgProps: LineProperties = {\n      d: moveToLastPointOfPreviousSegment + tempStr,\n      color,\n      strokeWidth: currentLineThickness || thickness,\n    };\n    if (strokeDashArray) {\n      lineSvgProps.strokeDashArray = strokeDashArray;\n    }\n    ar.push(lineSvgProps);\n  }\n\n  ar.shift();\n  return ar;\n};\n\nexport const getArrowPoints = (\n  arrowTipX: number,\n  arrowTipY: number,\n  x1: number,\n  y1: number,\n  arrowLength?: number,\n  arrowWidth?: number,\n  showArrowBase?: boolean,\n) => {\n  let dataLineSlope = (arrowTipY - y1) / (arrowTipX - x1);\n  let d = arrowLength ?? 0;\n  let d2 = (arrowWidth ?? 0) / 2;\n  let interSectionX =\n    arrowTipX - Math.sqrt((d * d) / (dataLineSlope * dataLineSlope + 1));\n  let interSectionY = arrowTipY - dataLineSlope * (arrowTipX - interSectionX);\n\n  let arrowBasex1, arrowBaseY1, arrowBaseX2, arrowBaseY2;\n  if (dataLineSlope === 0) {\n    arrowBasex1 = interSectionX;\n    arrowBaseY1 = interSectionY - d2;\n    arrowBaseX2 = interSectionX;\n    arrowBaseY2 = interSectionY + d2;\n  } else {\n    let arrowBaseSlope = -1 / dataLineSlope;\n    arrowBasex1 =\n      interSectionX -\n      Math.sqrt((d2 * d2) / (arrowBaseSlope * arrowBaseSlope + 1));\n    arrowBaseY1 =\n      interSectionY - arrowBaseSlope * (interSectionX - arrowBasex1);\n\n    arrowBaseX2 =\n      interSectionX +\n      Math.sqrt((d2 * d2) / (arrowBaseSlope * arrowBaseSlope + 1));\n    arrowBaseY2 =\n      interSectionY + arrowBaseSlope * (interSectionX - arrowBasex1);\n  }\n  let arrowPoints = ` M${interSectionX} ${interSectionY}`;\n  arrowPoints += ` ${showArrowBase ? 'L' : 'M'}${arrowBasex1} ${arrowBaseY1}`;\n  arrowPoints += ` L${arrowTipX} ${arrowTipY}`;\n  arrowPoints += ` M${interSectionX} ${interSectionY}`;\n  arrowPoints += ` ${showArrowBase ? 'L' : 'M'}${arrowBaseX2} ${arrowBaseY2}`;\n  arrowPoints += ` L${arrowTipX} ${arrowTipY}`;\n\n  return arrowPoints;\n};\n\nexport const getAxesAndRulesProps = (\n  props: any,\n  stepValue: number,\n  maxValue?: number,\n) => {\n  const axesAndRulesProps = {\n    yAxisSide: props.yAxisSide,\n    yAxisLabelContainerStyle: props.yAxisLabelContainerStyle,\n    yAxisColor: props.yAxisColor,\n    yAxisThickness: props.yAxisThickness,\n    xAxisColor: props.xAxisColor,\n    xAxisLength: props.xAxisLength,\n    xAxisType: props.xAxisType,\n    xAxisTextNumberOfLines: props.xAxisTextNumberOfLines ?? 1,\n    xAxisLabelsHeight: props.xAxisLabelsHeight,\n    xAxisLabelsVerticalShift: props.xAxisLabelsVerticalShift,\n    dashWidth: props.dashWidth,\n    dashGap: props.dashGap,\n    backgroundColor: props.backgroundColor,\n    hideRules: props.hideRules,\n    rulesLength: props.rulesLength,\n    rulesType: props.rulesType,\n    rulesThickness: props.rulesThickness,\n    rulesColor: props.rulesColor,\n    rulesConfigArray: props.rulesConfigArray,\n    showYAxisIndices: props.showYAxisIndices,\n    yAxisIndicesHeight: props.yAxisIndicesHeight,\n    yAxisIndicesWidth: props.yAxisIndicesWidth,\n    yAxisIndicesColor: props.yAxisIndicesColor,\n    hideOrigin: props.hideOrigin,\n    hideYAxisText: props.hideYAxisText,\n    yAxisTextNumberOfLines: props.yAxisTextNumberOfLines,\n    yAxisLabelPrefix: props.yAxisLabelPrefix,\n    yAxisLabelSuffix: props.yAxisLabelSuffix,\n    yAxisTextStyle: props.yAxisTextStyle,\n\n    referenceLinesConfig: {\n      showReferenceLine1: props.showReferenceLine1,\n      referenceLine1Position: props.referenceLine1Position,\n      referenceLine1Config: props.referenceLine1Config,\n      showReferenceLine2: props.showReferenceLine2,\n      referenceLine2Position: props.referenceLine2Position,\n      referenceLine2Config: props.referenceLine2Config,\n      showReferenceLine3: props.showReferenceLine3,\n      referenceLine3Position: props.referenceLine3Position,\n      referenceLine3Config: props.referenceLine3Config,\n    },\n\n    showVerticalLines: props.showVerticalLines,\n    verticalLinesThickness: props.verticalLinesThickness,\n    verticalLinesHeight: props.verticalLinesHeight,\n    verticalLinesColor: props.verticalLinesColor,\n    verticalLinesShift: props.verticalLinesShift,\n    verticalLinesZIndex: props.verticalLinesZIndex,\n    verticalLinesSpacing: props.verticalLinesSpacing,\n    noOfVerticalLines: props.noOfVerticalLines,\n\n    //specific to Line charts-\n    verticalLinesUptoDataPoint: props.verticalLinesUptoDataPoint,\n\n    roundToDigits: props.roundToDigits,\n    stepValue,\n\n    secondaryYAxis: props.secondaryYAxis,\n    formatYLabel: props.formatYLabel,\n  };\n  if (props.secondaryYAxis && maxValue !== undefined) {\n    axesAndRulesProps.secondaryYAxis = {...props.secondaryYAxis, maxValue};\n  }\n\n  return axesAndRulesProps;\n};\n\nexport const getExtendedContainerHeightWithPadding = (\n  containerHeight: number,\n  overflowTop?: number,\n) => containerHeight + (overflowTop ?? 0) + 10;\n\nexport const getSecondaryDataWithOffsetIncluded = (\n  secondaryData?: any,\n  secondaryYAxis?: any,\n) => {\n  if (secondaryData && secondaryYAxis?.yAxisOffset) {\n    return secondaryData?.map(item => {\n      item.value = item.value - (secondaryYAxis?.yAxisOffset ?? 0);\n      return item;\n    });\n  }\n  return secondaryData;\n};\n\nexport const getArrowProperty = (\n  property: string,\n  count: number,\n  props: any,\n  defaultArrowConfig: arrowConfigType,\n) => {\n  return (\n    props[`arrowConfig${count}`]?.[`${property}`] ??\n    props[`arrowConfig`]?.[`${property}`] ??\n    defaultArrowConfig[`${property}`]\n  );\n};\n\nexport const getAllArrowProperties = (\n  props: any,\n  defaultArrowConfig: arrowConfigType,\n) => {\n  const arrowLength1 = getArrowProperty('length', 1, props, defaultArrowConfig);\n  const arrowWidth1 = getArrowProperty('width', 1, props, defaultArrowConfig);\n  const arrowStrokeWidth1 = getArrowProperty(\n    'strokeWidth',\n    1,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowStrokeColor1 = getArrowProperty(\n    'strokeColor',\n    1,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowFillColor1 = getArrowProperty(\n    'fillColor',\n    1,\n    props,\n    defaultArrowConfig,\n  );\n  const showArrowBase1 = getArrowProperty(\n    'showArrowBase',\n    1,\n    props,\n    defaultArrowConfig,\n  );\n\n  const arrowLength2 = getArrowProperty('length', 2, props, defaultArrowConfig);\n  const arrowWidth2 = getArrowProperty('width', 2, props, defaultArrowConfig);\n  const arrowStrokeWidth2 = getArrowProperty(\n    'strokeWidth',\n    2,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowStrokeColor2 = getArrowProperty(\n    'strokeColor',\n    2,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowFillColor2 = getArrowProperty(\n    'fillColor',\n    2,\n    props,\n    defaultArrowConfig,\n  );\n  const showArrowBase2 = getArrowProperty(\n    'showArrowBase',\n    2,\n    props,\n    defaultArrowConfig,\n  );\n\n  const arrowLength3 = getArrowProperty('length', 3, props, defaultArrowConfig);\n  const arrowWidth3 = getArrowProperty('width', 3, props, defaultArrowConfig);\n  const arrowStrokeWidth3 = getArrowProperty(\n    'strokeWidth',\n    3,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowStrokeColor3 = getArrowProperty(\n    'strokeColor',\n    3,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowFillColor3 = getArrowProperty(\n    'fillColor',\n    3,\n    props,\n    defaultArrowConfig,\n  );\n  const showArrowBase3 = getArrowProperty(\n    'showArrowBase',\n    3,\n    props,\n    defaultArrowConfig,\n  );\n\n  const arrowLength4 = getArrowProperty('length', 4, props, defaultArrowConfig);\n  const arrowWidth4 = getArrowProperty('width', 4, props, defaultArrowConfig);\n  const arrowStrokeWidth4 = getArrowProperty(\n    'strokeWidth',\n    4,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowStrokeColor4 = getArrowProperty(\n    'strokeColor',\n    4,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowFillColor4 = getArrowProperty(\n    'fillColor',\n    4,\n    props,\n    defaultArrowConfig,\n  );\n  const showArrowBase4 = getArrowProperty(\n    'showArrowBase',\n    4,\n    props,\n    defaultArrowConfig,\n  );\n\n  const arrowLength5 = getArrowProperty('length', 5, props, defaultArrowConfig);\n  const arrowWidth5 = getArrowProperty('width', 5, props, defaultArrowConfig);\n  const arrowStrokeWidth5 = getArrowProperty(\n    'strokeWidth',\n    5,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowStrokeColor5 = getArrowProperty(\n    'strokeColor',\n    5,\n    props,\n    defaultArrowConfig,\n  );\n  const arrowFillColor5 = getArrowProperty(\n    'fillColor',\n    5,\n    props,\n    defaultArrowConfig,\n  );\n  const showArrowBase5 = getArrowProperty(\n    'showArrowBase',\n    5,\n    props,\n    defaultArrowConfig,\n  );\n\n  const arrowLengthsFromSet = props.dataSet?.map(\n    item => item?.arrowConfig?.length ?? arrowLength1,\n  );\n  const arrowWidthsFromSet = props.dataSet?.map(\n    item => item?.arrowConfig?.arrowWidth ?? arrowWidth1,\n  );\n  const arrowStrokeWidthsFromSet = props.dataSet?.map(\n    item => item?.arrowConfig?.arrowStrokeWidth ?? arrowStrokeWidth1,\n  );\n  const arrowStrokeColorsFromSet = props.dataSet?.map(\n    item => item?.arrowConfig?.arrowStrokeColor ?? arrowStrokeColor1,\n  );\n  const arrowFillColorsFromSet = props.dataSet?.map(\n    item => item?.arrowConfig?.arrowFillColor ?? arrowFillColor1,\n  );\n  const showArrowBasesFromSet = props.dataSet?.map(\n    item => item?.arrowConfig?.showArrowBase ?? showArrowBase1,\n  );\n\n  return {\n    arrowLength1,\n    arrowWidth1,\n    arrowStrokeWidth1,\n    arrowStrokeColor1,\n    arrowFillColor1,\n    showArrowBase1,\n    arrowLength2,\n    arrowWidth2,\n    arrowStrokeWidth2,\n    arrowStrokeColor2,\n    arrowFillColor2,\n    showArrowBase2,\n    arrowLength3,\n    arrowWidth3,\n    arrowStrokeWidth3,\n    arrowStrokeColor3,\n    arrowFillColor3,\n    showArrowBase3,\n    arrowLength4,\n    arrowWidth4,\n    arrowStrokeWidth4,\n    arrowStrokeColor4,\n    arrowFillColor4,\n    showArrowBase4,\n    arrowLength5,\n    arrowWidth5,\n    arrowStrokeWidth5,\n    arrowStrokeColor5,\n    arrowFillColor5,\n    showArrowBase5,\n    arrowLengthsFromSet,\n    arrowWidthsFromSet,\n    arrowStrokeWidthsFromSet,\n    arrowStrokeColorsFromSet,\n    arrowFillColorsFromSet,\n    showArrowBasesFromSet,\n  };\n};\n\ntype MaxAndMin = {\n  maxItem: number;\n  minItem: number;\n};\n\nexport const maxAndMinUtil = (\n  maxItem: number,\n  minItem: number,\n  roundToDigits?: number,\n  showFractionalValues?: boolean,\n): MaxAndMin => {\n  if (showFractionalValues || roundToDigits) {\n    maxItem *= 10 * (roundToDigits || 1);\n    maxItem = maxItem + (10 - (maxItem % 10));\n    maxItem /= 10 * (roundToDigits || 1);\n    maxItem = parseFloat(maxItem.toFixed(roundToDigits || 1));\n\n    if (minItem !== 0) {\n      minItem *= 10 * (roundToDigits || 1);\n      minItem = minItem - (10 + (minItem % 10));\n      minItem /= 10 * (roundToDigits || 1);\n      minItem = parseFloat(minItem.toFixed(roundToDigits || 1));\n    }\n  } else {\n    maxItem = maxItem + (10 - (maxItem % 10));\n    if (minItem !== 0) {\n      minItem = minItem - (10 + (minItem % 10));\n    }\n  }\n\n  return {maxItem, minItem};\n};\n\nexport const computeMaxAndMinItems = (\n  data: any,\n  roundToDigits?: number,\n  showFractionalValues?: boolean,\n): MaxAndMin => {\n  if (!data?.length) {\n    return {maxItem: 0, minItem: 0};\n  }\n  let maxItem = 0,\n    minItem = 0;\n\n  data.forEach((item: any) => {\n    if (item.value > maxItem) {\n      maxItem = item.value;\n    }\n    if (item.value < minItem) {\n      minItem = item.value;\n    }\n  });\n\n  return maxAndMinUtil(maxItem, minItem, roundToDigits, showFractionalValues);\n};\n\nexport const getLabelTextUtil = (\n  val: any,\n  index: number,\n  showFractionalValues?: boolean,\n  yAxisLabelTexts?: Array<string>,\n  yAxisOffset?: number,\n  yAxisLabelPrefix?: string,\n  yAxisLabelSuffix?: string,\n  roundToDigits?: number,\n  formatYLabel?: (label: string) => string,\n) => {\n  let label = '';\n  if (\n    showFractionalValues ||\n    (yAxisLabelTexts && yAxisLabelTexts[index] !== undefined)\n  ) {\n    if (yAxisLabelTexts?.[index]) return val;\n    if (val) {\n      label = isNaN(Number(val))\n        ? val\n        : (Number(val) + (yAxisOffset ?? 0)).toFixed(roundToDigits);\n    } else {\n      label = yAxisOffset?.toString() ?? '0';\n    }\n  } else {\n    if (val) {\n      label = val.toString().split('.')[0];\n      label = (Number(label) + (yAxisOffset ?? 0)).toString();\n    } else {\n      label = yAxisOffset?.toString() ?? '0';\n    }\n  }\n\n  return (\n    yAxisLabelPrefix +\n    (formatYLabel ? formatYLabel(label) : label) +\n    yAxisLabelSuffix\n  );\n};\n\nexport const getXForLineInBar = (\n  index: number,\n  firstBarWidth: number,\n  currentBarWidth: number,\n  yAxisLabelWidth: number,\n  lineConfig: any,\n  spacing: number,\n) =>\n  yAxisLabelWidth +\n  firstBarWidth / 2 +\n  lineConfig.initialSpacing +\n  (currentBarWidth + (lineConfig.spacing ?? spacing)) * index +\n  lineConfig.shiftX -\n  lineConfig.dataPointsWidth / 2 -\n  32;\n\nexport const getYForLineInBar = (value, shiftY, containerHeight, maxValue) =>\n  containerHeight - shiftY - (value * containerHeight) / maxValue;\n\nexport const clone = obj => {\n  if (obj === null || typeof obj !== 'object' || 'isActiveClone' in obj)\n    return obj;\n\n  let temp;\n  if (obj instanceof Date) temp = new Date(obj);\n  else temp = obj.constructor();\n\n  for (let key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      obj['isActiveClone'] = null;\n      temp[key] = clone(obj[key]);\n      delete obj['isActiveClone'];\n    }\n  }\n  return temp;\n};\n\nexport const getLineConfigForBarChart = lineConfig => {\n  return {\n    initialSpacing:\n      lineConfig.initialSpacing ?? defaultLineConfig.initialSpacing,\n    spacing: lineConfig.initialSpacing,\n    curved: lineConfig.curved || defaultLineConfig.curved,\n    curvature: lineConfig.curvature ?? defaultLineConfig.curvature,\n    curveType: lineConfig.curveType ?? defaultLineConfig.curveType,\n    isAnimated: lineConfig.isAnimated || defaultLineConfig.isAnimated,\n    animationDuration:\n      lineConfig.animationDuration || defaultLineConfig.animationDuration,\n    thickness: lineConfig.thickness || defaultLineConfig.thickness,\n    color: lineConfig.color || defaultLineConfig.color,\n    hideDataPoints:\n      lineConfig.hideDataPoints || defaultLineConfig.hideDataPoints,\n    dataPointsShape:\n      lineConfig.dataPointsShape || defaultLineConfig.dataPointsShape,\n    dataPointsHeight:\n      lineConfig.dataPointsHeight || defaultLineConfig.dataPointsHeight,\n    dataPointsWidth:\n      lineConfig.dataPointsWidth || defaultLineConfig.dataPointsWidth,\n    dataPointsColor:\n      lineConfig.dataPointsColor || defaultLineConfig.dataPointsColor,\n    dataPointsRadius:\n      lineConfig.dataPointsRadius || defaultLineConfig.dataPointsRadius,\n    textColor: lineConfig.textColor || defaultLineConfig.textColor,\n    textFontSize: lineConfig.textFontSize || defaultLineConfig.textFontSize,\n    textShiftX: lineConfig.textShiftX || defaultLineConfig.textShiftX,\n    textShiftY: lineConfig.textShiftY || defaultLineConfig.textShiftY,\n    shiftX: lineConfig.shiftX || defaultLineConfig.shiftX,\n    shiftY: lineConfig.shiftY || defaultLineConfig.shiftY,\n    delay: lineConfig.delay || defaultLineConfig.delay,\n    startIndex: lineConfig.startIndex || defaultLineConfig.startIndex,\n    endIndex:\n      lineConfig.endIndex === 0\n        ? 0\n        : lineConfig.endIndex || defaultLineConfig.endIndex,\n\n    showArrow: lineConfig.showArrow ?? defaultLineConfig.showArrow,\n    arrowConfig: {\n      length:\n        lineConfig.arrowConfig?.length ?? defaultLineConfig.arrowConfig?.length,\n      width:\n        lineConfig.arrowConfig?.width ?? defaultLineConfig.arrowConfig?.width,\n\n      strokeWidth:\n        lineConfig.arrowConfig?.strokeWidth ??\n        defaultLineConfig.arrowConfig?.strokeWidth,\n\n      strokeColor:\n        lineConfig.arrowConfig?.strokeColor ??\n        defaultLineConfig.arrowConfig?.strokeColor,\n\n      fillColor:\n        lineConfig.arrowConfig?.fillColor ??\n        defaultLineConfig.arrowConfig?.fillColor,\n\n      showArrowBase:\n        lineConfig.arrowConfig?.showArrowBase ??\n        defaultLineConfig.arrowConfig?.showArrowBase,\n    },\n    customDataPoint: lineConfig.customDataPoint,\n    isSecondary: lineConfig.isSecondary ?? defaultLineConfig.isSecondary,\n  };\n};\n\nexport const isValueSumZeroForStackBottom = (\n  item: stackItemType,\n  index: number,\n) => {\n  const {stacks} = item;\n  let isValueSumZero = true;\n  for (let i = 0; i < index; i++) {\n    if (stacks[i].value) {\n      isValueSumZero = false;\n      break;\n    }\n  }\n  return isValueSumZero;\n};\n\nexport const isValueSumZeroForStackTop = (\n  item: stackItemType,\n  index: number,\n) => {\n  const {stacks} = item;\n  let isValueSumZero = true;\n  for (let i = stacks.length - 1; i > index; i--) {\n    if (stacks[i].value) {\n      isValueSumZero = false;\n      break;\n    }\n  }\n  return isValueSumZero;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}