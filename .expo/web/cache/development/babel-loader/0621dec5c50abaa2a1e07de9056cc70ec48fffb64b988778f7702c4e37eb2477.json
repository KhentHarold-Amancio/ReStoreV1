{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport React from \"react\";\nimport { Avatar, Button, Card, Text, DataTable } from \"react-native-paper\";\nimport { COLORS, FONT, SIZES } from \"../../../constants\";\nimport CustomDivider from \"../../divider/customdivider\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar generateDummyData = function generateDummyData(count) {\n  var dummyData = [];\n  for (var i = 1; i <= count; i++) {\n    dummyData.push({\n      key: i,\n      month: `Item ${i}`,\n      forecast: Math.floor(Math.random() * 500) + 100,\n      actual: Math.floor(Math.random() * 20) + 5,\n      variance: Math.floor(Math.random() * 20) + 5\n    });\n  }\n  return dummyData;\n};\nvar SaleSummaryTable = function SaleSummaryTable() {\n  var items = generateDummyData(3);\n  return _jsxs(Card, {\n    style: styles.container,\n    children: [_jsx(Card.Title, {\n      title: \"Sales Performance\",\n      subtitle: \"3-month data\",\n      titleStyle: [styles.textStyle, {\n        fontFamily: FONT.bold,\n        fontSize: SIZES.medium\n      }],\n      subtitleStyle: [styles.textStyle, {\n        fontFamily: FONT.regular,\n        fontSize: SIZES.small,\n        marginTop: -10\n      }]\n    }), _jsx(CustomDivider, {\n      dividerColor: COLORS.gray\n    }), _jsx(View, {\n      style: {\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n      },\n      children: _jsxs(DataTable, {\n        style: {\n          justifyContent: \"center\",\n          alignSelf: \"center\"\n        },\n        children: [_jsxs(DataTable.Header, {\n          children: [_jsx(DataTable.Title, {\n            textStyle: styles.titleStyle,\n            children: \"Month\"\n          }), _jsx(DataTable.Title, {\n            numeric: true,\n            textStyle: styles.titleStyle,\n            children: \"Forecast\"\n          }), _jsx(DataTable.Title, {\n            numeric: true,\n            textStyle: styles.titleStyle,\n            children: \"Actual\"\n          }), _jsx(DataTable.Title, {\n            numeric: true,\n            textStyle: styles.titleStyle,\n            children: \"Variance\"\n          })]\n        }), items.map(function (item) {\n          return _jsxs(DataTable.Row, {\n            children: [_jsx(DataTable.Cell, {\n              textStyle: styles.textStyle,\n              children: item.month\n            }), _jsx(DataTable.Cell, {\n              numeric: true,\n              textStyle: styles.textStyle,\n              children: `$${item.forecast}`\n            }), _jsx(DataTable.Cell, {\n              numeric: true,\n              textStyle: styles.textStyle,\n              children: `$${item.actual}`\n            }), _jsx(DataTable.Cell, {\n              numeric: true,\n              textStyle: [styles.textStyle, {\n                color: item.variance > 0 ? COLORS.tertiary : COLORS.quaternary\n              }],\n              children: `$${item.variance}`\n            })]\n          }, item.key);\n        })]\n      })\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    alignContent: \"center\",\n    backgroundColor: COLORS.gray2,\n    marginHorizontal: 10,\n    height: \"auto\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n    paddingBottom: 20\n  },\n  titleStyle: {\n    color: COLORS.white,\n    fontFamily: FONT.bold,\n    justifyContent: \"center\",\n    fontSize: SIZES.medium\n  },\n  textStyle: {\n    color: COLORS.white,\n    fontFamily: FONT.medium,\n    justifyContent: \"center\",\n    fontSize: SIZES.medium\n  },\n  contentStyle: {\n    justifyContent: \"center\"\n  }\n});\nexport default SaleSummaryTable;","map":{"version":3,"names":["React","Avatar","Button","Card","Text","DataTable","COLORS","FONT","SIZES","CustomDivider","jsx","_jsx","jsxs","_jsxs","generateDummyData","count","dummyData","i","push","key","month","forecast","Math","floor","random","actual","variance","SaleSummaryTable","items","style","styles","container","children","Title","title","subtitle","titleStyle","textStyle","fontFamily","bold","fontSize","medium","subtitleStyle","regular","small","marginTop","dividerColor","gray","View","flexDirection","justifyContent","alignSelf","Header","numeric","map","item","Row","Cell","color","tertiary","quaternary","StyleSheet","create","alignContent","backgroundColor","gray2","marginHorizontal","height","marginBottom","paddingBottom","white","contentStyle"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/components/Sales/cards/SaleSummaryTable.js"],"sourcesContent":["import { View, StyleSheet, StatusBar, Image } from \"react-native\";\nimport React from \"react\";\nimport { Avatar, Button, Card, Text, DataTable } from \"react-native-paper\";\nimport { COLORS, FONT, SIZES } from \"../../../constants\";\nimport CustomDivider from \"../../divider/customdivider\";\n\nconst generateDummyData = (count) => {\n  const dummyData = [];\n  for (let i = 1; i <= count; i++) {\n    dummyData.push({\n      key: i,\n      month: `Item ${i}`,\n      forecast: Math.floor(Math.random() * 500) + 100,\n      actual: Math.floor(Math.random() * 20) + 5,\n      variance: Math.floor(Math.random() * 20) + 5,\n    });\n  }\n  return dummyData;\n};\n\nconst SaleSummaryTable = () => {\n  const items = generateDummyData(3);\n\n  return (\n    <Card style={styles.container}>\n      <Card.Title\n        title=\"Sales Performance\"\n        subtitle=\"3-month data\"\n        titleStyle={[\n          styles.textStyle,\n          { fontFamily: FONT.bold, fontSize: SIZES.medium },\n        ]}\n        subtitleStyle={[\n          styles.textStyle,\n          { fontFamily: FONT.regular, fontSize: SIZES.small, marginTop: -10 },\n        ]}\n      />\n      <CustomDivider dividerColor={COLORS.gray} />\n      <View style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}>\n        <DataTable style={{ justifyContent: \"center\", alignSelf: \"center\" }}>\n          <DataTable.Header>\n            <DataTable.Title textStyle={styles.titleStyle}>\n              Month\n            </DataTable.Title>\n            <DataTable.Title numeric textStyle={styles.titleStyle}>\n              Forecast\n            </DataTable.Title>\n            <DataTable.Title numeric textStyle={styles.titleStyle}>\n              Actual\n            </DataTable.Title>\n            <DataTable.Title numeric textStyle={styles.titleStyle}>\n              Variance\n            </DataTable.Title>\n          </DataTable.Header>\n\n          {items.map((item) => (\n            <DataTable.Row key={item.key}>\n              <DataTable.Cell textStyle={styles.textStyle}>\n                {item.month}\n              </DataTable.Cell>\n              <DataTable.Cell numeric textStyle={styles.textStyle}>\n                {`$${item.forecast}`}\n              </DataTable.Cell>\n              <DataTable.Cell numeric textStyle={styles.textStyle}>\n                {`$${item.actual}`}\n              </DataTable.Cell>\n              <DataTable.Cell\n                numeric\n                textStyle={[\n                  styles.textStyle,\n                  {\n                    color:\n                      item.variance > 0 ? COLORS.tertiary : COLORS.quaternary,\n                  },\n                ]}>\n                {`$${item.variance}`}\n              </DataTable.Cell>\n            </DataTable.Row>\n          ))}\n        </DataTable>\n      </View>\n    </Card>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignContent: \"center\",\n    backgroundColor: COLORS.gray2,\n    marginHorizontal: 10,\n    height: \"auto\",\n    justifyContent: \"center\",\n    marginBottom: 10,\n    paddingBottom: 20,\n  },\n  titleStyle: {\n    color: COLORS.white,\n    fontFamily: FONT.bold,\n    justifyContent: \"center\",\n    fontSize: SIZES.medium,\n  },\n  textStyle: {\n    color: COLORS.white,\n    fontFamily: FONT.medium,\n    justifyContent: \"center\",\n    fontSize: SIZES.medium,\n  },\n  contentStyle: {\n    justifyContent: \"center\", // Center the cell text horizontally\n  },\n});\n\nexport default SaleSummaryTable;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}