{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { COLORS, FONT, SIZES } from \"../../../constants\";\nimport { SegmentedButtons } from \"react-native-paper\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar GroupButton = function GroupButton() {\n  var _React$useState = React.useState(\"day\"),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    value = _React$useState2[0],\n    setValue = _React$useState2[1];\n  return _jsx(SegmentedButtons, {\n    value: value,\n    style: styles.segmentedButtonStyle,\n    onValueChange: setValue,\n    buttons: [{\n      buttonColor: COLORS.primary,\n      value: 'day',\n      label: 'Daily',\n      labelStyle: {\n        color: COLORS.white,\n        fontFamily: FONT.medium,\n        fontSize: SIZES.medium\n      },\n      style: {\n        backgroundColor: value === 'day' ? COLORS.primary : COLORS.gray,\n        borderColor: \"transparent\"\n      }\n    }, {\n      value: 'month',\n      label: 'Monthly',\n      labelStyle: {\n        color: COLORS.white,\n        fontFamily: FONT.medium,\n        fontSize: SIZES.medium\n      },\n      style: {\n        backgroundColor: value === 'month' ? COLORS.primary : COLORS.gray,\n        borderColor: \"transparent\"\n      }\n    }]\n  });\n};\nvar styles = StyleSheet.create({\n  segmentedButtonStyle: {\n    marginHorizontal: 20,\n    marginTop: 10\n  }\n});\nexport default GroupButton;","map":{"version":3,"names":["React","View","Text","StyleSheet","COLORS","FONT","SIZES","SegmentedButtons","jsx","_jsx","GroupButton","_React$useState","useState","_React$useState2","_slicedToArray","value","setValue","style","styles","segmentedButtonStyle","onValueChange","buttons","buttonColor","primary","label","labelStyle","color","white","fontFamily","medium","fontSize","backgroundColor","gray","borderColor","create","marginHorizontal","marginTop"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/components/Sales/buttons/groupbutton.js"],"sourcesContent":["import React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { COLORS, FONT, SIZES } from \"../../../constants\";\nimport { SegmentedButtons } from \"react-native-paper\";\n\nconst GroupButton = () => {\n  const [value, setValue] = React.useState(\"day\");\n\n  return (\n    <SegmentedButtons\n      value={value}\n      style={styles.segmentedButtonStyle}\n      onValueChange={setValue}\n      buttons={[\n        {\n          buttonColor: COLORS.primary,\n          value: 'day',\n          label: 'Daily',\n          labelStyle: { color: COLORS.white, fontFamily: FONT.medium, fontSize: SIZES.medium },\n          style: {backgroundColor: value === 'day' ? COLORS.primary : COLORS.gray, borderColor: \"transparent\"}\n        },\n        {\n          value: 'month',\n          label: 'Monthly',\n          labelStyle: { color: COLORS.white, fontFamily: FONT.medium, fontSize: SIZES.medium },\n          style: {backgroundColor: value === 'month' ? COLORS.primary : COLORS.gray, borderColor: \"transparent\"}\n        }\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  segmentedButtonStyle: {\n    marginHorizontal: 20,\n    marginTop: 10,\n  },\n});\n\nexport default GroupButton;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,UAAA;AAE1B,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK;AAC5B,SAASC,gBAAgB,QAAQ,oBAAoB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAEtD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAA,EAAS;EACxB,IAAAC,eAAA,GAA0BX,KAAK,CAACY,QAAQ,CAAC,KAAK,CAAC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAxCI,KAAK,GAAAF,gBAAA;IAAEG,QAAQ,GAAAH,gBAAA;EAEtB,OACEJ,IAAA,CAACF,gBAAgB;IACfQ,KAAK,EAAEA,KAAM;IACbE,KAAK,EAAEC,MAAM,CAACC,oBAAqB;IACnCC,aAAa,EAAEJ,QAAS;IACxBK,OAAO,EAAE,CACP;MACEC,WAAW,EAAElB,MAAM,CAACmB,OAAO;MAC3BR,KAAK,EAAE,KAAK;MACZS,KAAK,EAAE,OAAO;MACdC,UAAU,EAAE;QAAEC,KAAK,EAAEtB,MAAM,CAACuB,KAAK;QAAEC,UAAU,EAAEvB,IAAI,CAACwB,MAAM;QAAEC,QAAQ,EAAExB,KAAK,CAACuB;MAAO,CAAC;MACpFZ,KAAK,EAAE;QAACc,eAAe,EAAEhB,KAAK,KAAK,KAAK,GAAGX,MAAM,CAACmB,OAAO,GAAGnB,MAAM,CAAC4B,IAAI;QAAEC,WAAW,EAAE;MAAa;IACrG,CAAC,EACD;MACElB,KAAK,EAAE,OAAO;MACdS,KAAK,EAAE,SAAS;MAChBC,UAAU,EAAE;QAAEC,KAAK,EAAEtB,MAAM,CAACuB,KAAK;QAAEC,UAAU,EAAEvB,IAAI,CAACwB,MAAM;QAAEC,QAAQ,EAAExB,KAAK,CAACuB;MAAO,CAAC;MACpFZ,KAAK,EAAE;QAACc,eAAe,EAAEhB,KAAK,KAAK,OAAO,GAAGX,MAAM,CAACmB,OAAO,GAAGnB,MAAM,CAAC4B,IAAI;QAAEC,WAAW,EAAE;MAAa;IACvG,CAAC;EACD,CACH,CAAC;AAEN,CAAC;AAED,IAAMf,MAAM,GAAGf,UAAU,CAAC+B,MAAM,CAAC;EAC/Bf,oBAAoB,EAAE;IACpBgB,gBAAgB,EAAE,EAAE;IACpBC,SAAS,EAAE;EACb;AACF,CAAC,CAAC;AAEF,eAAe1B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}