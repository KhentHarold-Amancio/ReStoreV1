{"ast":null,"code":"import React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport AnimatedThreeDBar from \"../Components/AnimatedThreeDBar\";\nimport LinearGradient from 'react-native-linear-gradient';\nimport Animated2DWithGradient from \"./Animated2DWithGradient\";\nimport Cap from \"../Components/BarSpecificComponents/cap\";\nimport BarBackgroundPattern from \"../Components/BarSpecificComponents/barBackgroundPattern\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RenderBars = function RenderBars(props) {\n  var _ref10, _item$leftShiftForToo;\n  var item = props.item,\n    index = props.index,\n    containerHeight = props.containerHeight,\n    maxValue = props.maxValue,\n    minHeight = props.minHeight,\n    spacing = props.spacing,\n    propSpacing = props.propSpacing,\n    side = props.side,\n    data = props.data,\n    barStyle = props.barStyle,\n    barBorderWidth = props.barBorderWidth,\n    barBorderColor = props.barBorderColor,\n    barBorderRadius = props.barBorderRadius,\n    barBorderTopLeftRadius = props.barBorderTopLeftRadius,\n    barBorderTopRightRadius = props.barBorderTopRightRadius,\n    barBorderBottomLeftRadius = props.barBorderBottomLeftRadius,\n    barBorderBottomRightRadius = props.barBorderBottomRightRadius,\n    isThreeD = props.isThreeD,\n    isAnimated = props.isAnimated,\n    rotateLabel = props.rotateLabel,\n    appearingOpacity = props.appearingOpacity,\n    opacity = props.opacity,\n    animationDuration = props.animationDuration,\n    autoShiftLabels = props.autoShiftLabels,\n    label = props.label,\n    labelTextStyle = props.labelTextStyle,\n    xAxisTextNumberOfLines = props.xAxisTextNumberOfLines,\n    xAxisLabelsVerticalShift = props.xAxisLabelsVerticalShift,\n    renderTooltip = props.renderTooltip,\n    leftShiftForTooltip = props.leftShiftForTooltip,\n    leftShiftForLastIndexTooltip = props.leftShiftForLastIndexTooltip,\n    initialSpacing = props.initialSpacing,\n    selectedIndex = props.selectedIndex,\n    setSelectedIndex = props.setSelectedIndex,\n    xAxisThickness = props.xAxisThickness,\n    horizontal = props.horizontal,\n    rtl = props.rtl,\n    intactTopLabel = props.intactTopLabel,\n    showValuesAsTopLabel = props.showValuesAsTopLabel,\n    topLabelContainerStyle = props.topLabelContainerStyle,\n    topLabelTextStyle = props.topLabelTextStyle,\n    pointerConfig = props.pointerConfig;\n  var barMarginBottom = item.barMarginBottom === 0 ? 0 : item.barMarginBottom || props.barMarginBottom || 0;\n  var renderLabel = function renderLabel(label, labelTextStyle, value) {\n    var _props$xAxisLabelsHei;\n    return _jsx(View, {\n      style: [{\n        width: (item.labelWidth || props.labelWidth || item.barWidth || props.barWidth || 30) + spacing,\n        left: spacing / -2,\n        position: 'absolute',\n        height: (_props$xAxisLabelsHei = props.xAxisLabelsHeight) != null ? _props$xAxisLabelsHei : xAxisTextNumberOfLines * 18,\n        bottom: (rotateLabel ? -40 : -6 - xAxisTextNumberOfLines * 18 - xAxisLabelsVerticalShift) - barMarginBottom\n      }, rotateLabel ? horizontal ? {\n        transform: [{\n          rotate: '330deg'\n        }]\n      } : {\n        transform: [{\n          rotate: value < 0 ? '240deg' : '60deg'\n        }, {\n          translateX: value < 0 ? 56 : 0\n        }, {\n          translateY: value < 0 ? 32 : 0\n        }]\n      } : horizontal ? {\n        transform: [{\n          rotate: '-90deg'\n        }]\n      } : value < 0 ? {\n        transform: [{\n          rotate: '180deg'\n        }, {\n          translateY: autoShiftLabels ? 0 : 32\n        }]\n      } : {}],\n      children: item.labelComponent ? item.labelComponent() : _jsx(Text, {\n        style: [{\n          textAlign: 'center'\n        }, rtl && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, labelTextStyle],\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var renderAnimatedLabel = function renderAnimatedLabel(label, labelTextStyle, value) {\n    var _props$xAxisLabelsHei2;\n    return _jsx(Animated.View, {\n      style: [{\n        width: (item.labelWidth || props.labelWidth || item.barWidth || props.barWidth || 30) + spacing,\n        left: spacing / -2,\n        position: 'absolute',\n        height: (_props$xAxisLabelsHei2 = props.xAxisLabelsHeight) != null ? _props$xAxisLabelsHei2 : xAxisTextNumberOfLines * 18,\n        bottom: (rotateLabel ? -40 : -6 - xAxisTextNumberOfLines * 18 - xAxisLabelsVerticalShift) - barMarginBottom,\n        opacity: appearingOpacity\n      }, value < 0 && {\n        transform: [{\n          rotate: '180deg'\n        }]\n      }, rotateLabel ? horizontal ? {\n        transform: [{\n          rotate: '330deg'\n        }]\n      } : {\n        transform: [{\n          rotate: '60deg'\n        }]\n      } : horizontal ? {\n        transform: [{\n          rotate: '-90deg'\n        }]\n      } : {}],\n      children: item.labelComponent ? item.labelComponent() : _jsx(Text, {\n        style: [{\n          textAlign: 'center'\n        }, rtl && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, labelTextStyle],\n        numberOfLines: xAxisTextNumberOfLines,\n        children: label || ''\n      })\n    });\n  };\n  var static2DWithGradient = function static2DWithGradient(item) {\n    var _ref, _item$barBorderRadius, _ref2, _ref3, _item$barBorderTopLef, _ref4, _ref5, _item$barBorderTopRig, _ref6, _ref7, _item$barBorderBottom, _ref8, _ref9, _item$barBorderBottom2;\n    return _jsxs(_Fragment, {\n      children: [_jsx(LinearGradient, {\n        style: [{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          borderWidth: barBorderWidth != null ? barBorderWidth : 0,\n          borderColor: barBorderColor,\n          borderRadius: (_ref = (_item$barBorderRadius = item.barBorderRadius) != null ? _item$barBorderRadius : barBorderRadius) != null ? _ref : 0,\n          borderTopLeftRadius: (_ref2 = (_ref3 = (_item$barBorderTopLef = item.barBorderTopLeftRadius) != null ? _item$barBorderTopLef : barBorderTopLeftRadius) != null ? _ref3 : item.barBorderRadius) != null ? _ref2 : barBorderRadius,\n          borderTopRightRadius: (_ref4 = (_ref5 = (_item$barBorderTopRig = item.barBorderTopRightRadius) != null ? _item$barBorderTopRig : barBorderTopRightRadius) != null ? _ref5 : item.barBorderRadius) != null ? _ref4 : barBorderRadius,\n          borderBottomLeftRadius: (_ref6 = (_ref7 = (_item$barBorderBottom = item.barBorderBottomLeftRadius) != null ? _item$barBorderBottom : barBorderBottomLeftRadius) != null ? _ref7 : item.barBorderRadius) != null ? _ref6 : barBorderRadius,\n          borderBottomRightRadius: (_ref8 = (_ref9 = (_item$barBorderBottom2 = item.barBorderBottomRightRadius) != null ? _item$barBorderBottom2 : barBorderBottomRightRadius) != null ? _ref9 : item.barBorderRadius) != null ? _ref8 : barBorderRadius\n        }, props.roundedBottom && {\n          borderBottomLeftRadius: (item.barWidth || props.barWidth || 30) / 2,\n          borderBottomRightRadius: (item.barWidth || props.barWidth || 30) / 2\n        }, props.cappedBars && {\n          borderTopLeftRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0,\n          borderTopRightRadius: item.capRadius === 0 ? 0 : item.capRadius || props.capRadius || 0\n        }, props.roundedTop && {\n          borderTopLeftRadius: (item.barWidth || props.barWidth || 30) / 2,\n          borderTopRightRadius: (item.barWidth || props.barWidth || 30) / 2\n        }],\n        start: {\n          x: 0,\n          y: 0\n        },\n        end: {\n          x: 0,\n          y: 1\n        },\n        colors: [item.gradientColor || props.gradientColor || 'white', item.frontColor || props.frontColor || 'black'],\n        children: props.cappedBars && item.value ? _jsx(Cap, {\n          capThicknessFromItem: item.capThickness,\n          capThicknessFromProps: props.capThickness,\n          capColorFromItem: item.capColor,\n          capColorFromProps: props.capColor,\n          capRadiusFromItem: item.capRadius,\n          capRadiusFromProps: props.capRadius\n        }) : null\n      }), (item.barBackgroundPattern || props.barBackgroundPattern) && _jsx(BarBackgroundPattern, {\n        barBackgroundPatternFromItem: item.barBackgroundPattern,\n        barBackgroundPatternFromProps: props.barBackgroundPattern,\n        patternIdFromItem: item.patternId,\n        patternIdFromProps: props.patternId\n      }), (item.topLabelComponent || showValuesAsTopLabel) && _jsx(View, {\n        style: [{\n          position: 'absolute',\n          top: (item.barWidth || props.barWidth || 30) * -1,\n          height: item.barWidth || props.barWidth || 30,\n          width: item.barWidth || props.barWidth || 30,\n          justifyContent: horizontal && !intactTopLabel || item.value < 0 ? 'center' : 'flex-end',\n          alignItems: 'center'\n        }, item.value < 0 && {\n          transform: [{\n            rotate: '180deg'\n          }]\n        }, horizontal && !intactTopLabel && {\n          transform: [{\n            rotate: '270deg'\n          }]\n        }, topLabelContainerStyle != null ? topLabelContainerStyle : item.topLabelContainerStyle],\n        children: showValuesAsTopLabel ? _jsx(Text, {\n          style: topLabelTextStyle,\n          children: item.value\n        }) : item.topLabelComponent == null ? void 0 : item.topLabelComponent()\n      })]\n    });\n  };\n  var barHeight = Math.max(minHeight, Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200) - (xAxisThickness != null ? xAxisThickness : 0));\n  var leftSpacing = initialSpacing;\n  for (var i = 0; i < index; i++) {\n    var _data$i$spacing;\n    leftSpacing += ((_data$i$spacing = data[i].spacing) != null ? _data$i$spacing : propSpacing) + (data[i].barWidth || props.barWidth || 30);\n  }\n  var barWrapperStyle = [{\n    marginBottom: 60 + barMarginBottom + xAxisLabelsVerticalShift,\n    width: item.barWidth || props.barWidth || 30,\n    height: barHeight,\n    marginRight: spacing\n  }, item.value < 0 ? {\n    transform: [{\n      translateY: Math.abs(item.value) * (containerHeight || 200) / (maxValue || 200)\n    }, {\n      rotateZ: '180deg'\n    }]\n  } : pointerConfig ? {\n    transform: [{\n      translateY: (containerHeight || 200) - (barHeight - 10 + xAxisLabelsVerticalShift)\n    }]\n  } : null, side !== 'right' && {\n    zIndex: data.length - index\n  }];\n  var pressDisabled = item.disablePress || props.disablePress || pointerConfig && pointerConfig.barTouchable !== true;\n  var barContent = function barContent() {\n    var animated2DWithGradient = function animated2DWithGradient(noGradient, noAnimation) {\n      return _jsx(Animated2DWithGradient, {\n        barBackgroundPattern: props.barBackgroundPattern,\n        patternId: props.patternId,\n        barWidth: props.barWidth || 30,\n        barStyle: barStyle,\n        item: item,\n        opacity: opacity,\n        animationDuration: animationDuration || 800,\n        roundedBottom: props.roundedBottom || false,\n        roundedTop: props.roundedTop || false,\n        noGradient: noGradient,\n        noAnimation: noAnimation,\n        gradientColor: noGradient ? undefined : props.gradientColor,\n        frontColor: props.frontColor || 'black',\n        containerHeight: containerHeight,\n        maxValue: maxValue,\n        height: barHeight,\n        minHeight: minHeight != null ? minHeight : 0,\n        barMarginBottom: barMarginBottom,\n        cappedBars: props.cappedBars,\n        capThickness: props.capThickness,\n        capColor: props.capColor,\n        capRadius: props.capRadius,\n        horizontal: horizontal,\n        intactTopLabel: intactTopLabel,\n        showValuesAsTopLabel: !!showValuesAsTopLabel,\n        topLabelContainerStyle: topLabelContainerStyle,\n        topLabelTextStyle: topLabelTextStyle,\n        barBorderWidth: barBorderWidth,\n        barBorderColor: barBorderColor,\n        barBorderRadius: props.barBorderRadius || 0,\n        barBorderTopLeftRadius: barBorderTopLeftRadius,\n        barBorderTopRightRadius: barBorderTopRightRadius,\n        barBorderBottomLeftRadius: barBorderBottomLeftRadius,\n        barBorderBottomRightRadius: barBorderBottomRightRadius\n      });\n    };\n    return _jsxs(_Fragment, {\n      children: [(props.showXAxisIndices || item.showXAxisIndex) && _jsx(View, {\n        style: {\n          zIndex: 2,\n          position: 'absolute',\n          height: props.xAxisIndicesHeight,\n          width: props.xAxisIndicesWidth,\n          bottom: props.xAxisIndicesHeight / -2,\n          left: ((item.barWidth || props.barWidth || 30) - props.xAxisIndicesWidth) / 2,\n          backgroundColor: props.xAxisIndicesColor\n        }\n      }), isThreeD ? _jsx(AnimatedThreeDBar, {\n        barBackgroundPattern: item.barBackgroundPattern || props.barBackgroundPattern,\n        patternId: item.patternId || props.patternId,\n        width: item.barWidth || props.barWidth || 30,\n        barStyle: barStyle,\n        item: item,\n        sideWidth: item.sideWidth || props.sideWidth || (item.barWidth || props.barWidth || 30) / 2,\n        side: side || 'left',\n        frontColor: item.frontColor || props.frontColor || '',\n        sideColor: item.sideColor || props.sideColor || '',\n        topColor: item.topColor || props.topColor || '',\n        showGradient: item.showGradient || props.showGradient || false,\n        gradientColor: item.gradientColor || props.gradientColor,\n        opacity: opacity || 1,\n        height: barHeight,\n        intactTopLabel: intactTopLabel,\n        showValuesAsTopLabel: !!showValuesAsTopLabel,\n        topLabelContainerStyle: topLabelContainerStyle,\n        topLabelTextStyle: topLabelTextStyle,\n        horizontal: horizontal,\n        isAnimated: isAnimated,\n        animationDuration: animationDuration || 800\n      }) : item.showGradient || props.showGradient ? isAnimated ? animated2DWithGradient(false, false) : static2DWithGradient(item) : isAnimated ? animated2DWithGradient(true, false) : animated2DWithGradient(true, true), isAnimated ? renderAnimatedLabel(label, labelTextStyle, item.value) : renderLabel(label, labelTextStyle, item.value)]\n    });\n  };\n  return _jsxs(_Fragment, {\n    children: [pressDisabled ? _jsx(View, {\n      pointerEvents: \"none\",\n      style: barWrapperStyle,\n      children: barContent()\n    }) : _jsx(TouchableOpacity, {\n      activeOpacity: props.activeOpacity || 0.2,\n      onPress: function onPress() {\n        if (renderTooltip) {\n          setSelectedIndex(index);\n        }\n        item.onPress ? item.onPress() : props.onPress ? props.onPress(item, index) : null;\n      },\n      style: barWrapperStyle,\n      children: barContent()\n    }), renderTooltip && selectedIndex === index && _jsx(View, {\n      style: {\n        position: 'absolute',\n        bottom: barHeight + 60,\n        left: index === data.length - 1 ? leftSpacing - leftShiftForLastIndexTooltip : leftSpacing - ((_ref10 = (_item$leftShiftForToo = item == null ? void 0 : item.leftShiftForTooltip) != null ? _item$leftShiftForToo : leftShiftForTooltip) != null ? _ref10 : 0),\n        zIndex: 1000\n      },\n      children: renderTooltip(item, index)\n    })]\n  });\n};\nexport default RenderBars;","map":{"version":3,"names":["React","View","TouchableOpacity","Animated","Text","AnimatedThreeDBar","LinearGradient","Animated2DWithGradient","Cap","BarBackgroundPattern","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","RenderBars","props","_ref10","_item$leftShiftForToo","item","index","containerHeight","maxValue","minHeight","spacing","propSpacing","side","data","barStyle","barBorderWidth","barBorderColor","barBorderRadius","barBorderTopLeftRadius","barBorderTopRightRadius","barBorderBottomLeftRadius","barBorderBottomRightRadius","isThreeD","isAnimated","rotateLabel","appearingOpacity","opacity","animationDuration","autoShiftLabels","label","labelTextStyle","xAxisTextNumberOfLines","xAxisLabelsVerticalShift","renderTooltip","leftShiftForTooltip","leftShiftForLastIndexTooltip","initialSpacing","selectedIndex","setSelectedIndex","xAxisThickness","horizontal","rtl","intactTopLabel","showValuesAsTopLabel","topLabelContainerStyle","topLabelTextStyle","pointerConfig","barMarginBottom","renderLabel","value","_props$xAxisLabelsHei","style","width","labelWidth","barWidth","left","position","height","xAxisLabelsHeight","bottom","transform","rotate","translateX","translateY","children","labelComponent","textAlign","numberOfLines","renderAnimatedLabel","_props$xAxisLabelsHei2","static2DWithGradient","_ref","_item$barBorderRadius","_ref2","_ref3","_item$barBorderTopLef","_ref4","_ref5","_item$barBorderTopRig","_ref6","_ref7","_item$barBorderBottom","_ref8","_ref9","_item$barBorderBottom2","borderWidth","borderColor","borderRadius","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","roundedBottom","cappedBars","capRadius","roundedTop","start","x","y","end","colors","gradientColor","frontColor","capThicknessFromItem","capThickness","capThicknessFromProps","capColorFromItem","capColor","capColorFromProps","capRadiusFromItem","capRadiusFromProps","barBackgroundPattern","barBackgroundPatternFromItem","barBackgroundPatternFromProps","patternIdFromItem","patternId","patternIdFromProps","topLabelComponent","top","justifyContent","alignItems","barHeight","Math","max","abs","leftSpacing","i","_data$i$spacing","barWrapperStyle","marginBottom","marginRight","rotateZ","zIndex","length","pressDisabled","disablePress","barTouchable","barContent","animated2DWithGradient","noGradient","noAnimation","undefined","showXAxisIndices","showXAxisIndex","xAxisIndicesHeight","xAxisIndicesWidth","backgroundColor","xAxisIndicesColor","sideWidth","sideColor","topColor","showGradient","pointerEvents","activeOpacity","onPress"],"sources":["/home/windss/Documents/ReactNative/fcc/ReStore/ReStoreV1/node_modules/react-native-gifted-charts/src/BarChart/RenderBars.tsx"],"sourcesContent":["import React, {Component} from 'react';\nimport {View, TouchableOpacity, Animated, Text, ColorValue} from 'react-native';\nimport AnimatedThreeDBar from '../Components/AnimatedThreeDBar';\nimport LinearGradient from 'react-native-linear-gradient';\nimport Animated2DWithGradient from './Animated2DWithGradient';\nimport Cap from '../Components/BarSpecificComponents/cap';\nimport BarBackgroundPattern from '../Components/BarSpecificComponents/barBackgroundPattern';\nimport {itemType} from './types';\nimport {Pointer} from '../utils/types';\n\ntype Props = {\n  style?: any;\n  width?: number;\n  height?: number;\n  minHeight: number;\n  color?: ColorValue;\n  showGradient?: boolean;\n  gradientColor?: any;\n  frontColor?: ColorValue;\n  sideColor?: ColorValue;\n  topColor?: ColorValue;\n  topLabelComponent?: Component;\n  topLabelContainerStyle?: any;\n  topLabelTextStyle?: any;\n  opacity?: number;\n  side?: String;\n  labelTextStyle?: any;\n\n  item: itemType;\n  index: number;\n  label: String;\n  containerHeight?: number;\n  maxValue: number;\n  spacing: number;\n  propSpacing?: number;\n  data?: any;\n  barWidth?: number;\n  sideWidth?: number;\n  labelWidth?: number;\n\n  isThreeD?: boolean;\n  isAnimated?: boolean;\n  rotateLabel?: boolean;\n  animatedHeight?: any;\n  appearingOpacity?: any;\n  animationDuration?: number;\n  roundedTop?: boolean;\n  roundedBottom?: boolean;\n  disablePress?: boolean;\n  activeOpacity?: number;\n  cappedBars?: boolean;\n  capThickness?: number;\n  capColor?: ColorValue;\n  capRadius?: number;\n  showXAxisIndices: boolean;\n  xAxisIndicesHeight: number;\n  xAxisIndicesWidth: number;\n  xAxisIndicesColor: ColorValue;\n  horizontal: boolean;\n  rtl: boolean;\n  intactTopLabel: boolean;\n  showValuesAsTopLabel?: boolean;\n  barBorderWidth?: number;\n  barBorderColor: ColorValue;\n  barBorderRadius?: number;\n  barBorderTopLeftRadius?: number;\n  barBorderTopRightRadius?: number;\n  barBorderBottomLeftRadius?: number;\n  barBorderBottomRightRadius?: number;\n  autoShiftLabels?: boolean;\n  barBackgroundPattern?: Function;\n  patternId?: String;\n  barMarginBottom?: number;\n  onPress?: Function;\n  xAxisTextNumberOfLines: number;\n  xAxisLabelsHeight?: number;\n  xAxisLabelsVerticalShift: number;\n  renderTooltip: Function | undefined;\n  leftShiftForTooltip?: number;\n  leftShiftForLastIndexTooltip: number;\n  initialSpacing: number;\n  selectedIndex: number;\n  setSelectedIndex: Function;\n  barStyle?: object;\n  xAxisThickness?: number;\n  pointerConfig?: Pointer;\n};\nconst RenderBars = (props: Props) => {\n  const {\n    item,\n    index,\n    containerHeight,\n    maxValue,\n    minHeight,\n    spacing,\n    propSpacing,\n    side,\n    data,\n    barStyle,\n    barBorderWidth,\n    barBorderColor,\n    barBorderRadius,\n    barBorderTopLeftRadius,\n    barBorderTopRightRadius,\n    barBorderBottomLeftRadius,\n    barBorderBottomRightRadius,\n    // oldValue,\n\n    isThreeD,\n    isAnimated,\n    rotateLabel,\n    appearingOpacity,\n    opacity,\n    animationDuration,\n    autoShiftLabels,\n    label,\n    labelTextStyle,\n    xAxisTextNumberOfLines,\n    xAxisLabelsVerticalShift,\n    renderTooltip,\n    leftShiftForTooltip,\n    leftShiftForLastIndexTooltip,\n    initialSpacing,\n    selectedIndex,\n    setSelectedIndex,\n    xAxisThickness,\n    horizontal,\n    rtl,\n    intactTopLabel,\n    showValuesAsTopLabel,\n    topLabelContainerStyle,\n    topLabelTextStyle,\n    pointerConfig,\n  } = props;\n\n  const barMarginBottom =\n    item.barMarginBottom === 0\n      ? 0\n      : item.barMarginBottom || props.barMarginBottom || 0;\n\n  const renderLabel = (label: String, labelTextStyle: any, value: number) => {\n    return (\n      <View\n        style={[\n          {\n            width:\n              (item.labelWidth ||\n                props.labelWidth ||\n                item.barWidth ||\n                props.barWidth ||\n                30) + spacing,\n            left: spacing / -2,\n            position: 'absolute',\n            height: props.xAxisLabelsHeight ?? xAxisTextNumberOfLines * 18,\n            bottom:\n              (rotateLabel\n                ? -40\n                : -6 - xAxisTextNumberOfLines * 18 - xAxisLabelsVerticalShift) -\n              barMarginBottom,\n          },\n          rotateLabel\n            ? horizontal\n              ? {transform: [{rotate: '330deg'}]}\n              : {\n                  transform: [\n                    {rotate: value < 0 ? '240deg' : '60deg'},\n                    {translateX: value < 0 ? 56 : 0},\n                    {translateY: value < 0 ? 32 : 0},\n                  ],\n                }\n            : horizontal\n            ? {transform: [{rotate: '-90deg'}]}\n            : value < 0\n            ? {\n                transform: [\n                  {rotate: '180deg'},\n                  {translateY: autoShiftLabels ? 0 : 32},\n                ],\n              }\n            : {},\n        ]}>\n        {item.labelComponent ? (\n          item.labelComponent()\n        ) : (\n          <Text\n            style={[\n              {textAlign: 'center'},\n              rtl && {transform: [{rotate: '180deg'}]},\n              labelTextStyle,\n            ]}\n            numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </View>\n    );\n  };\n\n  const renderAnimatedLabel = (\n    label: String,\n    labelTextStyle: any,\n    value: number,\n  ) => {\n    return (\n      <Animated.View\n        style={[\n          {\n            width:\n              (item.labelWidth ||\n                props.labelWidth ||\n                item.barWidth ||\n                props.barWidth ||\n                30) + spacing,\n            left: spacing / -2,\n            position: 'absolute',\n            height: props.xAxisLabelsHeight ?? xAxisTextNumberOfLines * 18,\n            bottom:\n              (rotateLabel\n                ? -40\n                : -6 - xAxisTextNumberOfLines * 18 - xAxisLabelsVerticalShift) -\n              barMarginBottom,\n            opacity: appearingOpacity,\n          },\n          value < 0 && {transform: [{rotate: '180deg'}]},\n          rotateLabel\n            ? horizontal\n              ? {transform: [{rotate: '330deg'}]}\n              : {transform: [{rotate: '60deg'}]}\n            : horizontal\n            ? {transform: [{rotate: '-90deg'}]}\n            : {},\n        ]}>\n        {item.labelComponent ? (\n          item.labelComponent()\n        ) : (\n          <Text\n            style={[\n              {textAlign: 'center'},\n              rtl && {transform: [{rotate: '180deg'}]},\n              labelTextStyle,\n            ]}\n            numberOfLines={xAxisTextNumberOfLines}>\n            {label || ''}\n          </Text>\n        )}\n      </Animated.View>\n    );\n  };\n\n  const static2DWithGradient = (item: itemType) => {\n    return (\n      <>\n        <LinearGradient\n          style={[\n            {\n              position: 'absolute',\n              width: '100%',\n              height: '100%',\n              borderWidth: barBorderWidth ?? 0,\n              borderColor: barBorderColor,\n              borderRadius: item.barBorderRadius ?? barBorderRadius ?? 0,\n              borderTopLeftRadius:\n                item.barBorderTopLeftRadius ??\n                barBorderTopLeftRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n              borderTopRightRadius:\n                item.barBorderTopRightRadius ??\n                barBorderTopRightRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n              borderBottomLeftRadius:\n                item.barBorderBottomLeftRadius ??\n                barBorderBottomLeftRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n              borderBottomRightRadius:\n                item.barBorderBottomRightRadius ??\n                barBorderBottomRightRadius ??\n                item.barBorderRadius ??\n                barBorderRadius,\n            },\n            props.roundedBottom && {\n              borderBottomLeftRadius:\n                (item.barWidth || props.barWidth || 30) / 2,\n              borderBottomRightRadius:\n                (item.barWidth || props.barWidth || 30) / 2,\n            },\n            props.cappedBars && {\n              borderTopLeftRadius:\n                item.capRadius === 0\n                  ? 0\n                  : item.capRadius || props.capRadius || 0,\n              borderTopRightRadius:\n                item.capRadius === 0\n                  ? 0\n                  : item.capRadius || props.capRadius || 0,\n            },\n            props.roundedTop && {\n              borderTopLeftRadius: (item.barWidth || props.barWidth || 30) / 2,\n              borderTopRightRadius: (item.barWidth || props.barWidth || 30) / 2,\n            },\n          ]}\n          start={{x: 0, y: 0}}\n          end={{x: 0, y: 1}}\n          colors={[\n            item.gradientColor || props.gradientColor || 'white',\n            item.frontColor || props.frontColor || 'black',\n          ]}>\n          {props.cappedBars && item.value ? (\n            <Cap\n              capThicknessFromItem={item.capThickness}\n              capThicknessFromProps={props.capThickness}\n              capColorFromItem={item.capColor}\n              capColorFromProps={props.capColor}\n              capRadiusFromItem={item.capRadius}\n              capRadiusFromProps={props.capRadius}\n            />\n          ) : null}\n        </LinearGradient>\n        {(item.barBackgroundPattern || props.barBackgroundPattern) && (\n          <BarBackgroundPattern\n            barBackgroundPatternFromItem={item.barBackgroundPattern}\n            barBackgroundPatternFromProps={props.barBackgroundPattern}\n            patternIdFromItem={item.patternId}\n            patternIdFromProps={props.patternId}\n          />\n        )}\n        {(item.topLabelComponent || showValuesAsTopLabel) && (\n          <View\n            style={[\n              {\n                position: 'absolute',\n                top: (item.barWidth || props.barWidth || 30) * -1,\n                height: item.barWidth || props.barWidth || 30,\n                width: item.barWidth || props.barWidth || 30,\n                justifyContent:\n                  (horizontal && !intactTopLabel) || item.value < 0\n                    ? 'center'\n                    : 'flex-end',\n                alignItems: 'center',\n              },\n              item.value < 0 && {transform: [{rotate: '180deg'}]},\n              horizontal &&\n                !intactTopLabel && {transform: [{rotate: '270deg'}]},\n              topLabelContainerStyle ?? item.topLabelContainerStyle,\n            ]}>\n            {showValuesAsTopLabel ? (\n              <Text style={topLabelTextStyle}>{item.value}</Text>\n            ) : (\n              item.topLabelComponent?.()\n            )}\n          </View>\n        )}\n      </>\n    );\n  };\n\n  const barHeight = Math.max(\n    minHeight,\n    (Math.abs(item.value) * (containerHeight || 200)) / (maxValue || 200) -\n      (xAxisThickness ?? 0),\n  );\n\n  let leftSpacing = initialSpacing;\n  for (let i = 0; i < index; i++) {\n    leftSpacing +=\n      (data[i].spacing ?? propSpacing) +\n      (data[i].barWidth || props.barWidth || 30);\n  }\n\n  const barWrapperStyle = [\n    {\n      // overflow: 'visible',\n      marginBottom: 60 + barMarginBottom + xAxisLabelsVerticalShift,\n      width: item.barWidth || props.barWidth || 30,\n      height: barHeight,\n      marginRight: spacing,\n    },\n    item.value < 0\n      ? {\n          transform: [\n            {\n              translateY:\n                (Math.abs(item.value) * (containerHeight || 200)) /\n                (maxValue || 200),\n            },\n            {rotateZ: '180deg'},\n          ],\n        }\n      : pointerConfig\n      ? {\n          transform: [\n            {\n              translateY:\n                (containerHeight || 200) -\n                (barHeight - 10 + xAxisLabelsVerticalShift),\n            },\n          ],\n        }\n      : null,\n    // !isThreeD && !item.showGradient && !props.showGradient &&\n    // { backgroundColor: item.frontColor || props.frontColor || 'black' },\n    side !== 'right' && {zIndex: data.length - index},\n  ];\n\n  const pressDisabled =\n    item.disablePress ||\n    props.disablePress ||\n    (pointerConfig && pointerConfig.barTouchable !== true);\n\n  const barContent = () => {\n    const animated2DWithGradient = (noGradient, noAnimation) => (\n      <Animated2DWithGradient\n        barBackgroundPattern={props.barBackgroundPattern}\n        patternId={props.patternId}\n        barWidth={props.barWidth || 30}\n        barStyle={barStyle}\n        item={item}\n        opacity={opacity}\n        animationDuration={animationDuration || 800}\n        roundedBottom={props.roundedBottom || false}\n        roundedTop={props.roundedTop || false}\n        noGradient={noGradient}\n        noAnimation={noAnimation}\n        gradientColor={noGradient ? undefined : props.gradientColor}\n        frontColor={props.frontColor || 'black'}\n        containerHeight={containerHeight}\n        maxValue={maxValue}\n        height={barHeight}\n        minHeight={minHeight ?? 0}\n        barMarginBottom={barMarginBottom}\n        cappedBars={props.cappedBars}\n        capThickness={props.capThickness}\n        capColor={props.capColor}\n        capRadius={props.capRadius}\n        horizontal={horizontal}\n        intactTopLabel={intactTopLabel}\n        showValuesAsTopLabel={!!showValuesAsTopLabel}\n        topLabelContainerStyle={topLabelContainerStyle}\n        topLabelTextStyle={topLabelTextStyle}\n        barBorderWidth={barBorderWidth}\n        barBorderColor={barBorderColor}\n        barBorderRadius={props.barBorderRadius || 0}\n        barBorderTopLeftRadius={barBorderTopLeftRadius}\n        barBorderTopRightRadius={barBorderTopRightRadius}\n        barBorderBottomLeftRadius={barBorderBottomLeftRadius}\n        barBorderBottomRightRadius={barBorderBottomRightRadius}\n      />\n    );\n    return (\n      <>\n        {(props.showXAxisIndices || item.showXAxisIndex) && (\n          <View\n            style={{\n              zIndex: 2,\n              position: 'absolute',\n              height: props.xAxisIndicesHeight,\n              width: props.xAxisIndicesWidth,\n              bottom: props.xAxisIndicesHeight / -2,\n              left:\n                ((item.barWidth || props.barWidth || 30) -\n                  props.xAxisIndicesWidth) /\n                2,\n              backgroundColor: props.xAxisIndicesColor,\n            }}\n          />\n        )}\n        {isThreeD ? (\n          <AnimatedThreeDBar\n            barBackgroundPattern={\n              item.barBackgroundPattern || props.barBackgroundPattern\n            }\n            patternId={item.patternId || props.patternId}\n            width={item.barWidth || props.barWidth || 30}\n            barStyle={barStyle}\n            item={item}\n            sideWidth={\n              item.sideWidth ||\n              props.sideWidth ||\n              (item.barWidth || props.barWidth || 30) / 2\n            }\n            side={side || 'left'}\n            frontColor={item.frontColor || props.frontColor || ''}\n            sideColor={item.sideColor || props.sideColor || ''}\n            topColor={item.topColor || props.topColor || ''}\n            showGradient={item.showGradient || props.showGradient || false}\n            gradientColor={item.gradientColor || props.gradientColor}\n            opacity={opacity || 1}\n            height={barHeight}\n            intactTopLabel={intactTopLabel}\n            showValuesAsTopLabel={!!showValuesAsTopLabel}\n            topLabelContainerStyle={topLabelContainerStyle}\n            topLabelTextStyle={topLabelTextStyle}\n            horizontal={horizontal}\n            isAnimated={isAnimated}\n            animationDuration={animationDuration || 800}\n          />\n        ) : item.showGradient || props.showGradient ? (\n          isAnimated ? (\n            animated2DWithGradient(false, false)\n          ) : (\n            static2DWithGradient(item)\n          )\n        ) : isAnimated ? (\n          animated2DWithGradient(true, false)\n        ) : (\n          animated2DWithGradient(true, true)\n        )}\n        {isAnimated\n          ? renderAnimatedLabel(label, labelTextStyle, item.value)\n          : renderLabel(label, labelTextStyle, item.value)}\n      </>\n    );\n  };\n\n  return (\n    <>\n      {pressDisabled ? (\n        <View pointerEvents=\"none\" style={barWrapperStyle}>\n          {barContent()}\n        </View>\n      ) : (\n        <TouchableOpacity\n          activeOpacity={props.activeOpacity || 0.2}\n          onPress={() => {\n            if (renderTooltip) {\n              setSelectedIndex(index);\n            }\n            item.onPress\n              ? item.onPress()\n              : props.onPress\n              ? props.onPress(item, index)\n              : null;\n          }}\n          style={barWrapperStyle}>\n          {barContent()}\n        </TouchableOpacity>\n      )}\n      {renderTooltip && selectedIndex === index && (\n        <View\n          style={{\n            position: 'absolute',\n            bottom: barHeight + 60,\n            left:\n              index === data.length - 1\n                ? leftSpacing - leftShiftForLastIndexTooltip\n                : leftSpacing -\n                  (item?.leftShiftForTooltip ?? leftShiftForTooltip ?? 0),\n            zIndex: 1000,\n          }}>\n          {renderTooltip(item, index)}\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default RenderBars;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAmB,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,IAAA;AAEvC,OAAOC,iBAAiB;AACxB,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,sBAAsB;AAC7B,OAAOC,GAAG;AACV,OAAOC,oBAAoB;AAAiE,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAiF5F,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAY,EAAK;EAAA,IAAAC,MAAA,EAAAC,qBAAA;EACnC,IACEC,IAAI,GA4CFH,KAAK,CA5CPG,IAAI;IACJC,KAAK,GA2CHJ,KAAK,CA3CPI,KAAK;IACLC,eAAe,GA0CbL,KAAK,CA1CPK,eAAe;IACfC,QAAQ,GAyCNN,KAAK,CAzCPM,QAAQ;IACRC,SAAS,GAwCPP,KAAK,CAxCPO,SAAS;IACTC,OAAO,GAuCLR,KAAK,CAvCPQ,OAAO;IACPC,WAAW,GAsCTT,KAAK,CAtCPS,WAAW;IACXC,IAAI,GAqCFV,KAAK,CArCPU,IAAI;IACJC,IAAI,GAoCFX,KAAK,CApCPW,IAAI;IACJC,QAAQ,GAmCNZ,KAAK,CAnCPY,QAAQ;IACRC,cAAc,GAkCZb,KAAK,CAlCPa,cAAc;IACdC,cAAc,GAiCZd,KAAK,CAjCPc,cAAc;IACdC,eAAe,GAgCbf,KAAK,CAhCPe,eAAe;IACfC,sBAAsB,GA+BpBhB,KAAK,CA/BPgB,sBAAsB;IACtBC,uBAAuB,GA8BrBjB,KAAK,CA9BPiB,uBAAuB;IACvBC,yBAAyB,GA6BvBlB,KAAK,CA7BPkB,yBAAyB;IACzBC,0BAA0B,GA4BxBnB,KAAK,CA5BPmB,0BAA0B;IAG1BC,QAAQ,GAyBNpB,KAAK,CAzBPoB,QAAQ;IACRC,UAAU,GAwBRrB,KAAK,CAxBPqB,UAAU;IACVC,WAAW,GAuBTtB,KAAK,CAvBPsB,WAAW;IACXC,gBAAgB,GAsBdvB,KAAK,CAtBPuB,gBAAgB;IAChBC,OAAO,GAqBLxB,KAAK,CArBPwB,OAAO;IACPC,iBAAiB,GAoBfzB,KAAK,CApBPyB,iBAAiB;IACjBC,eAAe,GAmBb1B,KAAK,CAnBP0B,eAAe;IACfC,KAAK,GAkBH3B,KAAK,CAlBP2B,KAAK;IACLC,cAAc,GAiBZ5B,KAAK,CAjBP4B,cAAc;IACdC,sBAAsB,GAgBpB7B,KAAK,CAhBP6B,sBAAsB;IACtBC,wBAAwB,GAetB9B,KAAK,CAfP8B,wBAAwB;IACxBC,aAAa,GAcX/B,KAAK,CAdP+B,aAAa;IACbC,mBAAmB,GAajBhC,KAAK,CAbPgC,mBAAmB;IACnBC,4BAA4B,GAY1BjC,KAAK,CAZPiC,4BAA4B;IAC5BC,cAAc,GAWZlC,KAAK,CAXPkC,cAAc;IACdC,aAAa,GAUXnC,KAAK,CAVPmC,aAAa;IACbC,gBAAgB,GASdpC,KAAK,CATPoC,gBAAgB;IAChBC,cAAc,GAQZrC,KAAK,CARPqC,cAAc;IACdC,UAAU,GAORtC,KAAK,CAPPsC,UAAU;IACVC,GAAG,GAMDvC,KAAK,CANPuC,GAAG;IACHC,cAAc,GAKZxC,KAAK,CALPwC,cAAc;IACdC,oBAAoB,GAIlBzC,KAAK,CAJPyC,oBAAoB;IACpBC,sBAAsB,GAGpB1C,KAAK,CAHP0C,sBAAsB;IACtBC,iBAAiB,GAEf3C,KAAK,CAFP2C,iBAAiB;IACjBC,aAAa,GACX5C,KAAK,CADP4C,aAAa;EAGf,IAAMC,eAAe,GACnB1C,IAAI,CAAC0C,eAAe,KAAK,CAAC,GACtB,CAAC,GACD1C,IAAI,CAAC0C,eAAe,IAAI7C,KAAK,CAAC6C,eAAe,IAAI,CAAC;EAExD,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAInB,KAAa,EAAEC,cAAmB,EAAEmB,KAAa,EAAK;IAAA,IAAAC,qBAAA;IACzE,OACEtD,IAAA,CAACV,IAAI;MACHiE,KAAK,EAAE,CACL;QACEC,KAAK,EACH,CAAC/C,IAAI,CAACgD,UAAU,IACdnD,KAAK,CAACmD,UAAU,IAChBhD,IAAI,CAACiD,QAAQ,IACbpD,KAAK,CAACoD,QAAQ,IACd,EAAE,IAAI5C,OAAO;QACjB6C,IAAI,EAAE7C,OAAO,GAAG,CAAC,CAAC;QAClB8C,QAAQ,EAAE,UAAU;QACpBC,MAAM,GAAAP,qBAAA,GAAEhD,KAAK,CAACwD,iBAAiB,YAAAR,qBAAA,GAAInB,sBAAsB,GAAG,EAAE;QAC9D4B,MAAM,EACJ,CAACnC,WAAW,GACR,CAAC,EAAE,GACH,CAAC,CAAC,GAAGO,sBAAsB,GAAG,EAAE,GAAGC,wBAAwB,IAC/De;MACJ,CAAC,EACDvB,WAAW,GACPgB,UAAU,GACR;QAACoB,SAAS,EAAE,CAAC;UAACC,MAAM,EAAE;QAAQ,CAAC;MAAC,CAAC,GACjC;QACED,SAAS,EAAE,CACT;UAACC,MAAM,EAAEZ,KAAK,GAAG,CAAC,GAAG,QAAQ,GAAG;QAAO,CAAC,EACxC;UAACa,UAAU,EAAEb,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG;QAAC,CAAC,EAChC;UAACc,UAAU,EAAEd,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG;QAAC,CAAC;MAEpC,CAAC,GACHT,UAAU,GACV;QAACoB,SAAS,EAAE,CAAC;UAACC,MAAM,EAAE;QAAQ,CAAC;MAAC,CAAC,GACjCZ,KAAK,GAAG,CAAC,GACT;QACEW,SAAS,EAAE,CACT;UAACC,MAAM,EAAE;QAAQ,CAAC,EAClB;UAACE,UAAU,EAAEnC,eAAe,GAAG,CAAC,GAAG;QAAE,CAAC;MAE1C,CAAC,GACD,CAAC,CAAC,CACN;MAAAoC,QAAA,EACD3D,IAAI,CAAC4D,cAAc,GAClB5D,IAAI,CAAC4D,cAAc,CAAC,CAAC,GAErBrE,IAAA,CAACP,IAAI;QACH8D,KAAK,EAAE,CACL;UAACe,SAAS,EAAE;QAAQ,CAAC,EACrBzB,GAAG,IAAI;UAACmB,SAAS,EAAE,CAAC;YAACC,MAAM,EAAE;UAAQ,CAAC;QAAC,CAAC,EACxC/B,cAAc,CACd;QACFqC,aAAa,EAAEpC,sBAAuB;QAAAiC,QAAA,EACrCnC,KAAK,IAAI;MAAE,CACR;IACP,CACG,CAAC;EAEX,CAAC;EAED,IAAMuC,mBAAmB,GAAG,SAAtBA,mBAAmBA,CACvBvC,KAAa,EACbC,cAAmB,EACnBmB,KAAa,EACV;IAAA,IAAAoB,sBAAA;IACH,OACEzE,IAAA,CAACR,QAAQ,CAACF,IAAI;MACZiE,KAAK,EAAE,CACL;QACEC,KAAK,EACH,CAAC/C,IAAI,CAACgD,UAAU,IACdnD,KAAK,CAACmD,UAAU,IAChBhD,IAAI,CAACiD,QAAQ,IACbpD,KAAK,CAACoD,QAAQ,IACd,EAAE,IAAI5C,OAAO;QACjB6C,IAAI,EAAE7C,OAAO,GAAG,CAAC,CAAC;QAClB8C,QAAQ,EAAE,UAAU;QACpBC,MAAM,GAAAY,sBAAA,GAAEnE,KAAK,CAACwD,iBAAiB,YAAAW,sBAAA,GAAItC,sBAAsB,GAAG,EAAE;QAC9D4B,MAAM,EACJ,CAACnC,WAAW,GACR,CAAC,EAAE,GACH,CAAC,CAAC,GAAGO,sBAAsB,GAAG,EAAE,GAAGC,wBAAwB,IAC/De,eAAe;QACjBrB,OAAO,EAAED;MACX,CAAC,EACDwB,KAAK,GAAG,CAAC,IAAI;QAACW,SAAS,EAAE,CAAC;UAACC,MAAM,EAAE;QAAQ,CAAC;MAAC,CAAC,EAC9CrC,WAAW,GACPgB,UAAU,GACR;QAACoB,SAAS,EAAE,CAAC;UAACC,MAAM,EAAE;QAAQ,CAAC;MAAC,CAAC,GACjC;QAACD,SAAS,EAAE,CAAC;UAACC,MAAM,EAAE;QAAO,CAAC;MAAC,CAAC,GAClCrB,UAAU,GACV;QAACoB,SAAS,EAAE,CAAC;UAACC,MAAM,EAAE;QAAQ,CAAC;MAAC,CAAC,GACjC,CAAC,CAAC,CACN;MAAAG,QAAA,EACD3D,IAAI,CAAC4D,cAAc,GAClB5D,IAAI,CAAC4D,cAAc,CAAC,CAAC,GAErBrE,IAAA,CAACP,IAAI;QACH8D,KAAK,EAAE,CACL;UAACe,SAAS,EAAE;QAAQ,CAAC,EACrBzB,GAAG,IAAI;UAACmB,SAAS,EAAE,CAAC;YAACC,MAAM,EAAE;UAAQ,CAAC;QAAC,CAAC,EACxC/B,cAAc,CACd;QACFqC,aAAa,EAAEpC,sBAAuB;QAAAiC,QAAA,EACrCnC,KAAK,IAAI;MAAE,CACR;IACP,CACY,CAAC;EAEpB,CAAC;EAED,IAAMyC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAIjE,IAAc,EAAK;IAAA,IAAAkE,IAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,qBAAA,EAAAC,KAAA,EAAAC,KAAA,EAAAC,sBAAA;IAC/C,OACEpF,KAAA,CAAAF,SAAA;MAAAkE,QAAA,GACEpE,IAAA,CAACL,cAAc;QACb4D,KAAK,EAAE,CACL;UACEK,QAAQ,EAAE,UAAU;UACpBJ,KAAK,EAAE,MAAM;UACbK,MAAM,EAAE,MAAM;UACd4B,WAAW,EAAEtE,cAAc,WAAdA,cAAc,GAAI,CAAC;UAChCuE,WAAW,EAAEtE,cAAc;UAC3BuE,YAAY,GAAAhB,IAAA,IAAAC,qBAAA,GAAEnE,IAAI,CAACY,eAAe,YAAAuD,qBAAA,GAAIvD,eAAe,YAAAsD,IAAA,GAAI,CAAC;UAC1DiB,mBAAmB,GAAAf,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GACjBtE,IAAI,CAACa,sBAAsB,YAAAyD,qBAAA,GAC3BzD,sBAAsB,YAAAwD,KAAA,GACtBrE,IAAI,CAACY,eAAe,YAAAwD,KAAA,GACpBxD,eAAe;UACjBwE,oBAAoB,GAAAb,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GAClBzE,IAAI,CAACc,uBAAuB,YAAA2D,qBAAA,GAC5B3D,uBAAuB,YAAA0D,KAAA,GACvBxE,IAAI,CAACY,eAAe,YAAA2D,KAAA,GACpB3D,eAAe;UACjByE,sBAAsB,GAAAX,KAAA,IAAAC,KAAA,IAAAC,qBAAA,GACpB5E,IAAI,CAACe,yBAAyB,YAAA6D,qBAAA,GAC9B7D,yBAAyB,YAAA4D,KAAA,GACzB3E,IAAI,CAACY,eAAe,YAAA8D,KAAA,GACpB9D,eAAe;UACjB0E,uBAAuB,GAAAT,KAAA,IAAAC,KAAA,IAAAC,sBAAA,GACrB/E,IAAI,CAACgB,0BAA0B,YAAA+D,sBAAA,GAC/B/D,0BAA0B,YAAA8D,KAAA,GAC1B9E,IAAI,CAACY,eAAe,YAAAiE,KAAA,GACpBjE;QACJ,CAAC,EACDf,KAAK,CAAC0F,aAAa,IAAI;UACrBF,sBAAsB,EACpB,CAACrF,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IAAI,CAAC;UAC7CqC,uBAAuB,EACrB,CAACtF,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IAAI;QAC9C,CAAC,EACDpD,KAAK,CAAC2F,UAAU,IAAI;UAClBL,mBAAmB,EACjBnF,IAAI,CAACyF,SAAS,KAAK,CAAC,GAChB,CAAC,GACDzF,IAAI,CAACyF,SAAS,IAAI5F,KAAK,CAAC4F,SAAS,IAAI,CAAC;UAC5CL,oBAAoB,EAClBpF,IAAI,CAACyF,SAAS,KAAK,CAAC,GAChB,CAAC,GACDzF,IAAI,CAACyF,SAAS,IAAI5F,KAAK,CAAC4F,SAAS,IAAI;QAC7C,CAAC,EACD5F,KAAK,CAAC6F,UAAU,IAAI;UAClBP,mBAAmB,EAAE,CAACnF,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IAAI,CAAC;UAChEmC,oBAAoB,EAAE,CAACpF,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IAAI;QAClE,CAAC,CACD;QACF0C,KAAK,EAAE;UAACC,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAC,CAAE;QACpBC,GAAG,EAAE;UAACF,CAAC,EAAE,CAAC;UAAEC,CAAC,EAAE;QAAC,CAAE;QAClBE,MAAM,EAAE,CACN/F,IAAI,CAACgG,aAAa,IAAInG,KAAK,CAACmG,aAAa,IAAI,OAAO,EACpDhG,IAAI,CAACiG,UAAU,IAAIpG,KAAK,CAACoG,UAAU,IAAI,OAAO,CAC9C;QAAAtC,QAAA,EACD9D,KAAK,CAAC2F,UAAU,IAAIxF,IAAI,CAAC4C,KAAK,GAC7BrD,IAAA,CAACH,GAAG;UACF8G,oBAAoB,EAAElG,IAAI,CAACmG,YAAa;UACxCC,qBAAqB,EAAEvG,KAAK,CAACsG,YAAa;UAC1CE,gBAAgB,EAAErG,IAAI,CAACsG,QAAS;UAChCC,iBAAiB,EAAE1G,KAAK,CAACyG,QAAS;UAClCE,iBAAiB,EAAExG,IAAI,CAACyF,SAAU;UAClCgB,kBAAkB,EAAE5G,KAAK,CAAC4F;QAAU,CACrC,CAAC,GACA;MAAI,CACM,CAAC,EAChB,CAACzF,IAAI,CAAC0G,oBAAoB,IAAI7G,KAAK,CAAC6G,oBAAoB,KACvDnH,IAAA,CAACF,oBAAoB;QACnBsH,4BAA4B,EAAE3G,IAAI,CAAC0G,oBAAqB;QACxDE,6BAA6B,EAAE/G,KAAK,CAAC6G,oBAAqB;QAC1DG,iBAAiB,EAAE7G,IAAI,CAAC8G,SAAU;QAClCC,kBAAkB,EAAElH,KAAK,CAACiH;MAAU,CACrC,CACF,EACA,CAAC9G,IAAI,CAACgH,iBAAiB,IAAI1E,oBAAoB,KAC9C/C,IAAA,CAACV,IAAI;QACHiE,KAAK,EAAE,CACL;UACEK,QAAQ,EAAE,UAAU;UACpB8D,GAAG,EAAE,CAACjH,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IAAI,CAAC,CAAC;UACjDG,MAAM,EAAEpD,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE;UAC7CF,KAAK,EAAE/C,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE;UAC5CiE,cAAc,EACX/E,UAAU,IAAI,CAACE,cAAc,IAAKrC,IAAI,CAAC4C,KAAK,GAAG,CAAC,GAC7C,QAAQ,GACR,UAAU;UAChBuE,UAAU,EAAE;QACd,CAAC,EACDnH,IAAI,CAAC4C,KAAK,GAAG,CAAC,IAAI;UAACW,SAAS,EAAE,CAAC;YAACC,MAAM,EAAE;UAAQ,CAAC;QAAC,CAAC,EACnDrB,UAAU,IACR,CAACE,cAAc,IAAI;UAACkB,SAAS,EAAE,CAAC;YAACC,MAAM,EAAE;UAAQ,CAAC;QAAC,CAAC,EACtDjB,sBAAsB,WAAtBA,sBAAsB,GAAIvC,IAAI,CAACuC,sBAAsB,CACrD;QAAAoB,QAAA,EACDrB,oBAAoB,GACnB/C,IAAA,CAACP,IAAI;UAAC8D,KAAK,EAAEN,iBAAkB;UAAAmB,QAAA,EAAE3D,IAAI,CAAC4C;QAAK,CAAO,CAAC,GAEnD5C,IAAI,CAACgH,iBAAiB,oBAAtBhH,IAAI,CAACgH,iBAAiB,CAAG;MAC1B,CACG,CACP;IAAA,CACD,CAAC;EAEP,CAAC;EAED,IAAMI,SAAS,GAAGC,IAAI,CAACC,GAAG,CACxBlH,SAAS,EACRiH,IAAI,CAACE,GAAG,CAACvH,IAAI,CAAC4C,KAAK,CAAC,IAAI1C,eAAe,IAAI,GAAG,CAAC,IAAKC,QAAQ,IAAI,GAAG,CAAC,IAClE+B,cAAc,WAAdA,cAAc,GAAI,CAAC,CACxB,CAAC;EAED,IAAIsF,WAAW,GAAGzF,cAAc;EAChC,KAAK,IAAI0F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGxH,KAAK,EAAEwH,CAAC,EAAE,EAAE;IAAA,IAAAC,eAAA;IAC9BF,WAAW,IACT,EAAAE,eAAA,GAAClH,IAAI,CAACiH,CAAC,CAAC,CAACpH,OAAO,YAAAqH,eAAA,GAAIpH,WAAW,KAC9BE,IAAI,CAACiH,CAAC,CAAC,CAACxE,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,CAAC;EAC9C;EAEA,IAAM0E,eAAe,GAAG,CACtB;IAEEC,YAAY,EAAE,EAAE,GAAGlF,eAAe,GAAGf,wBAAwB;IAC7DoB,KAAK,EAAE/C,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE;IAC5CG,MAAM,EAAEgE,SAAS;IACjBS,WAAW,EAAExH;EACf,CAAC,EACDL,IAAI,CAAC4C,KAAK,GAAG,CAAC,GACV;IACEW,SAAS,EAAE,CACT;MACEG,UAAU,EACP2D,IAAI,CAACE,GAAG,CAACvH,IAAI,CAAC4C,KAAK,CAAC,IAAI1C,eAAe,IAAI,GAAG,CAAC,IAC/CC,QAAQ,IAAI,GAAG;IACpB,CAAC,EACD;MAAC2H,OAAO,EAAE;IAAQ,CAAC;EAEvB,CAAC,GACDrF,aAAa,GACb;IACEc,SAAS,EAAE,CACT;MACEG,UAAU,EACR,CAACxD,eAAe,IAAI,GAAG,KACtBkH,SAAS,GAAG,EAAE,GAAGzF,wBAAwB;IAC9C,CAAC;EAEL,CAAC,GACD,IAAI,EAGRpB,IAAI,KAAK,OAAO,IAAI;IAACwH,MAAM,EAAEvH,IAAI,CAACwH,MAAM,GAAG/H;EAAK,CAAC,CAClD;EAED,IAAMgI,aAAa,GACjBjI,IAAI,CAACkI,YAAY,IACjBrI,KAAK,CAACqI,YAAY,IACjBzF,aAAa,IAAIA,aAAa,CAAC0F,YAAY,KAAK,IAAK;EAExD,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;IACvB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsBA,CAAIC,UAAU,EAAEC,WAAW;MAAA,OACrDhJ,IAAA,CAACJ,sBAAsB;QACrBuH,oBAAoB,EAAE7G,KAAK,CAAC6G,oBAAqB;QACjDI,SAAS,EAAEjH,KAAK,CAACiH,SAAU;QAC3B7D,QAAQ,EAAEpD,KAAK,CAACoD,QAAQ,IAAI,EAAG;QAC/BxC,QAAQ,EAAEA,QAAS;QACnBT,IAAI,EAAEA,IAAK;QACXqB,OAAO,EAAEA,OAAQ;QACjBC,iBAAiB,EAAEA,iBAAiB,IAAI,GAAI;QAC5CiE,aAAa,EAAE1F,KAAK,CAAC0F,aAAa,IAAI,KAAM;QAC5CG,UAAU,EAAE7F,KAAK,CAAC6F,UAAU,IAAI,KAAM;QACtC4C,UAAU,EAAEA,UAAW;QACvBC,WAAW,EAAEA,WAAY;QACzBvC,aAAa,EAAEsC,UAAU,GAAGE,SAAS,GAAG3I,KAAK,CAACmG,aAAc;QAC5DC,UAAU,EAAEpG,KAAK,CAACoG,UAAU,IAAI,OAAQ;QACxC/F,eAAe,EAAEA,eAAgB;QACjCC,QAAQ,EAAEA,QAAS;QACnBiD,MAAM,EAAEgE,SAAU;QAClBhH,SAAS,EAAEA,SAAS,WAATA,SAAS,GAAI,CAAE;QAC1BsC,eAAe,EAAEA,eAAgB;QACjC8C,UAAU,EAAE3F,KAAK,CAAC2F,UAAW;QAC7BW,YAAY,EAAEtG,KAAK,CAACsG,YAAa;QACjCG,QAAQ,EAAEzG,KAAK,CAACyG,QAAS;QACzBb,SAAS,EAAE5F,KAAK,CAAC4F,SAAU;QAC3BtD,UAAU,EAAEA,UAAW;QACvBE,cAAc,EAAEA,cAAe;QAC/BC,oBAAoB,EAAE,CAAC,CAACA,oBAAqB;QAC7CC,sBAAsB,EAAEA,sBAAuB;QAC/CC,iBAAiB,EAAEA,iBAAkB;QACrC9B,cAAc,EAAEA,cAAe;QAC/BC,cAAc,EAAEA,cAAe;QAC/BC,eAAe,EAAEf,KAAK,CAACe,eAAe,IAAI,CAAE;QAC5CC,sBAAsB,EAAEA,sBAAuB;QAC/CC,uBAAuB,EAAEA,uBAAwB;QACjDC,yBAAyB,EAAEA,yBAA0B;QACrDC,0BAA0B,EAAEA;MAA2B,CACxD,CAAC;IAAA,CACH;IACD,OACErB,KAAA,CAAAF,SAAA;MAAAkE,QAAA,GACG,CAAC9D,KAAK,CAAC4I,gBAAgB,IAAIzI,IAAI,CAAC0I,cAAc,KAC7CnJ,IAAA,CAACV,IAAI;QACHiE,KAAK,EAAE;UACLiF,MAAM,EAAE,CAAC;UACT5E,QAAQ,EAAE,UAAU;UACpBC,MAAM,EAAEvD,KAAK,CAAC8I,kBAAkB;UAChC5F,KAAK,EAAElD,KAAK,CAAC+I,iBAAiB;UAC9BtF,MAAM,EAAEzD,KAAK,CAAC8I,kBAAkB,GAAG,CAAC,CAAC;UACrCzF,IAAI,EACF,CAAC,CAAClD,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IACrCpD,KAAK,CAAC+I,iBAAiB,IACzB,CAAC;UACHC,eAAe,EAAEhJ,KAAK,CAACiJ;QACzB;MAAE,CACH,CACF,EACA7H,QAAQ,GACP1B,IAAA,CAACN,iBAAiB;QAChByH,oBAAoB,EAClB1G,IAAI,CAAC0G,oBAAoB,IAAI7G,KAAK,CAAC6G,oBACpC;QACDI,SAAS,EAAE9G,IAAI,CAAC8G,SAAS,IAAIjH,KAAK,CAACiH,SAAU;QAC7C/D,KAAK,EAAE/C,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAG;QAC7CxC,QAAQ,EAAEA,QAAS;QACnBT,IAAI,EAAEA,IAAK;QACX+I,SAAS,EACP/I,IAAI,CAAC+I,SAAS,IACdlJ,KAAK,CAACkJ,SAAS,IACf,CAAC/I,IAAI,CAACiD,QAAQ,IAAIpD,KAAK,CAACoD,QAAQ,IAAI,EAAE,IAAI,CAC3C;QACD1C,IAAI,EAAEA,IAAI,IAAI,MAAO;QACrB0F,UAAU,EAAEjG,IAAI,CAACiG,UAAU,IAAIpG,KAAK,CAACoG,UAAU,IAAI,EAAG;QACtD+C,SAAS,EAAEhJ,IAAI,CAACgJ,SAAS,IAAInJ,KAAK,CAACmJ,SAAS,IAAI,EAAG;QACnDC,QAAQ,EAAEjJ,IAAI,CAACiJ,QAAQ,IAAIpJ,KAAK,CAACoJ,QAAQ,IAAI,EAAG;QAChDC,YAAY,EAAElJ,IAAI,CAACkJ,YAAY,IAAIrJ,KAAK,CAACqJ,YAAY,IAAI,KAAM;QAC/DlD,aAAa,EAAEhG,IAAI,CAACgG,aAAa,IAAInG,KAAK,CAACmG,aAAc;QACzD3E,OAAO,EAAEA,OAAO,IAAI,CAAE;QACtB+B,MAAM,EAAEgE,SAAU;QAClB/E,cAAc,EAAEA,cAAe;QAC/BC,oBAAoB,EAAE,CAAC,CAACA,oBAAqB;QAC7CC,sBAAsB,EAAEA,sBAAuB;QAC/CC,iBAAiB,EAAEA,iBAAkB;QACrCL,UAAU,EAAEA,UAAW;QACvBjB,UAAU,EAAEA,UAAW;QACvBI,iBAAiB,EAAEA,iBAAiB,IAAI;MAAI,CAC7C,CAAC,GACAtB,IAAI,CAACkJ,YAAY,IAAIrJ,KAAK,CAACqJ,YAAY,GACzChI,UAAU,GACRmH,sBAAsB,CAAC,KAAK,EAAE,KAAK,CAAC,GAEpCpE,oBAAoB,CAACjE,IAAI,CAC1B,GACCkB,UAAU,GACZmH,sBAAsB,CAAC,IAAI,EAAE,KAAK,CAAC,GAEnCA,sBAAsB,CAAC,IAAI,EAAE,IAAI,CAClC,EACAnH,UAAU,GACP6C,mBAAmB,CAACvC,KAAK,EAAEC,cAAc,EAAEzB,IAAI,CAAC4C,KAAK,CAAC,GACtDD,WAAW,CAACnB,KAAK,EAAEC,cAAc,EAAEzB,IAAI,CAAC4C,KAAK,CAAC;IAAA,CAClD,CAAC;EAEP,CAAC;EAED,OACEjD,KAAA,CAAAF,SAAA;IAAAkE,QAAA,GACGsE,aAAa,GACZ1I,IAAA,CAACV,IAAI;MAACsK,aAAa,EAAC,MAAM;MAACrG,KAAK,EAAE6E,eAAgB;MAAAhE,QAAA,EAC/CyE,UAAU,CAAC;IAAC,CACT,CAAC,GAEP7I,IAAA,CAACT,gBAAgB;MACfsK,aAAa,EAAEvJ,KAAK,CAACuJ,aAAa,IAAI,GAAI;MAC1CC,OAAO,EAAE,SAAAA,QAAA,EAAM;QACb,IAAIzH,aAAa,EAAE;UACjBK,gBAAgB,CAAChC,KAAK,CAAC;QACzB;QACAD,IAAI,CAACqJ,OAAO,GACRrJ,IAAI,CAACqJ,OAAO,CAAC,CAAC,GACdxJ,KAAK,CAACwJ,OAAO,GACbxJ,KAAK,CAACwJ,OAAO,CAACrJ,IAAI,EAAEC,KAAK,CAAC,GAC1B,IAAI;MACV,CAAE;MACF6C,KAAK,EAAE6E,eAAgB;MAAAhE,QAAA,EACtByE,UAAU,CAAC;IAAC,CACG,CACnB,EACAxG,aAAa,IAAII,aAAa,KAAK/B,KAAK,IACvCV,IAAA,CAACV,IAAI;MACHiE,KAAK,EAAE;QACLK,QAAQ,EAAE,UAAU;QACpBG,MAAM,EAAE8D,SAAS,GAAG,EAAE;QACtBlE,IAAI,EACFjD,KAAK,KAAKO,IAAI,CAACwH,MAAM,GAAG,CAAC,GACrBR,WAAW,GAAG1F,4BAA4B,GAC1C0F,WAAW,KAAA1H,MAAA,IAAAC,qBAAA,GACVC,IAAI,oBAAJA,IAAI,CAAE6B,mBAAmB,YAAA9B,qBAAA,GAAI8B,mBAAmB,YAAA/B,MAAA,GAAI,CAAC,CAAC;QAC7DiI,MAAM,EAAE;MACV,CAAE;MAAApE,QAAA,EACD/B,aAAa,CAAC5B,IAAI,EAAEC,KAAK;IAAC,CACvB,CACP;EAAA,CACD,CAAC;AAEP,CAAC;AAED,eAAeL,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}