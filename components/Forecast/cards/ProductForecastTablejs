import { View, StyleSheet, StatusBar, Image, TouchableOpacity } from "react-native";
import React, {useEffect} from "react";
import { useRouter } from "expo-router";
import { Avatar, Button, Card, Text, DataTable } from "react-native-paper";
import { COLORS, FONT, SIZES } from "../../../constants";
import CustomDivider from "../../divider/customdivider";
import { useDemand } from "../../../hooks/useDemand";


const ForecastTable = () => {
  const {fetchProdName,
    ProdName,
    isLoading,
    error,
    refetch, } =
    useDemand();
  const router = useRouter();

  const handleFetchData = async () => {
    fetchProdName();
  };

  useEffect(() => {
    handleFetchData();
    console.log("Sales Performance:", ProdName);
  }, []);

  return (
    <Card style={styles.container}>
      <Card.Title
        title="Products"
        titleStyle={[
          styles.textStyle,
          { fontFamily: FONT.bold, fontSize: SIZES.medium, marginBottom: -5 },
        ]}
      />
      <CustomDivider dividerColor={COLORS.gray} />
      <View style={{ flexDirection: "row", justifyContent: "space-between" }}>
        <DataTable style={{ justifyContent: "center", alignSelf: "center" }}>
          <DataTable.Header>
            <DataTable.Title textStyle={styles.titleStyle}>
              Product ID
            </DataTable.Title>
            <DataTable.Title numeric textStyle={styles.titleStyle}>
              Product Name
            </DataTable.Title>
            <DataTable.Title numeric textStyle={styles.titleStyle}>
              Projected Demand
            </DataTable.Title>
          </DataTable.Header>
            {
              isLoading ? (
                <View style={styles.loadingContainer}>
                  <ActivityIndicator color={COLORS.primary} size={"small"} />
                </View>
              ) : (
                ProdName.slice(-3).map((data, index) => (
              <DataTable.Row key={index}>
                <DataTable.Cell numeric textStyle={styles.textStyle}>
                  {`$${data.product_id.toLocaleString()}`}
                </DataTable.Cell>
                <DataTable.Cell textStyle={styles.textStyle}>
                  {data.product_name}
                </DataTable.Cell>
                <DataTable.Cell numeric textStyle={styles.textStyle}>
                  {`$${data.predicted_demand.toLocaleString()}`}
                </DataTable.Cell>
              </DataTable.Row>
              )))
            }
            <DataTable.Row>
              <DataTable.Cell textStyle={styles.textStyle}> #{data[0].product_id}</DataTable.Cell>
              <DataTable.Cell numeric textStyle={styles.textStyle}> {data[0].product_name}</DataTable.Cell>
              <DataTable.Cell numeric textStyle={styles.textStyle}> ${data[0].predicted_demand}</DataTable.Cell>
            </DataTable.Row>
        </DataTable>
      </View>
    </Card>
  );
};

const styles = StyleSheet.create({
  container: {
    alignContent: "center",
    backgroundColor: COLORS.gray2,
    marginHorizontal: 10,
    height: "auto",
    justifyContent: "center",
    marginBottom: 10,
    paddingBottom: 15,
  },
  titleStyle: {
    color: COLORS.white,
    fontFamily: FONT.bold,
    justifyContent: "center",
    fontSize: SIZES.medium,
  },
  textStyle: {
    color: COLORS.white,
    fontFamily: FONT.regular,
    justifyContent: "center",
    alignItems: 'center',
    fontSize: SIZES.small,
    justifyContent: 'space-between',
  },
  textPercent: {
    color: COLORS.tertiary,
    fontFamily: FONT.regular,
    justifyContent: "center",
    fontSize: SIZES.small,
    justifyContent: 'space-between',
  },
  contentStyle: {
    justifyContent: "center", // Center the cell text horizontally
  },
});

export default ForecastTable;
